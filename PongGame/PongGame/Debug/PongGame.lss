
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007c  00800100  00001724  000017b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001724  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  0080017c  0080017c  00001834  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001834  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001890  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d0  00000000  00000000  000018cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a8a  00000000  00000000  00001a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000127f  00000000  00000000  00004526  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011ef  00000000  00000000  000057a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000054c  00000000  00000000  00006994  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000790  00000000  00000000  00006ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010bf  00000000  00000000  00007670  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b8  00000000  00000000  0000872f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 0c 03 	jmp	0x618	; 0x618 <__vector_1>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 e6 02 	jmp	0x5cc	; 0x5cc <__vector_3>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__vector_15>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 90 02 	jmp	0x520	; 0x520 <__vector_19>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <oled_print_arrow+0x4c>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e4 e2       	ldi	r30, 0x24	; 36
     37c:	f7 e1       	ldi	r31, 0x17	; 23
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	ac 37       	cpi	r26, 0x7C	; 124
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	ac e7       	ldi	r26, 0x7C	; 124
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	ae 38       	cpi	r26, 0x8E	; 142
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 46 03 	call	0x68c	; 0x68c <main>
     39e:	0c 94 90 0b 	jmp	0x1720	; 0x1720 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <PWM_Init>:
#include "ADC_driver.h"

void PWM_Init()
{
     3a6:	cf 92       	push	r12
     3a8:	df 92       	push	r13
     3aa:	ef 92       	push	r14
     3ac:	ff 92       	push	r15
	set_bit(DDRD, DDD5);
     3ae:	81 b3       	in	r24, 0x11	; 17
     3b0:	80 62       	ori	r24, 0x20	; 32
     3b2:	81 bb       	out	0x11, r24	; 17
	
	/* Fast PWM, TOP value = ICR1 */
	set_bit(TCCR1B, WGM13);
     3b4:	8e b5       	in	r24, 0x2e	; 46
     3b6:	80 61       	ori	r24, 0x10	; 16
     3b8:	8e bd       	out	0x2e, r24	; 46
	set_bit(TCCR1B, WGM12);
     3ba:	8e b5       	in	r24, 0x2e	; 46
     3bc:	88 60       	ori	r24, 0x08	; 8
     3be:	8e bd       	out	0x2e, r24	; 46
	set_bit(TCCR1A, WGM11);
     3c0:	8f b5       	in	r24, 0x2f	; 47
     3c2:	82 60       	ori	r24, 0x02	; 2
     3c4:	8f bd       	out	0x2f, r24	; 47
	clear_bit(TCCR1A, WGM10);
     3c6:	8f b5       	in	r24, 0x2f	; 47
     3c8:	8e 7f       	andi	r24, 0xFE	; 254
     3ca:	8f bd       	out	0x2f, r24	; 47
	
	set_bit(TCCR1A, COM1A1);
     3cc:	8f b5       	in	r24, 0x2f	; 47
     3ce:	80 68       	ori	r24, 0x80	; 128
     3d0:	8f bd       	out	0x2f, r24	; 47
	clear_bit(TCCR1A, COM1A0);
     3d2:	8f b5       	in	r24, 0x2f	; 47
     3d4:	8f 7b       	andi	r24, 0xBF	; 191
     3d6:	8f bd       	out	0x2f, r24	; 47
	
	set_bit(TIMSK, TOIE1);
     3d8:	89 b7       	in	r24, 0x39	; 57
     3da:	80 68       	ori	r24, 0x80	; 128
     3dc:	89 bf       	out	0x39, r24	; 57
	
	/* Configuration of the width of the PWM */
	
	ICR1 = 1;
     3de:	81 e0       	ldi	r24, 0x01	; 1
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	95 bd       	out	0x25, r25	; 37
     3e4:	84 bd       	out	0x24, r24	; 36
		
	OCR1A = (dutyCircle/100.0)*ICR1;
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	48 ec       	ldi	r20, 0xC8	; 200
     3ec:	52 e4       	ldi	r21, 0x42	; 66
     3ee:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <__data_end>
     3f2:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <__data_end+0x1>
     3f6:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__data_end+0x2>
     3fa:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <__data_end+0x3>
     3fe:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__divsf3>
     402:	6b 01       	movw	r12, r22
     404:	7c 01       	movw	r14, r24
     406:	64 b5       	in	r22, 0x24	; 36
     408:	75 b5       	in	r23, 0x25	; 37
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	0e 94 5e 07 	call	0xebc	; 0xebc <__floatunsisf>
     412:	a7 01       	movw	r20, r14
     414:	96 01       	movw	r18, r12
     416:	0e 94 15 08 	call	0x102a	; 0x102a <__mulsf3>
     41a:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__fixunssfsi>
     41e:	7b bd       	out	0x2b, r23	; 43
     420:	6a bd       	out	0x2a, r22	; 42
	
	/*  */
	
	clear_bit(TCCR1B, CS12);
     422:	8e b5       	in	r24, 0x2e	; 46
     424:	8b 7f       	andi	r24, 0xFB	; 251
     426:	8e bd       	out	0x2e, r24	; 46
	clear_bit(TCCR1B, CS11);
     428:	8e b5       	in	r24, 0x2e	; 46
     42a:	8d 7f       	andi	r24, 0xFD	; 253
     42c:	8e bd       	out	0x2e, r24	; 46
	set_bit(TCCR1B, CS10);
     42e:	8e b5       	in	r24, 0x2e	; 46
     430:	81 60       	ori	r24, 0x01	; 1
     432:	8e bd       	out	0x2e, r24	; 46
}
     434:	ff 90       	pop	r15
     436:	ef 90       	pop	r14
     438:	df 90       	pop	r13
     43a:	cf 90       	pop	r12
     43c:	08 95       	ret

0000043e <ADC_init>:


void ADC_init(void)
{
	//set clock out on MC
	set_bit(DDRD, DDD5);
     43e:	81 b3       	in	r24, 0x11	; 17
     440:	80 62       	ori	r24, 0x20	; 32
     442:	81 bb       	out	0x11, r24	; 17
	set_bit(DDRD, DDD6); /* Enable WR output signal */
     444:	81 b3       	in	r24, 0x11	; 17
     446:	80 64       	ori	r24, 0x40	; 64
     448:	81 bb       	out	0x11, r24	; 17
	set_bit(DDRD, DDD7); /* Enable RD output signal */
     44a:	81 b3       	in	r24, 0x11	; 17
     44c:	80 68       	ori	r24, 0x80	; 128
     44e:	81 bb       	out	0x11, r24	; 17
	
	clear_bit(DDRE, DDE0); /* Set pin PE0 as INPUT to use the INT2 Interrupt for BUSY signal from ADC */
     450:	86 b1       	in	r24, 0x06	; 6
     452:	8e 7f       	andi	r24, 0xFE	; 254
     454:	86 b9       	out	0x06, r24	; 6
	
	set_bit(EMCUCR, ISC2); /* Trigger interrupt on rising edge */
     456:	86 b7       	in	r24, 0x36	; 54
     458:	81 60       	ori	r24, 0x01	; 1
     45a:	86 bf       	out	0x36, r24	; 54
	set_bit(GICR, INT2); /* Enable INT2 interrupt */ 
     45c:	8b b7       	in	r24, 0x3b	; 59
     45e:	80 62       	ori	r24, 0x20	; 32
     460:	8b bf       	out	0x3b, r24	; 59
     462:	08 95       	ret

00000464 <ADC_read>:
}

void ADC_read(uint8_t* ADC_data)
{
     464:	ef 92       	push	r14
     466:	ff 92       	push	r15
     468:	0f 93       	push	r16
     46a:	1f 93       	push	r17
     46c:	cf 93       	push	r28
     46e:	df 93       	push	r29
     470:	7c 01       	movw	r14, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     472:	00 00       	nop
	
	// uint8_t ADC_data [4]= {0,0,0,0};

	_delay_ms(t_BRD);
	
	for(int i = 0; i<channels;++i)
     474:	c0 e0       	ldi	r28, 0x00	; 0
     476:	d0 e0       	ldi	r29, 0x00	; 0
     478:	0d c0       	rjmp	.+26     	; 0x494 <ADC_read+0x30>
	{
		ADC_data[i] = xmem_read(0x1700);
     47a:	87 01       	movw	r16, r14
     47c:	0c 0f       	add	r16, r28
     47e:	1d 1f       	adc	r17, r29
     480:	80 e0       	ldi	r24, 0x00	; 0
     482:	97 e1       	ldi	r25, 0x17	; 23
     484:	0e 94 7d 02 	call	0x4fa	; 0x4fa <xmem_read>
     488:	f8 01       	movw	r30, r16
     48a:	80 83       	st	Z, r24
     48c:	f2 e0       	ldi	r31, 0x02	; 2
     48e:	fa 95       	dec	r31
     490:	f1 f7       	brne	.-4      	; 0x48e <ADC_read+0x2a>
	
	// uint8_t ADC_data [4]= {0,0,0,0};

	_delay_ms(t_BRD);
	
	for(int i = 0; i<channels;++i)
     492:	21 96       	adiw	r28, 0x01	; 1
     494:	c4 30       	cpi	r28, 0x04	; 4
     496:	d1 05       	cpc	r29, r1
     498:	84 f3       	brlt	.-32     	; 0x47a <ADC_read+0x16>
	
	}
	
	//printf( "ADC_data[%d] = %d, ADC_data[%d] = %d\n", 0, (int)ADC_data [0],3, (int)ADC_data [3]);

}
     49a:	df 91       	pop	r29
     49c:	cf 91       	pop	r28
     49e:	1f 91       	pop	r17
     4a0:	0f 91       	pop	r16
     4a2:	ff 90       	pop	r15
     4a4:	ef 90       	pop	r14
     4a6:	08 95       	ret

000004a8 <uart_putchar>:

unsigned char USART_RX(){
	while ( !( UCSR0A & (1 << RXC0) ));
	
	return UDR0;	
}
     4a8:	cf 93       	push	r28
     4aa:	c8 2f       	mov	r28, r24
     4ac:	8a 30       	cpi	r24, 0x0A	; 10
     4ae:	19 f4       	brne	.+6      	; 0x4b6 <uart_putchar+0xe>
     4b0:	8d e0       	ldi	r24, 0x0D	; 13
     4b2:	0e 94 54 02 	call	0x4a8	; 0x4a8 <uart_putchar>
     4b6:	5d 9b       	sbis	0x0b, 5	; 11
     4b8:	fe cf       	rjmp	.-4      	; 0x4b6 <uart_putchar+0xe>
     4ba:	cc b9       	out	0x0c, r28	; 12
     4bc:	80 e0       	ldi	r24, 0x00	; 0
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	cf 91       	pop	r28
     4c2:	08 95       	ret

000004c4 <USART_Init>:
     4c4:	90 bd       	out	0x20, r25	; 32
     4c6:	89 b9       	out	0x09, r24	; 9
     4c8:	88 e1       	ldi	r24, 0x18	; 24
     4ca:	8a b9       	out	0x0a, r24	; 10
     4cc:	8a b1       	in	r24, 0x0a	; 10
     4ce:	80 68       	ori	r24, 0x80	; 128
     4d0:	8a b9       	out	0x0a, r24	; 10
     4d2:	8e e8       	ldi	r24, 0x8E	; 142
     4d4:	80 bd       	out	0x20, r24	; 32
     4d6:	08 95       	ret

000004d8 <xmem_init>:
{
	//set_bit(SFIOR, XMM2);
	//clear_bit(SFIOR, XMM1);
	//clear_bit(SFIOR, XMM0);
	//set_bit(MCUCR, SRE);
	MCUCR |= (1<< SRE); //THIS MFER
     4d8:	85 b7       	in	r24, 0x35	; 53
     4da:	80 68       	ori	r24, 0x80	; 128
     4dc:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<< XMM2);
     4de:	80 b7       	in	r24, 0x30	; 48
     4e0:	80 62       	ori	r24, 0x20	; 32
     4e2:	80 bf       	out	0x30, r24	; 48
     4e4:	08 95       	ret

000004e6 <xmem_write>:
}

void xmem_write (uint8_t data , uint16_t addr)
{

	stdout = &mystdout;
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	31 e0       	ldi	r19, 0x01	; 1
     4ea:	30 93 8b 01 	sts	0x018B, r19	; 0x80018b <__iob+0x3>
     4ee:	20 93 8a 01 	sts	0x018A, r18	; 0x80018a <__iob+0x2>
	volatile char * ext_mem = (char *) BASE_ADDRESS;
	ext_mem [addr]= data ;
     4f2:	fb 01       	movw	r30, r22
     4f4:	80 83       	st	Z, r24
	uint8_t retreived_value = ext_mem[addr];
     4f6:	80 81       	ld	r24, Z
     4f8:	08 95       	ret

000004fa <xmem_read>:
}

uint8_t xmem_read (uint16_t addr)
{
	volatile char * ext_mem = (char *) BASE_ADDRESS;
	uint8_t ret_val = ext_mem [addr];
     4fa:	fc 01       	movw	r30, r24
     4fc:	80 81       	ld	r24, Z
	return ret_val ;
}
     4fe:	08 95       	ret

00000500 <pushButton_init>:

void pushButton_init()
{
	clear_bit(DDRD, DDD2); // set PD2 as Input to use the INT0 Interrupt for Joystick button
     500:	81 b3       	in	r24, 0x11	; 17
     502:	8b 7f       	andi	r24, 0xFB	; 251
     504:	81 bb       	out	0x11, r24	; 17
	
	set_bit(PORTD, DDD2);  // Set pull-up resistor ON -> high level on input
     506:	82 b3       	in	r24, 0x12	; 18
     508:	84 60       	ori	r24, 0x04	; 4
     50a:	82 bb       	out	0x12, r24	; 18
	
	clear_bit(MCUCR, ISC00); /* Trigger interrupt on falling edge */
     50c:	85 b7       	in	r24, 0x35	; 53
     50e:	8e 7f       	andi	r24, 0xFE	; 254
     510:	85 bf       	out	0x35, r24	; 53
	set_bit(MCUCR, ISC01);
     512:	85 b7       	in	r24, 0x35	; 53
     514:	82 60       	ori	r24, 0x02	; 2
     516:	85 bf       	out	0x35, r24	; 53
	
	set_bit(GICR, INT0); /* Enable INT0 interrupt */
     518:	8b b7       	in	r24, 0x3b	; 59
     51a:	80 64       	ori	r24, 0x40	; 64
     51c:	8b bf       	out	0x3b, r24	; 59
     51e:	08 95       	ret

00000520 <__vector_19>:

/************************************************************************/
/* Interrupt catching byte reception for UART communication             */
/************************************************************************/
ISR(USART0_RXC_vect)
{
     520:	1f 92       	push	r1
     522:	0f 92       	push	r0
     524:	0f b6       	in	r0, 0x3f	; 63
     526:	0f 92       	push	r0
     528:	11 24       	eor	r1, r1
     52a:	8f 93       	push	r24
	char ReceivedByte;
	ReceivedByte = UDR0; // Fetch the received byte value into the variable "ByteReceived"
     52c:	8c b1       	in	r24, 0x0c	; 12
	UDR0 = ReceivedByte; // Echo back the received byte back to the computer
     52e:	8c b9       	out	0x0c, r24	; 12
}
     530:	8f 91       	pop	r24
     532:	0f 90       	pop	r0
     534:	0f be       	out	0x3f, r0	; 63
     536:	0f 90       	pop	r0
     538:	1f 90       	pop	r1
     53a:	18 95       	reti

0000053c <__vector_15>:
/************************************************************************/
/* Interrupt catching the timer counter for PWM clock                   */
/************************************************************************/
ISR(TIMER1_OVF_vect)
{
     53c:	1f 92       	push	r1
     53e:	0f 92       	push	r0
     540:	0f b6       	in	r0, 0x3f	; 63
     542:	0f 92       	push	r0
     544:	11 24       	eor	r1, r1
     546:	cf 92       	push	r12
     548:	df 92       	push	r13
     54a:	ef 92       	push	r14
     54c:	ff 92       	push	r15
     54e:	2f 93       	push	r18
     550:	3f 93       	push	r19
     552:	4f 93       	push	r20
     554:	5f 93       	push	r21
     556:	6f 93       	push	r22
     558:	7f 93       	push	r23
     55a:	8f 93       	push	r24
     55c:	9f 93       	push	r25
     55e:	af 93       	push	r26
     560:	bf 93       	push	r27
     562:	ef 93       	push	r30
     564:	ff 93       	push	r31
	OCR1A = (dutyCircle/100.0)*ICR1;
     566:	20 e0       	ldi	r18, 0x00	; 0
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	48 ec       	ldi	r20, 0xC8	; 200
     56c:	52 e4       	ldi	r21, 0x42	; 66
     56e:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <__data_end>
     572:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <__data_end+0x1>
     576:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__data_end+0x2>
     57a:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <__data_end+0x3>
     57e:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__divsf3>
     582:	6b 01       	movw	r12, r22
     584:	7c 01       	movw	r14, r24
     586:	64 b5       	in	r22, 0x24	; 36
     588:	75 b5       	in	r23, 0x25	; 37
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	0e 94 5e 07 	call	0xebc	; 0xebc <__floatunsisf>
     592:	a7 01       	movw	r20, r14
     594:	96 01       	movw	r18, r12
     596:	0e 94 15 08 	call	0x102a	; 0x102a <__mulsf3>
     59a:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__fixunssfsi>
     59e:	7b bd       	out	0x2b, r23	; 43
     5a0:	6a bd       	out	0x2a, r22	; 42
}
     5a2:	ff 91       	pop	r31
     5a4:	ef 91       	pop	r30
     5a6:	bf 91       	pop	r27
     5a8:	af 91       	pop	r26
     5aa:	9f 91       	pop	r25
     5ac:	8f 91       	pop	r24
     5ae:	7f 91       	pop	r23
     5b0:	6f 91       	pop	r22
     5b2:	5f 91       	pop	r21
     5b4:	4f 91       	pop	r20
     5b6:	3f 91       	pop	r19
     5b8:	2f 91       	pop	r18
     5ba:	ff 90       	pop	r15
     5bc:	ef 90       	pop	r14
     5be:	df 90       	pop	r13
     5c0:	cf 90       	pop	r12
     5c2:	0f 90       	pop	r0
     5c4:	0f be       	out	0x3f, r0	; 63
     5c6:	0f 90       	pop	r0
     5c8:	1f 90       	pop	r1
     5ca:	18 95       	reti

000005cc <__vector_3>:

/************************************************************************/
/* Interrupt catching BUSY signal for ADC data read                     */
/************************************************************************/
ISR(INT2_vect)
{
     5cc:	1f 92       	push	r1
     5ce:	0f 92       	push	r0
     5d0:	0f b6       	in	r0, 0x3f	; 63
     5d2:	0f 92       	push	r0
     5d4:	11 24       	eor	r1, r1
     5d6:	2f 93       	push	r18
     5d8:	3f 93       	push	r19
     5da:	4f 93       	push	r20
     5dc:	5f 93       	push	r21
     5de:	6f 93       	push	r22
     5e0:	7f 93       	push	r23
     5e2:	8f 93       	push	r24
     5e4:	9f 93       	push	r25
     5e6:	af 93       	push	r26
     5e8:	bf 93       	push	r27
     5ea:	ef 93       	push	r30
     5ec:	ff 93       	push	r31
	ADC_read(ADC_data);
     5ee:	84 e8       	ldi	r24, 0x84	; 132
     5f0:	91 e0       	ldi	r25, 0x01	; 1
     5f2:	0e 94 32 02 	call	0x464	; 0x464 <ADC_read>
	// xmem_write(0x52, 0x1400);

}
     5f6:	ff 91       	pop	r31
     5f8:	ef 91       	pop	r30
     5fa:	bf 91       	pop	r27
     5fc:	af 91       	pop	r26
     5fe:	9f 91       	pop	r25
     600:	8f 91       	pop	r24
     602:	7f 91       	pop	r23
     604:	6f 91       	pop	r22
     606:	5f 91       	pop	r21
     608:	4f 91       	pop	r20
     60a:	3f 91       	pop	r19
     60c:	2f 91       	pop	r18
     60e:	0f 90       	pop	r0
     610:	0f be       	out	0x3f, r0	; 63
     612:	0f 90       	pop	r0
     614:	1f 90       	pop	r1
     616:	18 95       	reti

00000618 <__vector_1>:
/************************************************************************/
/* Interrupt catching joystick button falling edge                      */
/************************************************************************/
ISR(INT0_vect)
{
     618:	1f 92       	push	r1
     61a:	0f 92       	push	r0
     61c:	0f b6       	in	r0, 0x3f	; 63
     61e:	0f 92       	push	r0
     620:	11 24       	eor	r1, r1
     622:	2f 93       	push	r18
     624:	3f 93       	push	r19
     626:	4f 93       	push	r20
     628:	5f 93       	push	r21
     62a:	6f 93       	push	r22
     62c:	7f 93       	push	r23
     62e:	8f 93       	push	r24
     630:	9f 93       	push	r25
     632:	af 93       	push	r26
     634:	bf 93       	push	r27
     636:	ef 93       	push	r30
     638:	ff 93       	push	r31
	printf("BUTTON pressed y arrow: %d, page arrow: %d\n", y_arrow, page_arrow);
     63a:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <page_arrow+0x1>
     63e:	8f 93       	push	r24
     640:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     644:	8f 93       	push	r24
     646:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <y_arrow+0x1>
     64a:	8f 93       	push	r24
     64c:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <y_arrow>
     650:	8f 93       	push	r24
     652:	8e e0       	ldi	r24, 0x0E	; 14
     654:	91 e0       	ldi	r25, 0x01	; 1
     656:	9f 93       	push	r25
     658:	8f 93       	push	r24
     65a:	0e 94 82 08 	call	0x1104	; 0x1104 <printf>
}
     65e:	0f 90       	pop	r0
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	0f 90       	pop	r0
     666:	0f 90       	pop	r0
     668:	0f 90       	pop	r0
     66a:	ff 91       	pop	r31
     66c:	ef 91       	pop	r30
     66e:	bf 91       	pop	r27
     670:	af 91       	pop	r26
     672:	9f 91       	pop	r25
     674:	8f 91       	pop	r24
     676:	7f 91       	pop	r23
     678:	6f 91       	pop	r22
     67a:	5f 91       	pop	r21
     67c:	4f 91       	pop	r20
     67e:	3f 91       	pop	r19
     680:	2f 91       	pop	r18
     682:	0f 90       	pop	r0
     684:	0f be       	out	0x3f, r0	; 63
     686:	0f 90       	pop	r0
     688:	1f 90       	pop	r1
     68a:	18 95       	reti

0000068c <main>:

int main(void)
{
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62
     694:	2a 97       	sbiw	r28, 0x0a	; 10
     696:	0f b6       	in	r0, 0x3f	; 63
     698:	f8 94       	cli
     69a:	de bf       	out	0x3e, r29	; 62
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	cd bf       	out	0x3d, r28	; 61
	uint8_t size_arrow;
	
	float x_per;
	float y_per;
	pos_t position;
	int calibrated = 0;
     6a0:	1a 86       	std	Y+10, r1	; 0x0a
     6a2:	19 86       	std	Y+9, r1	; 0x09
	dutyCircle = 50;
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	a8 e4       	ldi	r26, 0x48	; 72
     6aa:	b2 e4       	ldi	r27, 0x42	; 66
     6ac:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <__data_end>
     6b0:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <__data_end+0x1>
     6b4:	a0 93 7e 01 	sts	0x017E, r26	; 0x80017e <__data_end+0x2>
     6b8:	b0 93 7f 01 	sts	0x017F, r27	; 0x80017f <__data_end+0x3>

	(x_per) = 0;
     6bc:	19 82       	std	Y+1, r1	; 0x01
     6be:	1a 82       	std	Y+2, r1	; 0x02
     6c0:	1b 82       	std	Y+3, r1	; 0x03
     6c2:	1c 82       	std	Y+4, r1	; 0x04
	(y_per) = 0;
     6c4:	1d 82       	std	Y+5, r1	; 0x05
     6c6:	1e 82       	std	Y+6, r1	; 0x06
     6c8:	1f 82       	std	Y+7, r1	; 0x07
     6ca:	18 86       	std	Y+8, r1	; 0x08


	stdout = &mystdout;
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	91 e0       	ldi	r25, 0x01	; 1
     6d0:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <__iob+0x3>
     6d4:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <__iob+0x2>

	USART_Init(UBRR);
     6d8:	8f e1       	ldi	r24, 0x1F	; 31
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	0e 94 62 02 	call	0x4c4	; 0x4c4 <USART_Init>
	
	xmem_init();
     6e0:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <xmem_init>
	
	PWM_Init();
     6e4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <PWM_Init>
	ADC_init();
     6e8:	0e 94 1f 02 	call	0x43e	; 0x43e <ADC_init>
	
	sei(); // Enable all interrupt
     6ec:	78 94       	sei

	size_arrow = 1;
	page_arrow = 2;
     6ee:	82 e0       	ldi	r24, 0x02	; 2
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <page_arrow+0x1>
     6f6:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <page_arrow>
	y_arrow = 0;
     6fa:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <y_arrow+0x1>
     6fe:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <y_arrow>
	position = 0;
	pushButton_init();
     702:	0e 94 80 02 	call	0x500	; 0x500 <pushButton_init>
	oled_init();
     706:	0e 94 80 04 	call	0x900	; 0x900 <oled_init>
	oled_reset();
     70a:	0e 94 ef 04 	call	0x9de	; 0x9de <oled_reset>
	
	oled_home();
     70e:	0e 94 3e 05 	call	0xa7c	; 0xa7c <oled_home>
	//
	//oled_home();
	
	go_to_page(2);
     712:	82 e0       	ldi	r24, 0x02	; 2
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	0e 94 4e 05 	call	0xa9c	; 0xa9c <go_to_page>
	go_to_col(30);
     71a:	8e e1       	ldi	r24, 0x1E	; 30
     71c:	0e 94 54 05 	call	0xaa8	; 0xaa8 <go_to_col>
	oled_print("Start");
     720:	8a e3       	ldi	r24, 0x3A	; 58
     722:	91 e0       	ldi	r25, 0x01	; 1
     724:	0e 94 65 05 	call	0xaca	; 0xaca <oled_print>
	go_to_page(3);
     728:	83 e0       	ldi	r24, 0x03	; 3
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	0e 94 4e 05 	call	0xa9c	; 0xa9c <go_to_page>
	go_to_col(30);
     730:	8e e1       	ldi	r24, 0x1E	; 30
     732:	0e 94 54 05 	call	0xaa8	; 0xaa8 <go_to_col>
	oled_print("PingPong");
     736:	80 e4       	ldi	r24, 0x40	; 64
     738:	91 e0       	ldi	r25, 0x01	; 1
     73a:	0e 94 65 05 	call	0xaca	; 0xaca <oled_print>
	go_to_page(4);
     73e:	84 e0       	ldi	r24, 0x04	; 4
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	0e 94 4e 05 	call	0xa9c	; 0xa9c <go_to_page>
	go_to_col(30);
     746:	8e e1       	ldi	r24, 0x1E	; 30
     748:	0e 94 54 05 	call	0xaa8	; 0xaa8 <go_to_col>
	oled_print("End game");
     74c:	89 e4       	ldi	r24, 0x49	; 73
     74e:	91 e0       	ldi	r25, 0x01	; 1
     750:	0e 94 65 05 	call	0xaca	; 0xaca <oled_print>
	
	//oled_home();
	
	
	oled_print_arrow(page_arrow, y_arrow, 0);
     754:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <y_arrow>
     758:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <y_arrow+0x1>
     75c:	40 e0       	ldi	r20, 0x00	; 0
     75e:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     762:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     766:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_print_arrow>
	
	while (1)
	{		
		joystick_analog_position(&x_per, &y_per, ADC_data, &calibrated);
     76a:	9e 01       	movw	r18, r28
     76c:	27 5f       	subi	r18, 0xF7	; 247
     76e:	3f 4f       	sbci	r19, 0xFF	; 255
     770:	44 e8       	ldi	r20, 0x84	; 132
     772:	51 e0       	ldi	r21, 0x01	; 1
     774:	be 01       	movw	r22, r28
     776:	6b 5f       	subi	r22, 0xFB	; 251
     778:	7f 4f       	sbci	r23, 0xFF	; 255
     77a:	ce 01       	movw	r24, r28
     77c:	01 96       	adiw	r24, 0x01	; 1
     77e:	0e 94 bf 05 	call	0xb7e	; 0xb7e <joystick_analog_position>
		position = pos_read(&x_per, &y_per);
     782:	be 01       	movw	r22, r28
     784:	6b 5f       	subi	r22, 0xFB	; 251
     786:	7f 4f       	sbci	r23, 0xFF	; 255
     788:	ce 01       	movw	r24, r28
     78a:	01 96       	adiw	r24, 0x01	; 1
     78c:	0e 94 03 06 	call	0xc06	; 0xc06 <pos_read>
			
		// slider_position(&x_per, &y_per, ADC_data);
		switch(position)
     790:	82 30       	cpi	r24, 0x02	; 2
     792:	71 f0       	breq	.+28     	; 0x7b0 <main+0x124>
     794:	38 f4       	brcc	.+14     	; 0x7a4 <main+0x118>
     796:	88 23       	and	r24, r24
     798:	09 f4       	brne	.+2      	; 0x79c <main+0x110>
     79a:	81 c0       	rjmp	.+258    	; 0x89e <main+0x212>
     79c:	81 30       	cpi	r24, 0x01	; 1
     79e:	09 f4       	brne	.+2      	; 0x7a2 <main+0x116>
     7a0:	5d c0       	rjmp	.+186    	; 0x85c <main+0x1d0>
     7a2:	a3 c0       	rjmp	.+326    	; 0x8ea <main+0x25e>
     7a4:	83 30       	cpi	r24, 0x03	; 3
     7a6:	81 f1       	breq	.+96     	; 0x808 <main+0x17c>
     7a8:	84 30       	cpi	r24, 0x04	; 4
     7aa:	09 f4       	brne	.+2      	; 0x7ae <main+0x122>
     7ac:	99 c0       	rjmp	.+306    	; 0x8e0 <main+0x254>
     7ae:	9d c0       	rjmp	.+314    	; 0x8ea <main+0x25e>
		{
			case UP:
				printf("UP\n");
     7b0:	82 e5       	ldi	r24, 0x52	; 82
     7b2:	91 e0       	ldi	r25, 0x01	; 1
     7b4:	0e 94 98 08 	call	0x1130	; 0x1130 <puts>
				oled_print_arrow(page_arrow, y_arrow, 1);
     7b8:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <y_arrow>
     7bc:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <y_arrow+0x1>
     7c0:	41 e0       	ldi	r20, 0x01	; 1
     7c2:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     7c6:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     7ca:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_print_arrow>
				page_arrow -= size_arrow;
     7ce:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     7d2:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     7d6:	01 97       	sbiw	r24, 0x01	; 1
     7d8:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <page_arrow+0x1>
     7dc:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <page_arrow>
				if(page_arrow < 0) page_arrow = 7;
     7e0:	99 23       	and	r25, r25
     7e2:	34 f4       	brge	.+12     	; 0x7f0 <main+0x164>
     7e4:	87 e0       	ldi	r24, 0x07	; 7
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <page_arrow+0x1>
     7ec:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <page_arrow>
				oled_print_arrow(page_arrow, y_arrow, 0);
     7f0:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <y_arrow>
     7f4:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <y_arrow+0x1>
     7f8:	40 e0       	ldi	r20, 0x00	; 0
     7fa:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     7fe:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     802:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_print_arrow>
				break;
     806:	75 c0       	rjmp	.+234    	; 0x8f2 <main+0x266>
			case DOWN:
				printf("DOWN\n");
     808:	85 e5       	ldi	r24, 0x55	; 85
     80a:	91 e0       	ldi	r25, 0x01	; 1
     80c:	0e 94 98 08 	call	0x1130	; 0x1130 <puts>
				oled_print_arrow(page_arrow, y_arrow, 1);
     810:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <y_arrow>
     814:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <y_arrow+0x1>
     818:	41 e0       	ldi	r20, 0x01	; 1
     81a:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     81e:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     822:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_print_arrow>
				page_arrow += size_arrow;
     826:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     82a:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     82e:	01 96       	adiw	r24, 0x01	; 1
     830:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <page_arrow+0x1>
     834:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <page_arrow>
				if(page_arrow > 7) page_arrow = 0;
     838:	08 97       	sbiw	r24, 0x08	; 8
     83a:	24 f0       	brlt	.+8      	; 0x844 <main+0x1b8>
     83c:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <page_arrow+0x1>
     840:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <page_arrow>
				oled_print_arrow(page_arrow, y_arrow, 0);
     844:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <y_arrow>
     848:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <y_arrow+0x1>
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     852:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     856:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_print_arrow>
				break;
     85a:	4b c0       	rjmp	.+150    	; 0x8f2 <main+0x266>
			case RIGHT:
				printf("RIGHT\n");
     85c:	8a e5       	ldi	r24, 0x5A	; 90
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	0e 94 98 08 	call	0x1130	; 0x1130 <puts>
				
				oled_print_arrow(page_arrow, y_arrow, 1);
     864:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <y_arrow>
     868:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <y_arrow+0x1>
     86c:	41 e0       	ldi	r20, 0x01	; 1
     86e:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     872:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     876:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_print_arrow>
				y_arrow += 5;
     87a:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <y_arrow>
     87e:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <y_arrow+0x1>
     882:	6b 5f       	subi	r22, 0xFB	; 251
     884:	7f 4f       	sbci	r23, 0xFF	; 255
     886:	70 93 81 01 	sts	0x0181, r23	; 0x800181 <y_arrow+0x1>
     88a:	60 93 80 01 	sts	0x0180, r22	; 0x800180 <y_arrow>
				oled_print_arrow(page_arrow, y_arrow, 0);
     88e:	40 e0       	ldi	r20, 0x00	; 0
     890:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     894:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     898:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_print_arrow>
				break;
     89c:	2a c0       	rjmp	.+84     	; 0x8f2 <main+0x266>
				
			case LEFT:
			
				printf("LEFT\n");
     89e:	80 e6       	ldi	r24, 0x60	; 96
     8a0:	91 e0       	ldi	r25, 0x01	; 1
     8a2:	0e 94 98 08 	call	0x1130	; 0x1130 <puts>
				oled_print_arrow(page_arrow, y_arrow, 1);
     8a6:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <y_arrow>
     8aa:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <y_arrow+0x1>
     8ae:	41 e0       	ldi	r20, 0x01	; 1
     8b0:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     8b4:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     8b8:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_print_arrow>
				y_arrow -= 5;
     8bc:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <y_arrow>
     8c0:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <y_arrow+0x1>
     8c4:	65 50       	subi	r22, 0x05	; 5
     8c6:	71 09       	sbc	r23, r1
     8c8:	70 93 81 01 	sts	0x0181, r23	; 0x800181 <y_arrow+0x1>
     8cc:	60 93 80 01 	sts	0x0180, r22	; 0x800180 <y_arrow>
				oled_print_arrow(page_arrow, y_arrow, 0);				
     8d0:	40 e0       	ldi	r20, 0x00	; 0
     8d2:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <page_arrow>
     8d6:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <page_arrow+0x1>
     8da:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_print_arrow>
				break;
     8de:	09 c0       	rjmp	.+18     	; 0x8f2 <main+0x266>
				
			case NEUTRAL:
				printf("NEUTRAL\n");
     8e0:	85 e6       	ldi	r24, 0x65	; 101
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	0e 94 98 08 	call	0x1130	; 0x1130 <puts>
				break;
     8e8:	04 c0       	rjmp	.+8      	; 0x8f2 <main+0x266>
			default:
				printf("Not working ?\n");
     8ea:	8d e6       	ldi	r24, 0x6D	; 109
     8ec:	91 e0       	ldi	r25, 0x01	; 1
     8ee:	0e 94 98 08 	call	0x1130	; 0x1130 <puts>
     8f2:	8c ec       	ldi	r24, 0xCC	; 204
     8f4:	94 e0       	ldi	r25, 0x04	; 4
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	f1 f7       	brne	.-4      	; 0x8f6 <main+0x26a>
     8fa:	00 c0       	rjmp	.+0      	; 0x8fc <main+0x270>
     8fc:	00 00       	nop
     8fe:	35 cf       	rjmp	.-406    	; 0x76a <main+0xde>

00000900 <oled_init>:
		go_to_page(i);
		go_to_col(col);	
		xmem_write(0x00, 0x1200);
	}
	
}
     900:	60 e0       	ldi	r22, 0x00	; 0
     902:	70 e1       	ldi	r23, 0x10	; 16
     904:	8e ea       	ldi	r24, 0xAE	; 174
     906:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	70 e1       	ldi	r23, 0x10	; 16
     90e:	81 ea       	ldi	r24, 0xA1	; 161
     910:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     914:	60 e0       	ldi	r22, 0x00	; 0
     916:	70 e1       	ldi	r23, 0x10	; 16
     918:	8a ed       	ldi	r24, 0xDA	; 218
     91a:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     91e:	60 e0       	ldi	r22, 0x00	; 0
     920:	70 e1       	ldi	r23, 0x10	; 16
     922:	82 e1       	ldi	r24, 0x12	; 18
     924:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     928:	60 e0       	ldi	r22, 0x00	; 0
     92a:	70 e1       	ldi	r23, 0x10	; 16
     92c:	88 ec       	ldi	r24, 0xC8	; 200
     92e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	70 e1       	ldi	r23, 0x10	; 16
     936:	88 ea       	ldi	r24, 0xA8	; 168
     938:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     93c:	60 e0       	ldi	r22, 0x00	; 0
     93e:	70 e1       	ldi	r23, 0x10	; 16
     940:	8f e3       	ldi	r24, 0x3F	; 63
     942:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     946:	60 e0       	ldi	r22, 0x00	; 0
     948:	70 e1       	ldi	r23, 0x10	; 16
     94a:	85 ed       	ldi	r24, 0xD5	; 213
     94c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     950:	60 e0       	ldi	r22, 0x00	; 0
     952:	70 e1       	ldi	r23, 0x10	; 16
     954:	80 e8       	ldi	r24, 0x80	; 128
     956:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     95a:	60 e0       	ldi	r22, 0x00	; 0
     95c:	70 e1       	ldi	r23, 0x10	; 16
     95e:	81 e8       	ldi	r24, 0x81	; 129
     960:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     964:	60 e0       	ldi	r22, 0x00	; 0
     966:	70 e1       	ldi	r23, 0x10	; 16
     968:	80 e5       	ldi	r24, 0x50	; 80
     96a:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     96e:	60 e0       	ldi	r22, 0x00	; 0
     970:	70 e1       	ldi	r23, 0x10	; 16
     972:	89 ed       	ldi	r24, 0xD9	; 217
     974:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     978:	60 e0       	ldi	r22, 0x00	; 0
     97a:	70 e1       	ldi	r23, 0x10	; 16
     97c:	81 e2       	ldi	r24, 0x21	; 33
     97e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     982:	60 e0       	ldi	r22, 0x00	; 0
     984:	70 e1       	ldi	r23, 0x10	; 16
     986:	80 e2       	ldi	r24, 0x20	; 32
     988:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     98c:	60 e0       	ldi	r22, 0x00	; 0
     98e:	70 e1       	ldi	r23, 0x10	; 16
     990:	82 e0       	ldi	r24, 0x02	; 2
     992:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     996:	60 e0       	ldi	r22, 0x00	; 0
     998:	70 e1       	ldi	r23, 0x10	; 16
     99a:	8b ed       	ldi	r24, 0xDB	; 219
     99c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     9a0:	60 e0       	ldi	r22, 0x00	; 0
     9a2:	70 e1       	ldi	r23, 0x10	; 16
     9a4:	80 e3       	ldi	r24, 0x30	; 48
     9a6:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     9aa:	60 e0       	ldi	r22, 0x00	; 0
     9ac:	70 e1       	ldi	r23, 0x10	; 16
     9ae:	8d ea       	ldi	r24, 0xAD	; 173
     9b0:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     9b4:	60 e0       	ldi	r22, 0x00	; 0
     9b6:	70 e1       	ldi	r23, 0x10	; 16
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     9be:	60 e0       	ldi	r22, 0x00	; 0
     9c0:	70 e1       	ldi	r23, 0x10	; 16
     9c2:	84 ea       	ldi	r24, 0xA4	; 164
     9c4:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     9c8:	60 e0       	ldi	r22, 0x00	; 0
     9ca:	70 e1       	ldi	r23, 0x10	; 16
     9cc:	86 ea       	ldi	r24, 0xA6	; 166
     9ce:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     9d2:	60 e0       	ldi	r22, 0x00	; 0
     9d4:	70 e1       	ldi	r23, 0x10	; 16
     9d6:	8f ea       	ldi	r24, 0xAF	; 175
     9d8:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     9dc:	08 95       	ret

000009de <oled_reset>:
     9de:	ff 92       	push	r15
     9e0:	0f 93       	push	r16
     9e2:	1f 93       	push	r17
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	60 e0       	ldi	r22, 0x00	; 0
     9ea:	70 e1       	ldi	r23, 0x10	; 16
     9ec:	80 eb       	ldi	r24, 0xB0	; 176
     9ee:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     9f2:	00 e0       	ldi	r16, 0x00	; 0
     9f4:	10 e0       	ldi	r17, 0x00	; 0
     9f6:	0f 2e       	mov	r0, r31
     9f8:	f0 eb       	ldi	r31, 0xB0	; 176
     9fa:	ff 2e       	mov	r15, r31
     9fc:	f0 2d       	mov	r31, r0
     9fe:	14 c0       	rjmp	.+40     	; 0xa28 <oled_reset+0x4a>
     a00:	60 e0       	ldi	r22, 0x00	; 0
     a02:	72 e1       	ldi	r23, 0x12	; 18
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     a0a:	21 96       	adiw	r28, 0x01	; 1
     a0c:	02 c0       	rjmp	.+4      	; 0xa12 <oled_reset+0x34>
     a0e:	c0 e0       	ldi	r28, 0x00	; 0
     a10:	d0 e0       	ldi	r29, 0x00	; 0
     a12:	c0 38       	cpi	r28, 0x80	; 128
     a14:	d1 05       	cpc	r29, r1
     a16:	a4 f3       	brlt	.-24     	; 0xa00 <oled_reset+0x22>
     a18:	f3 94       	inc	r15
     a1a:	60 e0       	ldi	r22, 0x00	; 0
     a1c:	70 e1       	ldi	r23, 0x10	; 16
     a1e:	8f 2d       	mov	r24, r15
     a20:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     a24:	0f 5f       	subi	r16, 0xFF	; 255
     a26:	1f 4f       	sbci	r17, 0xFF	; 255
     a28:	08 30       	cpi	r16, 0x08	; 8
     a2a:	11 05       	cpc	r17, r1
     a2c:	84 f3       	brlt	.-32     	; 0xa0e <oled_reset+0x30>
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	1f 91       	pop	r17
     a34:	0f 91       	pop	r16
     a36:	ff 90       	pop	r15
     a38:	08 95       	ret

00000a3a <write_char>:
     a3a:	1f 93       	push	r17
     a3c:	cf 93       	push	r28
     a3e:	df 93       	push	r29
     a40:	18 2f       	mov	r17, r24
     a42:	c0 e0       	ldi	r28, 0x00	; 0
     a44:	d0 e0       	ldi	r29, 0x00	; 0
     a46:	13 c0       	rjmp	.+38     	; 0xa6e <write_char+0x34>
     a48:	e1 2f       	mov	r30, r17
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	b0 97       	sbiw	r30, 0x20	; 32
     a4e:	ee 0f       	add	r30, r30
     a50:	ff 1f       	adc	r31, r31
     a52:	ee 0f       	add	r30, r30
     a54:	ff 1f       	adc	r31, r31
     a56:	ee 0f       	add	r30, r30
     a58:	ff 1f       	adc	r31, r31
     a5a:	ec 0f       	add	r30, r28
     a5c:	fd 1f       	adc	r31, r29
     a5e:	e0 59       	subi	r30, 0x90	; 144
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	84 91       	lpm	r24, Z
     a64:	60 e0       	ldi	r22, 0x00	; 0
     a66:	72 e1       	ldi	r23, 0x12	; 18
     a68:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     a6c:	21 96       	adiw	r28, 0x01	; 1
     a6e:	c8 30       	cpi	r28, 0x08	; 8
     a70:	d1 05       	cpc	r29, r1
     a72:	54 f3       	brlt	.-44     	; 0xa48 <write_char+0xe>
     a74:	df 91       	pop	r29
     a76:	cf 91       	pop	r28
     a78:	1f 91       	pop	r17
     a7a:	08 95       	ret

00000a7c <oled_home>:
     a7c:	60 e0       	ldi	r22, 0x00	; 0
     a7e:	70 e1       	ldi	r23, 0x10	; 16
     a80:	80 eb       	ldi	r24, 0xB0	; 176
     a82:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     a86:	60 e0       	ldi	r22, 0x00	; 0
     a88:	70 e1       	ldi	r23, 0x10	; 16
     a8a:	80 e0       	ldi	r24, 0x00	; 0
     a8c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     a90:	60 e0       	ldi	r22, 0x00	; 0
     a92:	70 e1       	ldi	r23, 0x10	; 16
     a94:	80 e1       	ldi	r24, 0x10	; 16
     a96:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     a9a:	08 95       	ret

00000a9c <go_to_page>:
     a9c:	60 e0       	ldi	r22, 0x00	; 0
     a9e:	70 e1       	ldi	r23, 0x10	; 16
     aa0:	80 55       	subi	r24, 0x50	; 80
     aa2:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     aa6:	08 95       	ret

00000aa8 <go_to_col>:
     aa8:	cf 93       	push	r28
     aaa:	c8 2f       	mov	r28, r24
     aac:	60 e0       	ldi	r22, 0x00	; 0
     aae:	70 e1       	ldi	r23, 0x10	; 16
     ab0:	8f 70       	andi	r24, 0x0F	; 15
     ab2:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     ab6:	8c 2f       	mov	r24, r28
     ab8:	82 95       	swap	r24
     aba:	8f 70       	andi	r24, 0x0F	; 15
     abc:	60 e0       	ldi	r22, 0x00	; 0
     abe:	70 e1       	ldi	r23, 0x10	; 16
     ac0:	80 5f       	subi	r24, 0xF0	; 240
     ac2:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     ac6:	cf 91       	pop	r28
     ac8:	08 95       	ret

00000aca <oled_print>:


void oled_print(char * word)
{
     aca:	0f 93       	push	r16
     acc:	1f 93       	push	r17
     ace:	cf 93       	push	r28
     ad0:	df 93       	push	r29
     ad2:	8c 01       	movw	r16, r24
	int i =0;
     ad4:	c0 e0       	ldi	r28, 0x00	; 0
     ad6:	d0 e0       	ldi	r29, 0x00	; 0
	while (word[i] != '\0')
     ad8:	03 c0       	rjmp	.+6      	; 0xae0 <oled_print+0x16>
	{
		write_char(word[i]);
     ada:	0e 94 1d 05 	call	0xa3a	; 0xa3a <write_char>
		++i;
     ade:	21 96       	adiw	r28, 0x01	; 1


void oled_print(char * word)
{
	int i =0;
	while (word[i] != '\0')
     ae0:	f8 01       	movw	r30, r16
     ae2:	ec 0f       	add	r30, r28
     ae4:	fd 1f       	adc	r31, r29
     ae6:	80 81       	ld	r24, Z
     ae8:	81 11       	cpse	r24, r1
     aea:	f7 cf       	rjmp	.-18     	; 0xada <oled_print+0x10>
	{
		write_char(word[i]);
		++i;
	}
}
     aec:	df 91       	pop	r29
     aee:	cf 91       	pop	r28
     af0:	1f 91       	pop	r17
     af2:	0f 91       	pop	r16
     af4:	08 95       	ret

00000af6 <oled_print_arrow>:

void oled_print_arrow (int row , int col, uint8_t clear)
{
     af6:	0f 93       	push	r16
     af8:	1f 93       	push	r17
     afa:	cf 93       	push	r28
     afc:	8c 01       	movw	r16, r24
     afe:	86 2f       	mov	r24, r22
     b00:	c4 2f       	mov	r28, r20
	go_to_col(col);
     b02:	0e 94 54 05 	call	0xaa8	; 0xaa8 <go_to_col>
	go_to_page(row);
     b06:	c8 01       	movw	r24, r16
     b08:	0e 94 4e 05 	call	0xa9c	; 0xa9c <go_to_page>
	//_delay_ms(5);
	if(clear < 1)
     b0c:	c1 11       	cpse	r28, r1
     b0e:	1a c0       	rjmp	.+52     	; 0xb44 <oled_print_arrow+0x4e>
	{
		xmem_write(0b00011000, 0x1200);
     b10:	60 e0       	ldi	r22, 0x00	; 0
     b12:	72 e1       	ldi	r23, 0x12	; 18
     b14:	88 e1       	ldi	r24, 0x18	; 24
     b16:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
		xmem_write(0b00011000, 0x1200 );
     b1a:	60 e0       	ldi	r22, 0x00	; 0
     b1c:	72 e1       	ldi	r23, 0x12	; 18
     b1e:	88 e1       	ldi	r24, 0x18	; 24
     b20:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
		xmem_write(0b01111110, 0x1200 );
     b24:	60 e0       	ldi	r22, 0x00	; 0
     b26:	72 e1       	ldi	r23, 0x12	; 18
     b28:	8e e7       	ldi	r24, 0x7E	; 126
     b2a:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
		xmem_write(0b00111100, 0x1200 );
     b2e:	60 e0       	ldi	r22, 0x00	; 0
     b30:	72 e1       	ldi	r23, 0x12	; 18
     b32:	8c e3       	ldi	r24, 0x3C	; 60
     b34:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
		xmem_write(0b00011000, 0x1200 );
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	72 e1       	ldi	r23, 0x12	; 18
     b3c:	88 e1       	ldi	r24, 0x18	; 24
     b3e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     b42:	19 c0       	rjmp	.+50     	; 0xb76 <oled_print_arrow+0x80>
	}else
	{
		xmem_write(0b00000000, 0x1200);
     b44:	60 e0       	ldi	r22, 0x00	; 0
     b46:	72 e1       	ldi	r23, 0x12	; 18
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
		xmem_write(0b00000000, 0x1200 );
     b4e:	60 e0       	ldi	r22, 0x00	; 0
     b50:	72 e1       	ldi	r23, 0x12	; 18
     b52:	80 e0       	ldi	r24, 0x00	; 0
     b54:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
		xmem_write(0b00000000, 0x1200 );
     b58:	60 e0       	ldi	r22, 0x00	; 0
     b5a:	72 e1       	ldi	r23, 0x12	; 18
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
		xmem_write(0b00000000, 0x1200 );
     b62:	60 e0       	ldi	r22, 0x00	; 0
     b64:	72 e1       	ldi	r23, 0x12	; 18
     b66:	80 e0       	ldi	r24, 0x00	; 0
     b68:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
		xmem_write(0b00000000, 0x1200 );		
     b6c:	60 e0       	ldi	r22, 0x00	; 0
     b6e:	72 e1       	ldi	r23, 0x12	; 18
     b70:	80 e0       	ldi	r24, 0x00	; 0
     b72:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
	}
}
     b76:	cf 91       	pop	r28
     b78:	1f 91       	pop	r17
     b7a:	0f 91       	pop	r16
     b7c:	08 95       	ret

00000b7e <joystick_analog_position>:

}

void slider_position(float *left_per, float *right_per, uint8_t* ADC_data)
{
	xmem_write(0x52, 0x1400);
     b7e:	ef 92       	push	r14
     b80:	ff 92       	push	r15
     b82:	0f 93       	push	r16
     b84:	1f 93       	push	r17
     b86:	cf 93       	push	r28
     b88:	df 93       	push	r29
     b8a:	7c 01       	movw	r14, r24
     b8c:	eb 01       	movw	r28, r22
     b8e:	8a 01       	movw	r16, r20
     b90:	60 e0       	ldi	r22, 0x00	; 0
     b92:	74 e1       	ldi	r23, 0x14	; 20
     b94:	82 e5       	ldi	r24, 0x52	; 82
     b96:	0e 94 73 02 	call	0x4e6	; 0x4e6 <xmem_write>
     b9a:	f8 01       	movw	r30, r16
     b9c:	63 81       	ldd	r22, Z+3	; 0x03
     b9e:	70 e0       	ldi	r23, 0x00	; 0
     ba0:	80 e0       	ldi	r24, 0x00	; 0
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	0e 94 5e 07 	call	0xebc	; 0xebc <__floatunsisf>
     ba8:	29 ec       	ldi	r18, 0xC9	; 201
     baa:	38 ec       	ldi	r19, 0xC8	; 200
     bac:	48 e4       	ldi	r20, 0x48	; 72
     bae:	5f e3       	ldi	r21, 0x3F	; 63
     bb0:	0e 94 15 08 	call	0x102a	; 0x102a <__mulsf3>
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	48 ec       	ldi	r20, 0xC8	; 200
     bba:	52 e4       	ldi	r21, 0x42	; 66
     bbc:	0e 94 4b 06 	call	0xc96	; 0xc96 <__subsf3>
     bc0:	f7 01       	movw	r30, r14
     bc2:	60 83       	st	Z, r22
     bc4:	71 83       	std	Z+1, r23	; 0x01
     bc6:	82 83       	std	Z+2, r24	; 0x02
     bc8:	93 83       	std	Z+3, r25	; 0x03
     bca:	f8 01       	movw	r30, r16
     bcc:	60 81       	ld	r22, Z
     bce:	70 e0       	ldi	r23, 0x00	; 0
     bd0:	80 e0       	ldi	r24, 0x00	; 0
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	0e 94 5e 07 	call	0xebc	; 0xebc <__floatunsisf>
     bd8:	29 ec       	ldi	r18, 0xC9	; 201
     bda:	38 ec       	ldi	r19, 0xC8	; 200
     bdc:	48 e4       	ldi	r20, 0x48	; 72
     bde:	5f e3       	ldi	r21, 0x3F	; 63
     be0:	0e 94 15 08 	call	0x102a	; 0x102a <__mulsf3>
     be4:	20 e0       	ldi	r18, 0x00	; 0
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	48 ec       	ldi	r20, 0xC8	; 200
     bea:	52 e4       	ldi	r21, 0x42	; 66
     bec:	0e 94 4b 06 	call	0xc96	; 0xc96 <__subsf3>
     bf0:	68 83       	st	Y, r22
     bf2:	79 83       	std	Y+1, r23	; 0x01
     bf4:	8a 83       	std	Y+2, r24	; 0x02
     bf6:	9b 83       	std	Y+3, r25	; 0x03
     bf8:	df 91       	pop	r29
     bfa:	cf 91       	pop	r28
     bfc:	1f 91       	pop	r17
     bfe:	0f 91       	pop	r16
     c00:	ff 90       	pop	r15
     c02:	ef 90       	pop	r14
     c04:	08 95       	ret

00000c06 <pos_read>:
}



pos_t pos_read(float* x_per, float* y_per)
{
     c06:	cf 92       	push	r12
     c08:	df 92       	push	r13
     c0a:	ef 92       	push	r14
     c0c:	ff 92       	push	r15
     c0e:	cf 93       	push	r28
     c10:	df 93       	push	r29
     c12:	eb 01       	movw	r28, r22
	if((*x_per) >= 70)
     c14:	fc 01       	movw	r30, r24
     c16:	c0 80       	ld	r12, Z
     c18:	d1 80       	ldd	r13, Z+1	; 0x01
     c1a:	e2 80       	ldd	r14, Z+2	; 0x02
     c1c:	f3 80       	ldd	r15, Z+3	; 0x03
     c1e:	20 e0       	ldi	r18, 0x00	; 0
     c20:	30 e0       	ldi	r19, 0x00	; 0
     c22:	4c e8       	ldi	r20, 0x8C	; 140
     c24:	52 e4       	ldi	r21, 0x42	; 66
     c26:	c7 01       	movw	r24, r14
     c28:	b6 01       	movw	r22, r12
     c2a:	0e 94 10 08 	call	0x1020	; 0x1020 <__gesf2>
     c2e:	88 23       	and	r24, r24
     c30:	24 f5       	brge	.+72     	; 0xc7a <pos_read+0x74>
	{
		return RIGHT; 	
	}
	else if((*x_per) <= -70)
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	4c e8       	ldi	r20, 0x8C	; 140
     c38:	52 ec       	ldi	r21, 0xC2	; 194
     c3a:	c7 01       	movw	r24, r14
     c3c:	b6 01       	movw	r22, r12
     c3e:	0e 94 b8 06 	call	0xd70	; 0xd70 <__cmpsf2>
     c42:	18 16       	cp	r1, r24
     c44:	e4 f4       	brge	.+56     	; 0xc7e <pos_read+0x78>
	{
		return LEFT;
	}
	else if((*y_per) >= 70)
     c46:	c8 80       	ld	r12, Y
     c48:	d9 80       	ldd	r13, Y+1	; 0x01
     c4a:	ea 80       	ldd	r14, Y+2	; 0x02
     c4c:	fb 80       	ldd	r15, Y+3	; 0x03
     c4e:	20 e0       	ldi	r18, 0x00	; 0
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	4c e8       	ldi	r20, 0x8C	; 140
     c54:	52 e4       	ldi	r21, 0x42	; 66
     c56:	c7 01       	movw	r24, r14
     c58:	b6 01       	movw	r22, r12
     c5a:	0e 94 10 08 	call	0x1020	; 0x1020 <__gesf2>
     c5e:	88 23       	and	r24, r24
     c60:	84 f4       	brge	.+32     	; 0xc82 <pos_read+0x7c>
	{
		return UP;
	}
	else if((*y_per) <= -70)
     c62:	20 e0       	ldi	r18, 0x00	; 0
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	4c e8       	ldi	r20, 0x8C	; 140
     c68:	52 ec       	ldi	r21, 0xC2	; 194
     c6a:	c7 01       	movw	r24, r14
     c6c:	b6 01       	movw	r22, r12
     c6e:	0e 94 b8 06 	call	0xd70	; 0xd70 <__cmpsf2>
     c72:	18 16       	cp	r1, r24
     c74:	44 f0       	brlt	.+16     	; 0xc86 <pos_read+0x80>
	{
		return DOWN;
     c76:	83 e0       	ldi	r24, 0x03	; 3
     c78:	07 c0       	rjmp	.+14     	; 0xc88 <pos_read+0x82>

pos_t pos_read(float* x_per, float* y_per)
{
	if((*x_per) >= 70)
	{
		return RIGHT; 	
     c7a:	81 e0       	ldi	r24, 0x01	; 1
     c7c:	05 c0       	rjmp	.+10     	; 0xc88 <pos_read+0x82>
	}
	else if((*x_per) <= -70)
	{
		return LEFT;
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	03 c0       	rjmp	.+6      	; 0xc88 <pos_read+0x82>
	}
	else if((*y_per) >= 70)
	{
		return UP;
     c82:	82 e0       	ldi	r24, 0x02	; 2
     c84:	01 c0       	rjmp	.+2      	; 0xc88 <pos_read+0x82>
	else if((*y_per) <= -70)
	{
		return DOWN;
	}
	
	return NEUTRAL;
     c86:	84 e0       	ldi	r24, 0x04	; 4
	
}
     c88:	df 91       	pop	r29
     c8a:	cf 91       	pop	r28
     c8c:	ff 90       	pop	r15
     c8e:	ef 90       	pop	r14
     c90:	df 90       	pop	r13
     c92:	cf 90       	pop	r12
     c94:	08 95       	ret

00000c96 <__subsf3>:
     c96:	50 58       	subi	r21, 0x80	; 128

00000c98 <__addsf3>:
     c98:	bb 27       	eor	r27, r27
     c9a:	aa 27       	eor	r26, r26
     c9c:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__addsf3x>
     ca0:	0c 94 d6 07 	jmp	0xfac	; 0xfac <__fp_round>
     ca4:	0e 94 c8 07 	call	0xf90	; 0xf90 <__fp_pscA>
     ca8:	38 f0       	brcs	.+14     	; 0xcb8 <__addsf3+0x20>
     caa:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__fp_pscB>
     cae:	20 f0       	brcs	.+8      	; 0xcb8 <__addsf3+0x20>
     cb0:	39 f4       	brne	.+14     	; 0xcc0 <__addsf3+0x28>
     cb2:	9f 3f       	cpi	r25, 0xFF	; 255
     cb4:	19 f4       	brne	.+6      	; 0xcbc <__addsf3+0x24>
     cb6:	26 f4       	brtc	.+8      	; 0xcc0 <__addsf3+0x28>
     cb8:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_nan>
     cbc:	0e f4       	brtc	.+2      	; 0xcc0 <__addsf3+0x28>
     cbe:	e0 95       	com	r30
     cc0:	e7 fb       	bst	r30, 7
     cc2:	0c 94 bf 07 	jmp	0xf7e	; 0xf7e <__fp_inf>

00000cc6 <__addsf3x>:
     cc6:	e9 2f       	mov	r30, r25
     cc8:	0e 94 e7 07 	call	0xfce	; 0xfce <__fp_split3>
     ccc:	58 f3       	brcs	.-42     	; 0xca4 <__addsf3+0xc>
     cce:	ba 17       	cp	r27, r26
     cd0:	62 07       	cpc	r22, r18
     cd2:	73 07       	cpc	r23, r19
     cd4:	84 07       	cpc	r24, r20
     cd6:	95 07       	cpc	r25, r21
     cd8:	20 f0       	brcs	.+8      	; 0xce2 <__addsf3x+0x1c>
     cda:	79 f4       	brne	.+30     	; 0xcfa <__addsf3x+0x34>
     cdc:	a6 f5       	brtc	.+104    	; 0xd46 <__addsf3x+0x80>
     cde:	0c 94 09 08 	jmp	0x1012	; 0x1012 <__fp_zero>
     ce2:	0e f4       	brtc	.+2      	; 0xce6 <__addsf3x+0x20>
     ce4:	e0 95       	com	r30
     ce6:	0b 2e       	mov	r0, r27
     ce8:	ba 2f       	mov	r27, r26
     cea:	a0 2d       	mov	r26, r0
     cec:	0b 01       	movw	r0, r22
     cee:	b9 01       	movw	r22, r18
     cf0:	90 01       	movw	r18, r0
     cf2:	0c 01       	movw	r0, r24
     cf4:	ca 01       	movw	r24, r20
     cf6:	a0 01       	movw	r20, r0
     cf8:	11 24       	eor	r1, r1
     cfa:	ff 27       	eor	r31, r31
     cfc:	59 1b       	sub	r21, r25
     cfe:	99 f0       	breq	.+38     	; 0xd26 <__addsf3x+0x60>
     d00:	59 3f       	cpi	r21, 0xF9	; 249
     d02:	50 f4       	brcc	.+20     	; 0xd18 <__addsf3x+0x52>
     d04:	50 3e       	cpi	r21, 0xE0	; 224
     d06:	68 f1       	brcs	.+90     	; 0xd62 <__addsf3x+0x9c>
     d08:	1a 16       	cp	r1, r26
     d0a:	f0 40       	sbci	r31, 0x00	; 0
     d0c:	a2 2f       	mov	r26, r18
     d0e:	23 2f       	mov	r18, r19
     d10:	34 2f       	mov	r19, r20
     d12:	44 27       	eor	r20, r20
     d14:	58 5f       	subi	r21, 0xF8	; 248
     d16:	f3 cf       	rjmp	.-26     	; 0xcfe <__addsf3x+0x38>
     d18:	46 95       	lsr	r20
     d1a:	37 95       	ror	r19
     d1c:	27 95       	ror	r18
     d1e:	a7 95       	ror	r26
     d20:	f0 40       	sbci	r31, 0x00	; 0
     d22:	53 95       	inc	r21
     d24:	c9 f7       	brne	.-14     	; 0xd18 <__addsf3x+0x52>
     d26:	7e f4       	brtc	.+30     	; 0xd46 <__addsf3x+0x80>
     d28:	1f 16       	cp	r1, r31
     d2a:	ba 0b       	sbc	r27, r26
     d2c:	62 0b       	sbc	r22, r18
     d2e:	73 0b       	sbc	r23, r19
     d30:	84 0b       	sbc	r24, r20
     d32:	ba f0       	brmi	.+46     	; 0xd62 <__addsf3x+0x9c>
     d34:	91 50       	subi	r25, 0x01	; 1
     d36:	a1 f0       	breq	.+40     	; 0xd60 <__addsf3x+0x9a>
     d38:	ff 0f       	add	r31, r31
     d3a:	bb 1f       	adc	r27, r27
     d3c:	66 1f       	adc	r22, r22
     d3e:	77 1f       	adc	r23, r23
     d40:	88 1f       	adc	r24, r24
     d42:	c2 f7       	brpl	.-16     	; 0xd34 <__addsf3x+0x6e>
     d44:	0e c0       	rjmp	.+28     	; 0xd62 <__addsf3x+0x9c>
     d46:	ba 0f       	add	r27, r26
     d48:	62 1f       	adc	r22, r18
     d4a:	73 1f       	adc	r23, r19
     d4c:	84 1f       	adc	r24, r20
     d4e:	48 f4       	brcc	.+18     	; 0xd62 <__addsf3x+0x9c>
     d50:	87 95       	ror	r24
     d52:	77 95       	ror	r23
     d54:	67 95       	ror	r22
     d56:	b7 95       	ror	r27
     d58:	f7 95       	ror	r31
     d5a:	9e 3f       	cpi	r25, 0xFE	; 254
     d5c:	08 f0       	brcs	.+2      	; 0xd60 <__addsf3x+0x9a>
     d5e:	b0 cf       	rjmp	.-160    	; 0xcc0 <__addsf3+0x28>
     d60:	93 95       	inc	r25
     d62:	88 0f       	add	r24, r24
     d64:	08 f0       	brcs	.+2      	; 0xd68 <__addsf3x+0xa2>
     d66:	99 27       	eor	r25, r25
     d68:	ee 0f       	add	r30, r30
     d6a:	97 95       	ror	r25
     d6c:	87 95       	ror	r24
     d6e:	08 95       	ret

00000d70 <__cmpsf2>:
     d70:	0e 94 9b 07 	call	0xf36	; 0xf36 <__fp_cmp>
     d74:	08 f4       	brcc	.+2      	; 0xd78 <__cmpsf2+0x8>
     d76:	81 e0       	ldi	r24, 0x01	; 1
     d78:	08 95       	ret

00000d7a <__divsf3>:
     d7a:	0e 94 d1 06 	call	0xda2	; 0xda2 <__divsf3x>
     d7e:	0c 94 d6 07 	jmp	0xfac	; 0xfac <__fp_round>
     d82:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__fp_pscB>
     d86:	58 f0       	brcs	.+22     	; 0xd9e <__divsf3+0x24>
     d88:	0e 94 c8 07 	call	0xf90	; 0xf90 <__fp_pscA>
     d8c:	40 f0       	brcs	.+16     	; 0xd9e <__divsf3+0x24>
     d8e:	29 f4       	brne	.+10     	; 0xd9a <__divsf3+0x20>
     d90:	5f 3f       	cpi	r21, 0xFF	; 255
     d92:	29 f0       	breq	.+10     	; 0xd9e <__divsf3+0x24>
     d94:	0c 94 bf 07 	jmp	0xf7e	; 0xf7e <__fp_inf>
     d98:	51 11       	cpse	r21, r1
     d9a:	0c 94 0a 08 	jmp	0x1014	; 0x1014 <__fp_szero>
     d9e:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_nan>

00000da2 <__divsf3x>:
     da2:	0e 94 e7 07 	call	0xfce	; 0xfce <__fp_split3>
     da6:	68 f3       	brcs	.-38     	; 0xd82 <__divsf3+0x8>

00000da8 <__divsf3_pse>:
     da8:	99 23       	and	r25, r25
     daa:	b1 f3       	breq	.-20     	; 0xd98 <__divsf3+0x1e>
     dac:	55 23       	and	r21, r21
     dae:	91 f3       	breq	.-28     	; 0xd94 <__divsf3+0x1a>
     db0:	95 1b       	sub	r25, r21
     db2:	55 0b       	sbc	r21, r21
     db4:	bb 27       	eor	r27, r27
     db6:	aa 27       	eor	r26, r26
     db8:	62 17       	cp	r22, r18
     dba:	73 07       	cpc	r23, r19
     dbc:	84 07       	cpc	r24, r20
     dbe:	38 f0       	brcs	.+14     	; 0xdce <__divsf3_pse+0x26>
     dc0:	9f 5f       	subi	r25, 0xFF	; 255
     dc2:	5f 4f       	sbci	r21, 0xFF	; 255
     dc4:	22 0f       	add	r18, r18
     dc6:	33 1f       	adc	r19, r19
     dc8:	44 1f       	adc	r20, r20
     dca:	aa 1f       	adc	r26, r26
     dcc:	a9 f3       	breq	.-22     	; 0xdb8 <__divsf3_pse+0x10>
     dce:	35 d0       	rcall	.+106    	; 0xe3a <__divsf3_pse+0x92>
     dd0:	0e 2e       	mov	r0, r30
     dd2:	3a f0       	brmi	.+14     	; 0xde2 <__divsf3_pse+0x3a>
     dd4:	e0 e8       	ldi	r30, 0x80	; 128
     dd6:	32 d0       	rcall	.+100    	; 0xe3c <__divsf3_pse+0x94>
     dd8:	91 50       	subi	r25, 0x01	; 1
     dda:	50 40       	sbci	r21, 0x00	; 0
     ddc:	e6 95       	lsr	r30
     dde:	00 1c       	adc	r0, r0
     de0:	ca f7       	brpl	.-14     	; 0xdd4 <__divsf3_pse+0x2c>
     de2:	2b d0       	rcall	.+86     	; 0xe3a <__divsf3_pse+0x92>
     de4:	fe 2f       	mov	r31, r30
     de6:	29 d0       	rcall	.+82     	; 0xe3a <__divsf3_pse+0x92>
     de8:	66 0f       	add	r22, r22
     dea:	77 1f       	adc	r23, r23
     dec:	88 1f       	adc	r24, r24
     dee:	bb 1f       	adc	r27, r27
     df0:	26 17       	cp	r18, r22
     df2:	37 07       	cpc	r19, r23
     df4:	48 07       	cpc	r20, r24
     df6:	ab 07       	cpc	r26, r27
     df8:	b0 e8       	ldi	r27, 0x80	; 128
     dfa:	09 f0       	breq	.+2      	; 0xdfe <__divsf3_pse+0x56>
     dfc:	bb 0b       	sbc	r27, r27
     dfe:	80 2d       	mov	r24, r0
     e00:	bf 01       	movw	r22, r30
     e02:	ff 27       	eor	r31, r31
     e04:	93 58       	subi	r25, 0x83	; 131
     e06:	5f 4f       	sbci	r21, 0xFF	; 255
     e08:	3a f0       	brmi	.+14     	; 0xe18 <__divsf3_pse+0x70>
     e0a:	9e 3f       	cpi	r25, 0xFE	; 254
     e0c:	51 05       	cpc	r21, r1
     e0e:	78 f0       	brcs	.+30     	; 0xe2e <__divsf3_pse+0x86>
     e10:	0c 94 bf 07 	jmp	0xf7e	; 0xf7e <__fp_inf>
     e14:	0c 94 0a 08 	jmp	0x1014	; 0x1014 <__fp_szero>
     e18:	5f 3f       	cpi	r21, 0xFF	; 255
     e1a:	e4 f3       	brlt	.-8      	; 0xe14 <__divsf3_pse+0x6c>
     e1c:	98 3e       	cpi	r25, 0xE8	; 232
     e1e:	d4 f3       	brlt	.-12     	; 0xe14 <__divsf3_pse+0x6c>
     e20:	86 95       	lsr	r24
     e22:	77 95       	ror	r23
     e24:	67 95       	ror	r22
     e26:	b7 95       	ror	r27
     e28:	f7 95       	ror	r31
     e2a:	9f 5f       	subi	r25, 0xFF	; 255
     e2c:	c9 f7       	brne	.-14     	; 0xe20 <__divsf3_pse+0x78>
     e2e:	88 0f       	add	r24, r24
     e30:	91 1d       	adc	r25, r1
     e32:	96 95       	lsr	r25
     e34:	87 95       	ror	r24
     e36:	97 f9       	bld	r25, 7
     e38:	08 95       	ret
     e3a:	e1 e0       	ldi	r30, 0x01	; 1
     e3c:	66 0f       	add	r22, r22
     e3e:	77 1f       	adc	r23, r23
     e40:	88 1f       	adc	r24, r24
     e42:	bb 1f       	adc	r27, r27
     e44:	62 17       	cp	r22, r18
     e46:	73 07       	cpc	r23, r19
     e48:	84 07       	cpc	r24, r20
     e4a:	ba 07       	cpc	r27, r26
     e4c:	20 f0       	brcs	.+8      	; 0xe56 <__divsf3_pse+0xae>
     e4e:	62 1b       	sub	r22, r18
     e50:	73 0b       	sbc	r23, r19
     e52:	84 0b       	sbc	r24, r20
     e54:	ba 0b       	sbc	r27, r26
     e56:	ee 1f       	adc	r30, r30
     e58:	88 f7       	brcc	.-30     	; 0xe3c <__divsf3_pse+0x94>
     e5a:	e0 95       	com	r30
     e5c:	08 95       	ret

00000e5e <__fixunssfsi>:
     e5e:	0e 94 ef 07 	call	0xfde	; 0xfde <__fp_splitA>
     e62:	88 f0       	brcs	.+34     	; 0xe86 <__fixunssfsi+0x28>
     e64:	9f 57       	subi	r25, 0x7F	; 127
     e66:	98 f0       	brcs	.+38     	; 0xe8e <__fixunssfsi+0x30>
     e68:	b9 2f       	mov	r27, r25
     e6a:	99 27       	eor	r25, r25
     e6c:	b7 51       	subi	r27, 0x17	; 23
     e6e:	b0 f0       	brcs	.+44     	; 0xe9c <__fixunssfsi+0x3e>
     e70:	e1 f0       	breq	.+56     	; 0xeaa <__fixunssfsi+0x4c>
     e72:	66 0f       	add	r22, r22
     e74:	77 1f       	adc	r23, r23
     e76:	88 1f       	adc	r24, r24
     e78:	99 1f       	adc	r25, r25
     e7a:	1a f0       	brmi	.+6      	; 0xe82 <__fixunssfsi+0x24>
     e7c:	ba 95       	dec	r27
     e7e:	c9 f7       	brne	.-14     	; 0xe72 <__fixunssfsi+0x14>
     e80:	14 c0       	rjmp	.+40     	; 0xeaa <__fixunssfsi+0x4c>
     e82:	b1 30       	cpi	r27, 0x01	; 1
     e84:	91 f0       	breq	.+36     	; 0xeaa <__fixunssfsi+0x4c>
     e86:	0e 94 09 08 	call	0x1012	; 0x1012 <__fp_zero>
     e8a:	b1 e0       	ldi	r27, 0x01	; 1
     e8c:	08 95       	ret
     e8e:	0c 94 09 08 	jmp	0x1012	; 0x1012 <__fp_zero>
     e92:	67 2f       	mov	r22, r23
     e94:	78 2f       	mov	r23, r24
     e96:	88 27       	eor	r24, r24
     e98:	b8 5f       	subi	r27, 0xF8	; 248
     e9a:	39 f0       	breq	.+14     	; 0xeaa <__fixunssfsi+0x4c>
     e9c:	b9 3f       	cpi	r27, 0xF9	; 249
     e9e:	cc f3       	brlt	.-14     	; 0xe92 <__fixunssfsi+0x34>
     ea0:	86 95       	lsr	r24
     ea2:	77 95       	ror	r23
     ea4:	67 95       	ror	r22
     ea6:	b3 95       	inc	r27
     ea8:	d9 f7       	brne	.-10     	; 0xea0 <__fixunssfsi+0x42>
     eaa:	3e f4       	brtc	.+14     	; 0xeba <__fixunssfsi+0x5c>
     eac:	90 95       	com	r25
     eae:	80 95       	com	r24
     eb0:	70 95       	com	r23
     eb2:	61 95       	neg	r22
     eb4:	7f 4f       	sbci	r23, 0xFF	; 255
     eb6:	8f 4f       	sbci	r24, 0xFF	; 255
     eb8:	9f 4f       	sbci	r25, 0xFF	; 255
     eba:	08 95       	ret

00000ebc <__floatunsisf>:
     ebc:	e8 94       	clt
     ebe:	09 c0       	rjmp	.+18     	; 0xed2 <__floatsisf+0x12>

00000ec0 <__floatsisf>:
     ec0:	97 fb       	bst	r25, 7
     ec2:	3e f4       	brtc	.+14     	; 0xed2 <__floatsisf+0x12>
     ec4:	90 95       	com	r25
     ec6:	80 95       	com	r24
     ec8:	70 95       	com	r23
     eca:	61 95       	neg	r22
     ecc:	7f 4f       	sbci	r23, 0xFF	; 255
     ece:	8f 4f       	sbci	r24, 0xFF	; 255
     ed0:	9f 4f       	sbci	r25, 0xFF	; 255
     ed2:	99 23       	and	r25, r25
     ed4:	a9 f0       	breq	.+42     	; 0xf00 <__floatsisf+0x40>
     ed6:	f9 2f       	mov	r31, r25
     ed8:	96 e9       	ldi	r25, 0x96	; 150
     eda:	bb 27       	eor	r27, r27
     edc:	93 95       	inc	r25
     ede:	f6 95       	lsr	r31
     ee0:	87 95       	ror	r24
     ee2:	77 95       	ror	r23
     ee4:	67 95       	ror	r22
     ee6:	b7 95       	ror	r27
     ee8:	f1 11       	cpse	r31, r1
     eea:	f8 cf       	rjmp	.-16     	; 0xedc <__floatsisf+0x1c>
     eec:	fa f4       	brpl	.+62     	; 0xf2c <__floatsisf+0x6c>
     eee:	bb 0f       	add	r27, r27
     ef0:	11 f4       	brne	.+4      	; 0xef6 <__floatsisf+0x36>
     ef2:	60 ff       	sbrs	r22, 0
     ef4:	1b c0       	rjmp	.+54     	; 0xf2c <__floatsisf+0x6c>
     ef6:	6f 5f       	subi	r22, 0xFF	; 255
     ef8:	7f 4f       	sbci	r23, 0xFF	; 255
     efa:	8f 4f       	sbci	r24, 0xFF	; 255
     efc:	9f 4f       	sbci	r25, 0xFF	; 255
     efe:	16 c0       	rjmp	.+44     	; 0xf2c <__floatsisf+0x6c>
     f00:	88 23       	and	r24, r24
     f02:	11 f0       	breq	.+4      	; 0xf08 <__floatsisf+0x48>
     f04:	96 e9       	ldi	r25, 0x96	; 150
     f06:	11 c0       	rjmp	.+34     	; 0xf2a <__floatsisf+0x6a>
     f08:	77 23       	and	r23, r23
     f0a:	21 f0       	breq	.+8      	; 0xf14 <__floatsisf+0x54>
     f0c:	9e e8       	ldi	r25, 0x8E	; 142
     f0e:	87 2f       	mov	r24, r23
     f10:	76 2f       	mov	r23, r22
     f12:	05 c0       	rjmp	.+10     	; 0xf1e <__floatsisf+0x5e>
     f14:	66 23       	and	r22, r22
     f16:	71 f0       	breq	.+28     	; 0xf34 <__floatsisf+0x74>
     f18:	96 e8       	ldi	r25, 0x86	; 134
     f1a:	86 2f       	mov	r24, r22
     f1c:	70 e0       	ldi	r23, 0x00	; 0
     f1e:	60 e0       	ldi	r22, 0x00	; 0
     f20:	2a f0       	brmi	.+10     	; 0xf2c <__floatsisf+0x6c>
     f22:	9a 95       	dec	r25
     f24:	66 0f       	add	r22, r22
     f26:	77 1f       	adc	r23, r23
     f28:	88 1f       	adc	r24, r24
     f2a:	da f7       	brpl	.-10     	; 0xf22 <__floatsisf+0x62>
     f2c:	88 0f       	add	r24, r24
     f2e:	96 95       	lsr	r25
     f30:	87 95       	ror	r24
     f32:	97 f9       	bld	r25, 7
     f34:	08 95       	ret

00000f36 <__fp_cmp>:
     f36:	99 0f       	add	r25, r25
     f38:	00 08       	sbc	r0, r0
     f3a:	55 0f       	add	r21, r21
     f3c:	aa 0b       	sbc	r26, r26
     f3e:	e0 e8       	ldi	r30, 0x80	; 128
     f40:	fe ef       	ldi	r31, 0xFE	; 254
     f42:	16 16       	cp	r1, r22
     f44:	17 06       	cpc	r1, r23
     f46:	e8 07       	cpc	r30, r24
     f48:	f9 07       	cpc	r31, r25
     f4a:	c0 f0       	brcs	.+48     	; 0xf7c <__fp_cmp+0x46>
     f4c:	12 16       	cp	r1, r18
     f4e:	13 06       	cpc	r1, r19
     f50:	e4 07       	cpc	r30, r20
     f52:	f5 07       	cpc	r31, r21
     f54:	98 f0       	brcs	.+38     	; 0xf7c <__fp_cmp+0x46>
     f56:	62 1b       	sub	r22, r18
     f58:	73 0b       	sbc	r23, r19
     f5a:	84 0b       	sbc	r24, r20
     f5c:	95 0b       	sbc	r25, r21
     f5e:	39 f4       	brne	.+14     	; 0xf6e <__fp_cmp+0x38>
     f60:	0a 26       	eor	r0, r26
     f62:	61 f0       	breq	.+24     	; 0xf7c <__fp_cmp+0x46>
     f64:	23 2b       	or	r18, r19
     f66:	24 2b       	or	r18, r20
     f68:	25 2b       	or	r18, r21
     f6a:	21 f4       	brne	.+8      	; 0xf74 <__fp_cmp+0x3e>
     f6c:	08 95       	ret
     f6e:	0a 26       	eor	r0, r26
     f70:	09 f4       	brne	.+2      	; 0xf74 <__fp_cmp+0x3e>
     f72:	a1 40       	sbci	r26, 0x01	; 1
     f74:	a6 95       	lsr	r26
     f76:	8f ef       	ldi	r24, 0xFF	; 255
     f78:	81 1d       	adc	r24, r1
     f7a:	81 1d       	adc	r24, r1
     f7c:	08 95       	ret

00000f7e <__fp_inf>:
     f7e:	97 f9       	bld	r25, 7
     f80:	9f 67       	ori	r25, 0x7F	; 127
     f82:	80 e8       	ldi	r24, 0x80	; 128
     f84:	70 e0       	ldi	r23, 0x00	; 0
     f86:	60 e0       	ldi	r22, 0x00	; 0
     f88:	08 95       	ret

00000f8a <__fp_nan>:
     f8a:	9f ef       	ldi	r25, 0xFF	; 255
     f8c:	80 ec       	ldi	r24, 0xC0	; 192
     f8e:	08 95       	ret

00000f90 <__fp_pscA>:
     f90:	00 24       	eor	r0, r0
     f92:	0a 94       	dec	r0
     f94:	16 16       	cp	r1, r22
     f96:	17 06       	cpc	r1, r23
     f98:	18 06       	cpc	r1, r24
     f9a:	09 06       	cpc	r0, r25
     f9c:	08 95       	ret

00000f9e <__fp_pscB>:
     f9e:	00 24       	eor	r0, r0
     fa0:	0a 94       	dec	r0
     fa2:	12 16       	cp	r1, r18
     fa4:	13 06       	cpc	r1, r19
     fa6:	14 06       	cpc	r1, r20
     fa8:	05 06       	cpc	r0, r21
     faa:	08 95       	ret

00000fac <__fp_round>:
     fac:	09 2e       	mov	r0, r25
     fae:	03 94       	inc	r0
     fb0:	00 0c       	add	r0, r0
     fb2:	11 f4       	brne	.+4      	; 0xfb8 <__fp_round+0xc>
     fb4:	88 23       	and	r24, r24
     fb6:	52 f0       	brmi	.+20     	; 0xfcc <__fp_round+0x20>
     fb8:	bb 0f       	add	r27, r27
     fba:	40 f4       	brcc	.+16     	; 0xfcc <__fp_round+0x20>
     fbc:	bf 2b       	or	r27, r31
     fbe:	11 f4       	brne	.+4      	; 0xfc4 <__fp_round+0x18>
     fc0:	60 ff       	sbrs	r22, 0
     fc2:	04 c0       	rjmp	.+8      	; 0xfcc <__fp_round+0x20>
     fc4:	6f 5f       	subi	r22, 0xFF	; 255
     fc6:	7f 4f       	sbci	r23, 0xFF	; 255
     fc8:	8f 4f       	sbci	r24, 0xFF	; 255
     fca:	9f 4f       	sbci	r25, 0xFF	; 255
     fcc:	08 95       	ret

00000fce <__fp_split3>:
     fce:	57 fd       	sbrc	r21, 7
     fd0:	90 58       	subi	r25, 0x80	; 128
     fd2:	44 0f       	add	r20, r20
     fd4:	55 1f       	adc	r21, r21
     fd6:	59 f0       	breq	.+22     	; 0xfee <__fp_splitA+0x10>
     fd8:	5f 3f       	cpi	r21, 0xFF	; 255
     fda:	71 f0       	breq	.+28     	; 0xff8 <__fp_splitA+0x1a>
     fdc:	47 95       	ror	r20

00000fde <__fp_splitA>:
     fde:	88 0f       	add	r24, r24
     fe0:	97 fb       	bst	r25, 7
     fe2:	99 1f       	adc	r25, r25
     fe4:	61 f0       	breq	.+24     	; 0xffe <__fp_splitA+0x20>
     fe6:	9f 3f       	cpi	r25, 0xFF	; 255
     fe8:	79 f0       	breq	.+30     	; 0x1008 <__fp_splitA+0x2a>
     fea:	87 95       	ror	r24
     fec:	08 95       	ret
     fee:	12 16       	cp	r1, r18
     ff0:	13 06       	cpc	r1, r19
     ff2:	14 06       	cpc	r1, r20
     ff4:	55 1f       	adc	r21, r21
     ff6:	f2 cf       	rjmp	.-28     	; 0xfdc <__fp_split3+0xe>
     ff8:	46 95       	lsr	r20
     ffa:	f1 df       	rcall	.-30     	; 0xfde <__fp_splitA>
     ffc:	08 c0       	rjmp	.+16     	; 0x100e <__fp_splitA+0x30>
     ffe:	16 16       	cp	r1, r22
    1000:	17 06       	cpc	r1, r23
    1002:	18 06       	cpc	r1, r24
    1004:	99 1f       	adc	r25, r25
    1006:	f1 cf       	rjmp	.-30     	; 0xfea <__fp_splitA+0xc>
    1008:	86 95       	lsr	r24
    100a:	71 05       	cpc	r23, r1
    100c:	61 05       	cpc	r22, r1
    100e:	08 94       	sec
    1010:	08 95       	ret

00001012 <__fp_zero>:
    1012:	e8 94       	clt

00001014 <__fp_szero>:
    1014:	bb 27       	eor	r27, r27
    1016:	66 27       	eor	r22, r22
    1018:	77 27       	eor	r23, r23
    101a:	cb 01       	movw	r24, r22
    101c:	97 f9       	bld	r25, 7
    101e:	08 95       	ret

00001020 <__gesf2>:
    1020:	0e 94 9b 07 	call	0xf36	; 0xf36 <__fp_cmp>
    1024:	08 f4       	brcc	.+2      	; 0x1028 <__gesf2+0x8>
    1026:	8f ef       	ldi	r24, 0xFF	; 255
    1028:	08 95       	ret

0000102a <__mulsf3>:
    102a:	0e 94 28 08 	call	0x1050	; 0x1050 <__mulsf3x>
    102e:	0c 94 d6 07 	jmp	0xfac	; 0xfac <__fp_round>
    1032:	0e 94 c8 07 	call	0xf90	; 0xf90 <__fp_pscA>
    1036:	38 f0       	brcs	.+14     	; 0x1046 <__mulsf3+0x1c>
    1038:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__fp_pscB>
    103c:	20 f0       	brcs	.+8      	; 0x1046 <__mulsf3+0x1c>
    103e:	95 23       	and	r25, r21
    1040:	11 f0       	breq	.+4      	; 0x1046 <__mulsf3+0x1c>
    1042:	0c 94 bf 07 	jmp	0xf7e	; 0xf7e <__fp_inf>
    1046:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_nan>
    104a:	11 24       	eor	r1, r1
    104c:	0c 94 0a 08 	jmp	0x1014	; 0x1014 <__fp_szero>

00001050 <__mulsf3x>:
    1050:	0e 94 e7 07 	call	0xfce	; 0xfce <__fp_split3>
    1054:	70 f3       	brcs	.-36     	; 0x1032 <__mulsf3+0x8>

00001056 <__mulsf3_pse>:
    1056:	95 9f       	mul	r25, r21
    1058:	c1 f3       	breq	.-16     	; 0x104a <__mulsf3+0x20>
    105a:	95 0f       	add	r25, r21
    105c:	50 e0       	ldi	r21, 0x00	; 0
    105e:	55 1f       	adc	r21, r21
    1060:	62 9f       	mul	r22, r18
    1062:	f0 01       	movw	r30, r0
    1064:	72 9f       	mul	r23, r18
    1066:	bb 27       	eor	r27, r27
    1068:	f0 0d       	add	r31, r0
    106a:	b1 1d       	adc	r27, r1
    106c:	63 9f       	mul	r22, r19
    106e:	aa 27       	eor	r26, r26
    1070:	f0 0d       	add	r31, r0
    1072:	b1 1d       	adc	r27, r1
    1074:	aa 1f       	adc	r26, r26
    1076:	64 9f       	mul	r22, r20
    1078:	66 27       	eor	r22, r22
    107a:	b0 0d       	add	r27, r0
    107c:	a1 1d       	adc	r26, r1
    107e:	66 1f       	adc	r22, r22
    1080:	82 9f       	mul	r24, r18
    1082:	22 27       	eor	r18, r18
    1084:	b0 0d       	add	r27, r0
    1086:	a1 1d       	adc	r26, r1
    1088:	62 1f       	adc	r22, r18
    108a:	73 9f       	mul	r23, r19
    108c:	b0 0d       	add	r27, r0
    108e:	a1 1d       	adc	r26, r1
    1090:	62 1f       	adc	r22, r18
    1092:	83 9f       	mul	r24, r19
    1094:	a0 0d       	add	r26, r0
    1096:	61 1d       	adc	r22, r1
    1098:	22 1f       	adc	r18, r18
    109a:	74 9f       	mul	r23, r20
    109c:	33 27       	eor	r19, r19
    109e:	a0 0d       	add	r26, r0
    10a0:	61 1d       	adc	r22, r1
    10a2:	23 1f       	adc	r18, r19
    10a4:	84 9f       	mul	r24, r20
    10a6:	60 0d       	add	r22, r0
    10a8:	21 1d       	adc	r18, r1
    10aa:	82 2f       	mov	r24, r18
    10ac:	76 2f       	mov	r23, r22
    10ae:	6a 2f       	mov	r22, r26
    10b0:	11 24       	eor	r1, r1
    10b2:	9f 57       	subi	r25, 0x7F	; 127
    10b4:	50 40       	sbci	r21, 0x00	; 0
    10b6:	9a f0       	brmi	.+38     	; 0x10de <__mulsf3_pse+0x88>
    10b8:	f1 f0       	breq	.+60     	; 0x10f6 <__mulsf3_pse+0xa0>
    10ba:	88 23       	and	r24, r24
    10bc:	4a f0       	brmi	.+18     	; 0x10d0 <__mulsf3_pse+0x7a>
    10be:	ee 0f       	add	r30, r30
    10c0:	ff 1f       	adc	r31, r31
    10c2:	bb 1f       	adc	r27, r27
    10c4:	66 1f       	adc	r22, r22
    10c6:	77 1f       	adc	r23, r23
    10c8:	88 1f       	adc	r24, r24
    10ca:	91 50       	subi	r25, 0x01	; 1
    10cc:	50 40       	sbci	r21, 0x00	; 0
    10ce:	a9 f7       	brne	.-22     	; 0x10ba <__mulsf3_pse+0x64>
    10d0:	9e 3f       	cpi	r25, 0xFE	; 254
    10d2:	51 05       	cpc	r21, r1
    10d4:	80 f0       	brcs	.+32     	; 0x10f6 <__mulsf3_pse+0xa0>
    10d6:	0c 94 bf 07 	jmp	0xf7e	; 0xf7e <__fp_inf>
    10da:	0c 94 0a 08 	jmp	0x1014	; 0x1014 <__fp_szero>
    10de:	5f 3f       	cpi	r21, 0xFF	; 255
    10e0:	e4 f3       	brlt	.-8      	; 0x10da <__mulsf3_pse+0x84>
    10e2:	98 3e       	cpi	r25, 0xE8	; 232
    10e4:	d4 f3       	brlt	.-12     	; 0x10da <__mulsf3_pse+0x84>
    10e6:	86 95       	lsr	r24
    10e8:	77 95       	ror	r23
    10ea:	67 95       	ror	r22
    10ec:	b7 95       	ror	r27
    10ee:	f7 95       	ror	r31
    10f0:	e7 95       	ror	r30
    10f2:	9f 5f       	subi	r25, 0xFF	; 255
    10f4:	c1 f7       	brne	.-16     	; 0x10e6 <__mulsf3_pse+0x90>
    10f6:	fe 2b       	or	r31, r30
    10f8:	88 0f       	add	r24, r24
    10fa:	91 1d       	adc	r25, r1
    10fc:	96 95       	lsr	r25
    10fe:	87 95       	ror	r24
    1100:	97 f9       	bld	r25, 7
    1102:	08 95       	ret

00001104 <printf>:
    1104:	a0 e0       	ldi	r26, 0x00	; 0
    1106:	b0 e0       	ldi	r27, 0x00	; 0
    1108:	e8 e8       	ldi	r30, 0x88	; 136
    110a:	f8 e0       	ldi	r31, 0x08	; 8
    110c:	0c 94 69 0b 	jmp	0x16d2	; 0x16d2 <__prologue_saves__+0x20>
    1110:	ae 01       	movw	r20, r28
    1112:	4b 5f       	subi	r20, 0xFB	; 251
    1114:	5f 4f       	sbci	r21, 0xFF	; 255
    1116:	fa 01       	movw	r30, r20
    1118:	61 91       	ld	r22, Z+
    111a:	71 91       	ld	r23, Z+
    111c:	af 01       	movw	r20, r30
    111e:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <__iob+0x2>
    1122:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <__iob+0x3>
    1126:	0e 94 c8 08 	call	0x1190	; 0x1190 <vfprintf>
    112a:	e2 e0       	ldi	r30, 0x02	; 2
    112c:	0c 94 85 0b 	jmp	0x170a	; 0x170a <__epilogue_restores__+0x20>

00001130 <puts>:
    1130:	0f 93       	push	r16
    1132:	1f 93       	push	r17
    1134:	cf 93       	push	r28
    1136:	df 93       	push	r29
    1138:	e0 91 8a 01 	lds	r30, 0x018A	; 0x80018a <__iob+0x2>
    113c:	f0 91 8b 01 	lds	r31, 0x018B	; 0x80018b <__iob+0x3>
    1140:	23 81       	ldd	r18, Z+3	; 0x03
    1142:	21 ff       	sbrs	r18, 1
    1144:	1b c0       	rjmp	.+54     	; 0x117c <puts+0x4c>
    1146:	8c 01       	movw	r16, r24
    1148:	d0 e0       	ldi	r29, 0x00	; 0
    114a:	c0 e0       	ldi	r28, 0x00	; 0
    114c:	f8 01       	movw	r30, r16
    114e:	81 91       	ld	r24, Z+
    1150:	8f 01       	movw	r16, r30
    1152:	60 91 8a 01 	lds	r22, 0x018A	; 0x80018a <__iob+0x2>
    1156:	70 91 8b 01 	lds	r23, 0x018B	; 0x80018b <__iob+0x3>
    115a:	db 01       	movw	r26, r22
    115c:	18 96       	adiw	r26, 0x08	; 8
    115e:	ed 91       	ld	r30, X+
    1160:	fc 91       	ld	r31, X
    1162:	19 97       	sbiw	r26, 0x09	; 9
    1164:	88 23       	and	r24, r24
    1166:	31 f0       	breq	.+12     	; 0x1174 <puts+0x44>
    1168:	09 95       	icall
    116a:	89 2b       	or	r24, r25
    116c:	79 f3       	breq	.-34     	; 0x114c <puts+0x1c>
    116e:	df ef       	ldi	r29, 0xFF	; 255
    1170:	cf ef       	ldi	r28, 0xFF	; 255
    1172:	ec cf       	rjmp	.-40     	; 0x114c <puts+0x1c>
    1174:	8a e0       	ldi	r24, 0x0A	; 10
    1176:	09 95       	icall
    1178:	89 2b       	or	r24, r25
    117a:	19 f0       	breq	.+6      	; 0x1182 <puts+0x52>
    117c:	8f ef       	ldi	r24, 0xFF	; 255
    117e:	9f ef       	ldi	r25, 0xFF	; 255
    1180:	02 c0       	rjmp	.+4      	; 0x1186 <puts+0x56>
    1182:	8d 2f       	mov	r24, r29
    1184:	9c 2f       	mov	r25, r28
    1186:	df 91       	pop	r29
    1188:	cf 91       	pop	r28
    118a:	1f 91       	pop	r17
    118c:	0f 91       	pop	r16
    118e:	08 95       	ret

00001190 <vfprintf>:
    1190:	ab e0       	ldi	r26, 0x0B	; 11
    1192:	b0 e0       	ldi	r27, 0x00	; 0
    1194:	ee ec       	ldi	r30, 0xCE	; 206
    1196:	f8 e0       	ldi	r31, 0x08	; 8
    1198:	0c 94 59 0b 	jmp	0x16b2	; 0x16b2 <__prologue_saves__>
    119c:	6c 01       	movw	r12, r24
    119e:	7b 01       	movw	r14, r22
    11a0:	8a 01       	movw	r16, r20
    11a2:	fc 01       	movw	r30, r24
    11a4:	17 82       	std	Z+7, r1	; 0x07
    11a6:	16 82       	std	Z+6, r1	; 0x06
    11a8:	83 81       	ldd	r24, Z+3	; 0x03
    11aa:	81 ff       	sbrs	r24, 1
    11ac:	cc c1       	rjmp	.+920    	; 0x1546 <vfprintf+0x3b6>
    11ae:	ce 01       	movw	r24, r28
    11b0:	01 96       	adiw	r24, 0x01	; 1
    11b2:	3c 01       	movw	r6, r24
    11b4:	f6 01       	movw	r30, r12
    11b6:	93 81       	ldd	r25, Z+3	; 0x03
    11b8:	f7 01       	movw	r30, r14
    11ba:	93 fd       	sbrc	r25, 3
    11bc:	85 91       	lpm	r24, Z+
    11be:	93 ff       	sbrs	r25, 3
    11c0:	81 91       	ld	r24, Z+
    11c2:	7f 01       	movw	r14, r30
    11c4:	88 23       	and	r24, r24
    11c6:	09 f4       	brne	.+2      	; 0x11ca <vfprintf+0x3a>
    11c8:	ba c1       	rjmp	.+884    	; 0x153e <vfprintf+0x3ae>
    11ca:	85 32       	cpi	r24, 0x25	; 37
    11cc:	39 f4       	brne	.+14     	; 0x11dc <vfprintf+0x4c>
    11ce:	93 fd       	sbrc	r25, 3
    11d0:	85 91       	lpm	r24, Z+
    11d2:	93 ff       	sbrs	r25, 3
    11d4:	81 91       	ld	r24, Z+
    11d6:	7f 01       	movw	r14, r30
    11d8:	85 32       	cpi	r24, 0x25	; 37
    11da:	29 f4       	brne	.+10     	; 0x11e6 <vfprintf+0x56>
    11dc:	b6 01       	movw	r22, r12
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	0e 94 bf 0a 	call	0x157e	; 0x157e <fputc>
    11e4:	e7 cf       	rjmp	.-50     	; 0x11b4 <vfprintf+0x24>
    11e6:	91 2c       	mov	r9, r1
    11e8:	21 2c       	mov	r2, r1
    11ea:	31 2c       	mov	r3, r1
    11ec:	ff e1       	ldi	r31, 0x1F	; 31
    11ee:	f3 15       	cp	r31, r3
    11f0:	d8 f0       	brcs	.+54     	; 0x1228 <vfprintf+0x98>
    11f2:	8b 32       	cpi	r24, 0x2B	; 43
    11f4:	79 f0       	breq	.+30     	; 0x1214 <vfprintf+0x84>
    11f6:	38 f4       	brcc	.+14     	; 0x1206 <vfprintf+0x76>
    11f8:	80 32       	cpi	r24, 0x20	; 32
    11fa:	79 f0       	breq	.+30     	; 0x121a <vfprintf+0x8a>
    11fc:	83 32       	cpi	r24, 0x23	; 35
    11fe:	a1 f4       	brne	.+40     	; 0x1228 <vfprintf+0x98>
    1200:	23 2d       	mov	r18, r3
    1202:	20 61       	ori	r18, 0x10	; 16
    1204:	1d c0       	rjmp	.+58     	; 0x1240 <vfprintf+0xb0>
    1206:	8d 32       	cpi	r24, 0x2D	; 45
    1208:	61 f0       	breq	.+24     	; 0x1222 <vfprintf+0x92>
    120a:	80 33       	cpi	r24, 0x30	; 48
    120c:	69 f4       	brne	.+26     	; 0x1228 <vfprintf+0x98>
    120e:	23 2d       	mov	r18, r3
    1210:	21 60       	ori	r18, 0x01	; 1
    1212:	16 c0       	rjmp	.+44     	; 0x1240 <vfprintf+0xb0>
    1214:	83 2d       	mov	r24, r3
    1216:	82 60       	ori	r24, 0x02	; 2
    1218:	38 2e       	mov	r3, r24
    121a:	e3 2d       	mov	r30, r3
    121c:	e4 60       	ori	r30, 0x04	; 4
    121e:	3e 2e       	mov	r3, r30
    1220:	2a c0       	rjmp	.+84     	; 0x1276 <vfprintf+0xe6>
    1222:	f3 2d       	mov	r31, r3
    1224:	f8 60       	ori	r31, 0x08	; 8
    1226:	1d c0       	rjmp	.+58     	; 0x1262 <vfprintf+0xd2>
    1228:	37 fc       	sbrc	r3, 7
    122a:	2d c0       	rjmp	.+90     	; 0x1286 <vfprintf+0xf6>
    122c:	20 ed       	ldi	r18, 0xD0	; 208
    122e:	28 0f       	add	r18, r24
    1230:	2a 30       	cpi	r18, 0x0A	; 10
    1232:	40 f0       	brcs	.+16     	; 0x1244 <vfprintf+0xb4>
    1234:	8e 32       	cpi	r24, 0x2E	; 46
    1236:	b9 f4       	brne	.+46     	; 0x1266 <vfprintf+0xd6>
    1238:	36 fc       	sbrc	r3, 6
    123a:	81 c1       	rjmp	.+770    	; 0x153e <vfprintf+0x3ae>
    123c:	23 2d       	mov	r18, r3
    123e:	20 64       	ori	r18, 0x40	; 64
    1240:	32 2e       	mov	r3, r18
    1242:	19 c0       	rjmp	.+50     	; 0x1276 <vfprintf+0xe6>
    1244:	36 fe       	sbrs	r3, 6
    1246:	06 c0       	rjmp	.+12     	; 0x1254 <vfprintf+0xc4>
    1248:	8a e0       	ldi	r24, 0x0A	; 10
    124a:	98 9e       	mul	r9, r24
    124c:	20 0d       	add	r18, r0
    124e:	11 24       	eor	r1, r1
    1250:	92 2e       	mov	r9, r18
    1252:	11 c0       	rjmp	.+34     	; 0x1276 <vfprintf+0xe6>
    1254:	ea e0       	ldi	r30, 0x0A	; 10
    1256:	2e 9e       	mul	r2, r30
    1258:	20 0d       	add	r18, r0
    125a:	11 24       	eor	r1, r1
    125c:	22 2e       	mov	r2, r18
    125e:	f3 2d       	mov	r31, r3
    1260:	f0 62       	ori	r31, 0x20	; 32
    1262:	3f 2e       	mov	r3, r31
    1264:	08 c0       	rjmp	.+16     	; 0x1276 <vfprintf+0xe6>
    1266:	8c 36       	cpi	r24, 0x6C	; 108
    1268:	21 f4       	brne	.+8      	; 0x1272 <vfprintf+0xe2>
    126a:	83 2d       	mov	r24, r3
    126c:	80 68       	ori	r24, 0x80	; 128
    126e:	38 2e       	mov	r3, r24
    1270:	02 c0       	rjmp	.+4      	; 0x1276 <vfprintf+0xe6>
    1272:	88 36       	cpi	r24, 0x68	; 104
    1274:	41 f4       	brne	.+16     	; 0x1286 <vfprintf+0xf6>
    1276:	f7 01       	movw	r30, r14
    1278:	93 fd       	sbrc	r25, 3
    127a:	85 91       	lpm	r24, Z+
    127c:	93 ff       	sbrs	r25, 3
    127e:	81 91       	ld	r24, Z+
    1280:	7f 01       	movw	r14, r30
    1282:	81 11       	cpse	r24, r1
    1284:	b3 cf       	rjmp	.-154    	; 0x11ec <vfprintf+0x5c>
    1286:	98 2f       	mov	r25, r24
    1288:	9f 7d       	andi	r25, 0xDF	; 223
    128a:	95 54       	subi	r25, 0x45	; 69
    128c:	93 30       	cpi	r25, 0x03	; 3
    128e:	28 f4       	brcc	.+10     	; 0x129a <vfprintf+0x10a>
    1290:	0c 5f       	subi	r16, 0xFC	; 252
    1292:	1f 4f       	sbci	r17, 0xFF	; 255
    1294:	9f e3       	ldi	r25, 0x3F	; 63
    1296:	99 83       	std	Y+1, r25	; 0x01
    1298:	0d c0       	rjmp	.+26     	; 0x12b4 <vfprintf+0x124>
    129a:	83 36       	cpi	r24, 0x63	; 99
    129c:	31 f0       	breq	.+12     	; 0x12aa <vfprintf+0x11a>
    129e:	83 37       	cpi	r24, 0x73	; 115
    12a0:	71 f0       	breq	.+28     	; 0x12be <vfprintf+0x12e>
    12a2:	83 35       	cpi	r24, 0x53	; 83
    12a4:	09 f0       	breq	.+2      	; 0x12a8 <vfprintf+0x118>
    12a6:	59 c0       	rjmp	.+178    	; 0x135a <vfprintf+0x1ca>
    12a8:	21 c0       	rjmp	.+66     	; 0x12ec <vfprintf+0x15c>
    12aa:	f8 01       	movw	r30, r16
    12ac:	80 81       	ld	r24, Z
    12ae:	89 83       	std	Y+1, r24	; 0x01
    12b0:	0e 5f       	subi	r16, 0xFE	; 254
    12b2:	1f 4f       	sbci	r17, 0xFF	; 255
    12b4:	88 24       	eor	r8, r8
    12b6:	83 94       	inc	r8
    12b8:	91 2c       	mov	r9, r1
    12ba:	53 01       	movw	r10, r6
    12bc:	13 c0       	rjmp	.+38     	; 0x12e4 <vfprintf+0x154>
    12be:	28 01       	movw	r4, r16
    12c0:	f2 e0       	ldi	r31, 0x02	; 2
    12c2:	4f 0e       	add	r4, r31
    12c4:	51 1c       	adc	r5, r1
    12c6:	f8 01       	movw	r30, r16
    12c8:	a0 80       	ld	r10, Z
    12ca:	b1 80       	ldd	r11, Z+1	; 0x01
    12cc:	36 fe       	sbrs	r3, 6
    12ce:	03 c0       	rjmp	.+6      	; 0x12d6 <vfprintf+0x146>
    12d0:	69 2d       	mov	r22, r9
    12d2:	70 e0       	ldi	r23, 0x00	; 0
    12d4:	02 c0       	rjmp	.+4      	; 0x12da <vfprintf+0x14a>
    12d6:	6f ef       	ldi	r22, 0xFF	; 255
    12d8:	7f ef       	ldi	r23, 0xFF	; 255
    12da:	c5 01       	movw	r24, r10
    12dc:	0e 94 b4 0a 	call	0x1568	; 0x1568 <strnlen>
    12e0:	4c 01       	movw	r8, r24
    12e2:	82 01       	movw	r16, r4
    12e4:	f3 2d       	mov	r31, r3
    12e6:	ff 77       	andi	r31, 0x7F	; 127
    12e8:	3f 2e       	mov	r3, r31
    12ea:	16 c0       	rjmp	.+44     	; 0x1318 <vfprintf+0x188>
    12ec:	28 01       	movw	r4, r16
    12ee:	22 e0       	ldi	r18, 0x02	; 2
    12f0:	42 0e       	add	r4, r18
    12f2:	51 1c       	adc	r5, r1
    12f4:	f8 01       	movw	r30, r16
    12f6:	a0 80       	ld	r10, Z
    12f8:	b1 80       	ldd	r11, Z+1	; 0x01
    12fa:	36 fe       	sbrs	r3, 6
    12fc:	03 c0       	rjmp	.+6      	; 0x1304 <vfprintf+0x174>
    12fe:	69 2d       	mov	r22, r9
    1300:	70 e0       	ldi	r23, 0x00	; 0
    1302:	02 c0       	rjmp	.+4      	; 0x1308 <vfprintf+0x178>
    1304:	6f ef       	ldi	r22, 0xFF	; 255
    1306:	7f ef       	ldi	r23, 0xFF	; 255
    1308:	c5 01       	movw	r24, r10
    130a:	0e 94 a9 0a 	call	0x1552	; 0x1552 <strnlen_P>
    130e:	4c 01       	movw	r8, r24
    1310:	f3 2d       	mov	r31, r3
    1312:	f0 68       	ori	r31, 0x80	; 128
    1314:	3f 2e       	mov	r3, r31
    1316:	82 01       	movw	r16, r4
    1318:	33 fc       	sbrc	r3, 3
    131a:	1b c0       	rjmp	.+54     	; 0x1352 <vfprintf+0x1c2>
    131c:	82 2d       	mov	r24, r2
    131e:	90 e0       	ldi	r25, 0x00	; 0
    1320:	88 16       	cp	r8, r24
    1322:	99 06       	cpc	r9, r25
    1324:	b0 f4       	brcc	.+44     	; 0x1352 <vfprintf+0x1c2>
    1326:	b6 01       	movw	r22, r12
    1328:	80 e2       	ldi	r24, 0x20	; 32
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	0e 94 bf 0a 	call	0x157e	; 0x157e <fputc>
    1330:	2a 94       	dec	r2
    1332:	f4 cf       	rjmp	.-24     	; 0x131c <vfprintf+0x18c>
    1334:	f5 01       	movw	r30, r10
    1336:	37 fc       	sbrc	r3, 7
    1338:	85 91       	lpm	r24, Z+
    133a:	37 fe       	sbrs	r3, 7
    133c:	81 91       	ld	r24, Z+
    133e:	5f 01       	movw	r10, r30
    1340:	b6 01       	movw	r22, r12
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	0e 94 bf 0a 	call	0x157e	; 0x157e <fputc>
    1348:	21 10       	cpse	r2, r1
    134a:	2a 94       	dec	r2
    134c:	21 e0       	ldi	r18, 0x01	; 1
    134e:	82 1a       	sub	r8, r18
    1350:	91 08       	sbc	r9, r1
    1352:	81 14       	cp	r8, r1
    1354:	91 04       	cpc	r9, r1
    1356:	71 f7       	brne	.-36     	; 0x1334 <vfprintf+0x1a4>
    1358:	e8 c0       	rjmp	.+464    	; 0x152a <vfprintf+0x39a>
    135a:	84 36       	cpi	r24, 0x64	; 100
    135c:	11 f0       	breq	.+4      	; 0x1362 <vfprintf+0x1d2>
    135e:	89 36       	cpi	r24, 0x69	; 105
    1360:	41 f5       	brne	.+80     	; 0x13b2 <vfprintf+0x222>
    1362:	f8 01       	movw	r30, r16
    1364:	37 fe       	sbrs	r3, 7
    1366:	07 c0       	rjmp	.+14     	; 0x1376 <vfprintf+0x1e6>
    1368:	60 81       	ld	r22, Z
    136a:	71 81       	ldd	r23, Z+1	; 0x01
    136c:	82 81       	ldd	r24, Z+2	; 0x02
    136e:	93 81       	ldd	r25, Z+3	; 0x03
    1370:	0c 5f       	subi	r16, 0xFC	; 252
    1372:	1f 4f       	sbci	r17, 0xFF	; 255
    1374:	08 c0       	rjmp	.+16     	; 0x1386 <vfprintf+0x1f6>
    1376:	60 81       	ld	r22, Z
    1378:	71 81       	ldd	r23, Z+1	; 0x01
    137a:	07 2e       	mov	r0, r23
    137c:	00 0c       	add	r0, r0
    137e:	88 0b       	sbc	r24, r24
    1380:	99 0b       	sbc	r25, r25
    1382:	0e 5f       	subi	r16, 0xFE	; 254
    1384:	1f 4f       	sbci	r17, 0xFF	; 255
    1386:	f3 2d       	mov	r31, r3
    1388:	ff 76       	andi	r31, 0x6F	; 111
    138a:	3f 2e       	mov	r3, r31
    138c:	97 ff       	sbrs	r25, 7
    138e:	09 c0       	rjmp	.+18     	; 0x13a2 <vfprintf+0x212>
    1390:	90 95       	com	r25
    1392:	80 95       	com	r24
    1394:	70 95       	com	r23
    1396:	61 95       	neg	r22
    1398:	7f 4f       	sbci	r23, 0xFF	; 255
    139a:	8f 4f       	sbci	r24, 0xFF	; 255
    139c:	9f 4f       	sbci	r25, 0xFF	; 255
    139e:	f0 68       	ori	r31, 0x80	; 128
    13a0:	3f 2e       	mov	r3, r31
    13a2:	2a e0       	ldi	r18, 0x0A	; 10
    13a4:	30 e0       	ldi	r19, 0x00	; 0
    13a6:	a3 01       	movw	r20, r6
    13a8:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <__ultoa_invert>
    13ac:	88 2e       	mov	r8, r24
    13ae:	86 18       	sub	r8, r6
    13b0:	45 c0       	rjmp	.+138    	; 0x143c <vfprintf+0x2ac>
    13b2:	85 37       	cpi	r24, 0x75	; 117
    13b4:	31 f4       	brne	.+12     	; 0x13c2 <vfprintf+0x232>
    13b6:	23 2d       	mov	r18, r3
    13b8:	2f 7e       	andi	r18, 0xEF	; 239
    13ba:	b2 2e       	mov	r11, r18
    13bc:	2a e0       	ldi	r18, 0x0A	; 10
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	25 c0       	rjmp	.+74     	; 0x140c <vfprintf+0x27c>
    13c2:	93 2d       	mov	r25, r3
    13c4:	99 7f       	andi	r25, 0xF9	; 249
    13c6:	b9 2e       	mov	r11, r25
    13c8:	8f 36       	cpi	r24, 0x6F	; 111
    13ca:	c1 f0       	breq	.+48     	; 0x13fc <vfprintf+0x26c>
    13cc:	18 f4       	brcc	.+6      	; 0x13d4 <vfprintf+0x244>
    13ce:	88 35       	cpi	r24, 0x58	; 88
    13d0:	79 f0       	breq	.+30     	; 0x13f0 <vfprintf+0x260>
    13d2:	b5 c0       	rjmp	.+362    	; 0x153e <vfprintf+0x3ae>
    13d4:	80 37       	cpi	r24, 0x70	; 112
    13d6:	19 f0       	breq	.+6      	; 0x13de <vfprintf+0x24e>
    13d8:	88 37       	cpi	r24, 0x78	; 120
    13da:	21 f0       	breq	.+8      	; 0x13e4 <vfprintf+0x254>
    13dc:	b0 c0       	rjmp	.+352    	; 0x153e <vfprintf+0x3ae>
    13de:	e9 2f       	mov	r30, r25
    13e0:	e0 61       	ori	r30, 0x10	; 16
    13e2:	be 2e       	mov	r11, r30
    13e4:	b4 fe       	sbrs	r11, 4
    13e6:	0d c0       	rjmp	.+26     	; 0x1402 <vfprintf+0x272>
    13e8:	fb 2d       	mov	r31, r11
    13ea:	f4 60       	ori	r31, 0x04	; 4
    13ec:	bf 2e       	mov	r11, r31
    13ee:	09 c0       	rjmp	.+18     	; 0x1402 <vfprintf+0x272>
    13f0:	34 fe       	sbrs	r3, 4
    13f2:	0a c0       	rjmp	.+20     	; 0x1408 <vfprintf+0x278>
    13f4:	29 2f       	mov	r18, r25
    13f6:	26 60       	ori	r18, 0x06	; 6
    13f8:	b2 2e       	mov	r11, r18
    13fa:	06 c0       	rjmp	.+12     	; 0x1408 <vfprintf+0x278>
    13fc:	28 e0       	ldi	r18, 0x08	; 8
    13fe:	30 e0       	ldi	r19, 0x00	; 0
    1400:	05 c0       	rjmp	.+10     	; 0x140c <vfprintf+0x27c>
    1402:	20 e1       	ldi	r18, 0x10	; 16
    1404:	30 e0       	ldi	r19, 0x00	; 0
    1406:	02 c0       	rjmp	.+4      	; 0x140c <vfprintf+0x27c>
    1408:	20 e1       	ldi	r18, 0x10	; 16
    140a:	32 e0       	ldi	r19, 0x02	; 2
    140c:	f8 01       	movw	r30, r16
    140e:	b7 fe       	sbrs	r11, 7
    1410:	07 c0       	rjmp	.+14     	; 0x1420 <vfprintf+0x290>
    1412:	60 81       	ld	r22, Z
    1414:	71 81       	ldd	r23, Z+1	; 0x01
    1416:	82 81       	ldd	r24, Z+2	; 0x02
    1418:	93 81       	ldd	r25, Z+3	; 0x03
    141a:	0c 5f       	subi	r16, 0xFC	; 252
    141c:	1f 4f       	sbci	r17, 0xFF	; 255
    141e:	06 c0       	rjmp	.+12     	; 0x142c <vfprintf+0x29c>
    1420:	60 81       	ld	r22, Z
    1422:	71 81       	ldd	r23, Z+1	; 0x01
    1424:	80 e0       	ldi	r24, 0x00	; 0
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	0e 5f       	subi	r16, 0xFE	; 254
    142a:	1f 4f       	sbci	r17, 0xFF	; 255
    142c:	a3 01       	movw	r20, r6
    142e:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <__ultoa_invert>
    1432:	88 2e       	mov	r8, r24
    1434:	86 18       	sub	r8, r6
    1436:	fb 2d       	mov	r31, r11
    1438:	ff 77       	andi	r31, 0x7F	; 127
    143a:	3f 2e       	mov	r3, r31
    143c:	36 fe       	sbrs	r3, 6
    143e:	0d c0       	rjmp	.+26     	; 0x145a <vfprintf+0x2ca>
    1440:	23 2d       	mov	r18, r3
    1442:	2e 7f       	andi	r18, 0xFE	; 254
    1444:	a2 2e       	mov	r10, r18
    1446:	89 14       	cp	r8, r9
    1448:	58 f4       	brcc	.+22     	; 0x1460 <vfprintf+0x2d0>
    144a:	34 fe       	sbrs	r3, 4
    144c:	0b c0       	rjmp	.+22     	; 0x1464 <vfprintf+0x2d4>
    144e:	32 fc       	sbrc	r3, 2
    1450:	09 c0       	rjmp	.+18     	; 0x1464 <vfprintf+0x2d4>
    1452:	83 2d       	mov	r24, r3
    1454:	8e 7e       	andi	r24, 0xEE	; 238
    1456:	a8 2e       	mov	r10, r24
    1458:	05 c0       	rjmp	.+10     	; 0x1464 <vfprintf+0x2d4>
    145a:	b8 2c       	mov	r11, r8
    145c:	a3 2c       	mov	r10, r3
    145e:	03 c0       	rjmp	.+6      	; 0x1466 <vfprintf+0x2d6>
    1460:	b8 2c       	mov	r11, r8
    1462:	01 c0       	rjmp	.+2      	; 0x1466 <vfprintf+0x2d6>
    1464:	b9 2c       	mov	r11, r9
    1466:	a4 fe       	sbrs	r10, 4
    1468:	0f c0       	rjmp	.+30     	; 0x1488 <vfprintf+0x2f8>
    146a:	fe 01       	movw	r30, r28
    146c:	e8 0d       	add	r30, r8
    146e:	f1 1d       	adc	r31, r1
    1470:	80 81       	ld	r24, Z
    1472:	80 33       	cpi	r24, 0x30	; 48
    1474:	21 f4       	brne	.+8      	; 0x147e <vfprintf+0x2ee>
    1476:	9a 2d       	mov	r25, r10
    1478:	99 7e       	andi	r25, 0xE9	; 233
    147a:	a9 2e       	mov	r10, r25
    147c:	09 c0       	rjmp	.+18     	; 0x1490 <vfprintf+0x300>
    147e:	a2 fe       	sbrs	r10, 2
    1480:	06 c0       	rjmp	.+12     	; 0x148e <vfprintf+0x2fe>
    1482:	b3 94       	inc	r11
    1484:	b3 94       	inc	r11
    1486:	04 c0       	rjmp	.+8      	; 0x1490 <vfprintf+0x300>
    1488:	8a 2d       	mov	r24, r10
    148a:	86 78       	andi	r24, 0x86	; 134
    148c:	09 f0       	breq	.+2      	; 0x1490 <vfprintf+0x300>
    148e:	b3 94       	inc	r11
    1490:	a3 fc       	sbrc	r10, 3
    1492:	11 c0       	rjmp	.+34     	; 0x14b6 <vfprintf+0x326>
    1494:	a0 fe       	sbrs	r10, 0
    1496:	06 c0       	rjmp	.+12     	; 0x14a4 <vfprintf+0x314>
    1498:	b2 14       	cp	r11, r2
    149a:	88 f4       	brcc	.+34     	; 0x14be <vfprintf+0x32e>
    149c:	28 0c       	add	r2, r8
    149e:	92 2c       	mov	r9, r2
    14a0:	9b 18       	sub	r9, r11
    14a2:	0e c0       	rjmp	.+28     	; 0x14c0 <vfprintf+0x330>
    14a4:	b2 14       	cp	r11, r2
    14a6:	60 f4       	brcc	.+24     	; 0x14c0 <vfprintf+0x330>
    14a8:	b6 01       	movw	r22, r12
    14aa:	80 e2       	ldi	r24, 0x20	; 32
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	0e 94 bf 0a 	call	0x157e	; 0x157e <fputc>
    14b2:	b3 94       	inc	r11
    14b4:	f7 cf       	rjmp	.-18     	; 0x14a4 <vfprintf+0x314>
    14b6:	b2 14       	cp	r11, r2
    14b8:	18 f4       	brcc	.+6      	; 0x14c0 <vfprintf+0x330>
    14ba:	2b 18       	sub	r2, r11
    14bc:	02 c0       	rjmp	.+4      	; 0x14c2 <vfprintf+0x332>
    14be:	98 2c       	mov	r9, r8
    14c0:	21 2c       	mov	r2, r1
    14c2:	a4 fe       	sbrs	r10, 4
    14c4:	10 c0       	rjmp	.+32     	; 0x14e6 <vfprintf+0x356>
    14c6:	b6 01       	movw	r22, r12
    14c8:	80 e3       	ldi	r24, 0x30	; 48
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	0e 94 bf 0a 	call	0x157e	; 0x157e <fputc>
    14d0:	a2 fe       	sbrs	r10, 2
    14d2:	17 c0       	rjmp	.+46     	; 0x1502 <vfprintf+0x372>
    14d4:	a1 fc       	sbrc	r10, 1
    14d6:	03 c0       	rjmp	.+6      	; 0x14de <vfprintf+0x34e>
    14d8:	88 e7       	ldi	r24, 0x78	; 120
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	02 c0       	rjmp	.+4      	; 0x14e2 <vfprintf+0x352>
    14de:	88 e5       	ldi	r24, 0x58	; 88
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	b6 01       	movw	r22, r12
    14e4:	0c c0       	rjmp	.+24     	; 0x14fe <vfprintf+0x36e>
    14e6:	8a 2d       	mov	r24, r10
    14e8:	86 78       	andi	r24, 0x86	; 134
    14ea:	59 f0       	breq	.+22     	; 0x1502 <vfprintf+0x372>
    14ec:	a1 fe       	sbrs	r10, 1
    14ee:	02 c0       	rjmp	.+4      	; 0x14f4 <vfprintf+0x364>
    14f0:	8b e2       	ldi	r24, 0x2B	; 43
    14f2:	01 c0       	rjmp	.+2      	; 0x14f6 <vfprintf+0x366>
    14f4:	80 e2       	ldi	r24, 0x20	; 32
    14f6:	a7 fc       	sbrc	r10, 7
    14f8:	8d e2       	ldi	r24, 0x2D	; 45
    14fa:	b6 01       	movw	r22, r12
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	0e 94 bf 0a 	call	0x157e	; 0x157e <fputc>
    1502:	89 14       	cp	r8, r9
    1504:	38 f4       	brcc	.+14     	; 0x1514 <vfprintf+0x384>
    1506:	b6 01       	movw	r22, r12
    1508:	80 e3       	ldi	r24, 0x30	; 48
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	0e 94 bf 0a 	call	0x157e	; 0x157e <fputc>
    1510:	9a 94       	dec	r9
    1512:	f7 cf       	rjmp	.-18     	; 0x1502 <vfprintf+0x372>
    1514:	8a 94       	dec	r8
    1516:	f3 01       	movw	r30, r6
    1518:	e8 0d       	add	r30, r8
    151a:	f1 1d       	adc	r31, r1
    151c:	80 81       	ld	r24, Z
    151e:	b6 01       	movw	r22, r12
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	0e 94 bf 0a 	call	0x157e	; 0x157e <fputc>
    1526:	81 10       	cpse	r8, r1
    1528:	f5 cf       	rjmp	.-22     	; 0x1514 <vfprintf+0x384>
    152a:	22 20       	and	r2, r2
    152c:	09 f4       	brne	.+2      	; 0x1530 <vfprintf+0x3a0>
    152e:	42 ce       	rjmp	.-892    	; 0x11b4 <vfprintf+0x24>
    1530:	b6 01       	movw	r22, r12
    1532:	80 e2       	ldi	r24, 0x20	; 32
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	0e 94 bf 0a 	call	0x157e	; 0x157e <fputc>
    153a:	2a 94       	dec	r2
    153c:	f6 cf       	rjmp	.-20     	; 0x152a <vfprintf+0x39a>
    153e:	f6 01       	movw	r30, r12
    1540:	86 81       	ldd	r24, Z+6	; 0x06
    1542:	97 81       	ldd	r25, Z+7	; 0x07
    1544:	02 c0       	rjmp	.+4      	; 0x154a <vfprintf+0x3ba>
    1546:	8f ef       	ldi	r24, 0xFF	; 255
    1548:	9f ef       	ldi	r25, 0xFF	; 255
    154a:	2b 96       	adiw	r28, 0x0b	; 11
    154c:	e2 e1       	ldi	r30, 0x12	; 18
    154e:	0c 94 75 0b 	jmp	0x16ea	; 0x16ea <__epilogue_restores__>

00001552 <strnlen_P>:
    1552:	fc 01       	movw	r30, r24
    1554:	05 90       	lpm	r0, Z+
    1556:	61 50       	subi	r22, 0x01	; 1
    1558:	70 40       	sbci	r23, 0x00	; 0
    155a:	01 10       	cpse	r0, r1
    155c:	d8 f7       	brcc	.-10     	; 0x1554 <strnlen_P+0x2>
    155e:	80 95       	com	r24
    1560:	90 95       	com	r25
    1562:	8e 0f       	add	r24, r30
    1564:	9f 1f       	adc	r25, r31
    1566:	08 95       	ret

00001568 <strnlen>:
    1568:	fc 01       	movw	r30, r24
    156a:	61 50       	subi	r22, 0x01	; 1
    156c:	70 40       	sbci	r23, 0x00	; 0
    156e:	01 90       	ld	r0, Z+
    1570:	01 10       	cpse	r0, r1
    1572:	d8 f7       	brcc	.-10     	; 0x156a <strnlen+0x2>
    1574:	80 95       	com	r24
    1576:	90 95       	com	r25
    1578:	8e 0f       	add	r24, r30
    157a:	9f 1f       	adc	r25, r31
    157c:	08 95       	ret

0000157e <fputc>:
    157e:	0f 93       	push	r16
    1580:	1f 93       	push	r17
    1582:	cf 93       	push	r28
    1584:	df 93       	push	r29
    1586:	fb 01       	movw	r30, r22
    1588:	23 81       	ldd	r18, Z+3	; 0x03
    158a:	21 fd       	sbrc	r18, 1
    158c:	03 c0       	rjmp	.+6      	; 0x1594 <fputc+0x16>
    158e:	8f ef       	ldi	r24, 0xFF	; 255
    1590:	9f ef       	ldi	r25, 0xFF	; 255
    1592:	2c c0       	rjmp	.+88     	; 0x15ec <fputc+0x6e>
    1594:	22 ff       	sbrs	r18, 2
    1596:	16 c0       	rjmp	.+44     	; 0x15c4 <fputc+0x46>
    1598:	46 81       	ldd	r20, Z+6	; 0x06
    159a:	57 81       	ldd	r21, Z+7	; 0x07
    159c:	24 81       	ldd	r18, Z+4	; 0x04
    159e:	35 81       	ldd	r19, Z+5	; 0x05
    15a0:	42 17       	cp	r20, r18
    15a2:	53 07       	cpc	r21, r19
    15a4:	44 f4       	brge	.+16     	; 0x15b6 <fputc+0x38>
    15a6:	a0 81       	ld	r26, Z
    15a8:	b1 81       	ldd	r27, Z+1	; 0x01
    15aa:	9d 01       	movw	r18, r26
    15ac:	2f 5f       	subi	r18, 0xFF	; 255
    15ae:	3f 4f       	sbci	r19, 0xFF	; 255
    15b0:	31 83       	std	Z+1, r19	; 0x01
    15b2:	20 83       	st	Z, r18
    15b4:	8c 93       	st	X, r24
    15b6:	26 81       	ldd	r18, Z+6	; 0x06
    15b8:	37 81       	ldd	r19, Z+7	; 0x07
    15ba:	2f 5f       	subi	r18, 0xFF	; 255
    15bc:	3f 4f       	sbci	r19, 0xFF	; 255
    15be:	37 83       	std	Z+7, r19	; 0x07
    15c0:	26 83       	std	Z+6, r18	; 0x06
    15c2:	14 c0       	rjmp	.+40     	; 0x15ec <fputc+0x6e>
    15c4:	8b 01       	movw	r16, r22
    15c6:	ec 01       	movw	r28, r24
    15c8:	fb 01       	movw	r30, r22
    15ca:	00 84       	ldd	r0, Z+8	; 0x08
    15cc:	f1 85       	ldd	r31, Z+9	; 0x09
    15ce:	e0 2d       	mov	r30, r0
    15d0:	09 95       	icall
    15d2:	89 2b       	or	r24, r25
    15d4:	e1 f6       	brne	.-72     	; 0x158e <fputc+0x10>
    15d6:	d8 01       	movw	r26, r16
    15d8:	16 96       	adiw	r26, 0x06	; 6
    15da:	8d 91       	ld	r24, X+
    15dc:	9c 91       	ld	r25, X
    15de:	17 97       	sbiw	r26, 0x07	; 7
    15e0:	01 96       	adiw	r24, 0x01	; 1
    15e2:	17 96       	adiw	r26, 0x07	; 7
    15e4:	9c 93       	st	X, r25
    15e6:	8e 93       	st	-X, r24
    15e8:	16 97       	sbiw	r26, 0x06	; 6
    15ea:	ce 01       	movw	r24, r28
    15ec:	df 91       	pop	r29
    15ee:	cf 91       	pop	r28
    15f0:	1f 91       	pop	r17
    15f2:	0f 91       	pop	r16
    15f4:	08 95       	ret

000015f6 <__ultoa_invert>:
    15f6:	fa 01       	movw	r30, r20
    15f8:	aa 27       	eor	r26, r26
    15fa:	28 30       	cpi	r18, 0x08	; 8
    15fc:	51 f1       	breq	.+84     	; 0x1652 <__ultoa_invert+0x5c>
    15fe:	20 31       	cpi	r18, 0x10	; 16
    1600:	81 f1       	breq	.+96     	; 0x1662 <__ultoa_invert+0x6c>
    1602:	e8 94       	clt
    1604:	6f 93       	push	r22
    1606:	6e 7f       	andi	r22, 0xFE	; 254
    1608:	6e 5f       	subi	r22, 0xFE	; 254
    160a:	7f 4f       	sbci	r23, 0xFF	; 255
    160c:	8f 4f       	sbci	r24, 0xFF	; 255
    160e:	9f 4f       	sbci	r25, 0xFF	; 255
    1610:	af 4f       	sbci	r26, 0xFF	; 255
    1612:	b1 e0       	ldi	r27, 0x01	; 1
    1614:	3e d0       	rcall	.+124    	; 0x1692 <__ultoa_invert+0x9c>
    1616:	b4 e0       	ldi	r27, 0x04	; 4
    1618:	3c d0       	rcall	.+120    	; 0x1692 <__ultoa_invert+0x9c>
    161a:	67 0f       	add	r22, r23
    161c:	78 1f       	adc	r23, r24
    161e:	89 1f       	adc	r24, r25
    1620:	9a 1f       	adc	r25, r26
    1622:	a1 1d       	adc	r26, r1
    1624:	68 0f       	add	r22, r24
    1626:	79 1f       	adc	r23, r25
    1628:	8a 1f       	adc	r24, r26
    162a:	91 1d       	adc	r25, r1
    162c:	a1 1d       	adc	r26, r1
    162e:	6a 0f       	add	r22, r26
    1630:	71 1d       	adc	r23, r1
    1632:	81 1d       	adc	r24, r1
    1634:	91 1d       	adc	r25, r1
    1636:	a1 1d       	adc	r26, r1
    1638:	20 d0       	rcall	.+64     	; 0x167a <__ultoa_invert+0x84>
    163a:	09 f4       	brne	.+2      	; 0x163e <__ultoa_invert+0x48>
    163c:	68 94       	set
    163e:	3f 91       	pop	r19
    1640:	2a e0       	ldi	r18, 0x0A	; 10
    1642:	26 9f       	mul	r18, r22
    1644:	11 24       	eor	r1, r1
    1646:	30 19       	sub	r19, r0
    1648:	30 5d       	subi	r19, 0xD0	; 208
    164a:	31 93       	st	Z+, r19
    164c:	de f6       	brtc	.-74     	; 0x1604 <__ultoa_invert+0xe>
    164e:	cf 01       	movw	r24, r30
    1650:	08 95       	ret
    1652:	46 2f       	mov	r20, r22
    1654:	47 70       	andi	r20, 0x07	; 7
    1656:	40 5d       	subi	r20, 0xD0	; 208
    1658:	41 93       	st	Z+, r20
    165a:	b3 e0       	ldi	r27, 0x03	; 3
    165c:	0f d0       	rcall	.+30     	; 0x167c <__ultoa_invert+0x86>
    165e:	c9 f7       	brne	.-14     	; 0x1652 <__ultoa_invert+0x5c>
    1660:	f6 cf       	rjmp	.-20     	; 0x164e <__ultoa_invert+0x58>
    1662:	46 2f       	mov	r20, r22
    1664:	4f 70       	andi	r20, 0x0F	; 15
    1666:	40 5d       	subi	r20, 0xD0	; 208
    1668:	4a 33       	cpi	r20, 0x3A	; 58
    166a:	18 f0       	brcs	.+6      	; 0x1672 <__ultoa_invert+0x7c>
    166c:	49 5d       	subi	r20, 0xD9	; 217
    166e:	31 fd       	sbrc	r19, 1
    1670:	40 52       	subi	r20, 0x20	; 32
    1672:	41 93       	st	Z+, r20
    1674:	02 d0       	rcall	.+4      	; 0x167a <__ultoa_invert+0x84>
    1676:	a9 f7       	brne	.-22     	; 0x1662 <__ultoa_invert+0x6c>
    1678:	ea cf       	rjmp	.-44     	; 0x164e <__ultoa_invert+0x58>
    167a:	b4 e0       	ldi	r27, 0x04	; 4
    167c:	a6 95       	lsr	r26
    167e:	97 95       	ror	r25
    1680:	87 95       	ror	r24
    1682:	77 95       	ror	r23
    1684:	67 95       	ror	r22
    1686:	ba 95       	dec	r27
    1688:	c9 f7       	brne	.-14     	; 0x167c <__ultoa_invert+0x86>
    168a:	00 97       	sbiw	r24, 0x00	; 0
    168c:	61 05       	cpc	r22, r1
    168e:	71 05       	cpc	r23, r1
    1690:	08 95       	ret
    1692:	9b 01       	movw	r18, r22
    1694:	ac 01       	movw	r20, r24
    1696:	0a 2e       	mov	r0, r26
    1698:	06 94       	lsr	r0
    169a:	57 95       	ror	r21
    169c:	47 95       	ror	r20
    169e:	37 95       	ror	r19
    16a0:	27 95       	ror	r18
    16a2:	ba 95       	dec	r27
    16a4:	c9 f7       	brne	.-14     	; 0x1698 <__ultoa_invert+0xa2>
    16a6:	62 0f       	add	r22, r18
    16a8:	73 1f       	adc	r23, r19
    16aa:	84 1f       	adc	r24, r20
    16ac:	95 1f       	adc	r25, r21
    16ae:	a0 1d       	adc	r26, r0
    16b0:	08 95       	ret

000016b2 <__prologue_saves__>:
    16b2:	2f 92       	push	r2
    16b4:	3f 92       	push	r3
    16b6:	4f 92       	push	r4
    16b8:	5f 92       	push	r5
    16ba:	6f 92       	push	r6
    16bc:	7f 92       	push	r7
    16be:	8f 92       	push	r8
    16c0:	9f 92       	push	r9
    16c2:	af 92       	push	r10
    16c4:	bf 92       	push	r11
    16c6:	cf 92       	push	r12
    16c8:	df 92       	push	r13
    16ca:	ef 92       	push	r14
    16cc:	ff 92       	push	r15
    16ce:	0f 93       	push	r16
    16d0:	1f 93       	push	r17
    16d2:	cf 93       	push	r28
    16d4:	df 93       	push	r29
    16d6:	cd b7       	in	r28, 0x3d	; 61
    16d8:	de b7       	in	r29, 0x3e	; 62
    16da:	ca 1b       	sub	r28, r26
    16dc:	db 0b       	sbc	r29, r27
    16de:	0f b6       	in	r0, 0x3f	; 63
    16e0:	f8 94       	cli
    16e2:	de bf       	out	0x3e, r29	; 62
    16e4:	0f be       	out	0x3f, r0	; 63
    16e6:	cd bf       	out	0x3d, r28	; 61
    16e8:	09 94       	ijmp

000016ea <__epilogue_restores__>:
    16ea:	2a 88       	ldd	r2, Y+18	; 0x12
    16ec:	39 88       	ldd	r3, Y+17	; 0x11
    16ee:	48 88       	ldd	r4, Y+16	; 0x10
    16f0:	5f 84       	ldd	r5, Y+15	; 0x0f
    16f2:	6e 84       	ldd	r6, Y+14	; 0x0e
    16f4:	7d 84       	ldd	r7, Y+13	; 0x0d
    16f6:	8c 84       	ldd	r8, Y+12	; 0x0c
    16f8:	9b 84       	ldd	r9, Y+11	; 0x0b
    16fa:	aa 84       	ldd	r10, Y+10	; 0x0a
    16fc:	b9 84       	ldd	r11, Y+9	; 0x09
    16fe:	c8 84       	ldd	r12, Y+8	; 0x08
    1700:	df 80       	ldd	r13, Y+7	; 0x07
    1702:	ee 80       	ldd	r14, Y+6	; 0x06
    1704:	fd 80       	ldd	r15, Y+5	; 0x05
    1706:	0c 81       	ldd	r16, Y+4	; 0x04
    1708:	1b 81       	ldd	r17, Y+3	; 0x03
    170a:	aa 81       	ldd	r26, Y+2	; 0x02
    170c:	b9 81       	ldd	r27, Y+1	; 0x01
    170e:	ce 0f       	add	r28, r30
    1710:	d1 1d       	adc	r29, r1
    1712:	0f b6       	in	r0, 0x3f	; 63
    1714:	f8 94       	cli
    1716:	de bf       	out	0x3e, r29	; 62
    1718:	0f be       	out	0x3f, r0	; 63
    171a:	cd bf       	out	0x3d, r28	; 61
    171c:	ed 01       	movw	r28, r26
    171e:	08 95       	ret

00001720 <_exit>:
    1720:	f8 94       	cli

00001722 <__stop_program>:
    1722:	ff cf       	rjmp	.-2      	; 0x1722 <__stop_program>
