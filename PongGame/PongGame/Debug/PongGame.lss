
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004c  00800100  000007d8  0000086c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080014c  0080014c  000008b8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000914  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000950  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010ba  00000000  00000000  00000a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b6c  00000000  00000000  00001aca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000742  00000000  00000000  00002636  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001cc  00000000  00000000  00002d78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000502  00000000  00000000  00002f44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004ee  00000000  00000000  00003446  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00003934  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__vector_19>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 ed       	ldi	r30, 0xD8	; 216
  84:	f7 e0       	ldi	r31, 0x07	; 7
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 34       	cpi	r26, 0x4C	; 76
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ac e4       	ldi	r26, 0x4C	; 76
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a2 35       	cpi	r26, 0x52	; 82
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 c2 00 	call	0x184	; 0x184 <main>
  a6:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <uart_putchar>:

unsigned char USART_RX(){
	while ( !( UCSR0A & (1 << RXC0) ));
	
	return UDR0;	
}
  ae:	cf 93       	push	r28
  b0:	c8 2f       	mov	r28, r24
  b2:	8a 30       	cpi	r24, 0x0A	; 10
  b4:	19 f4       	brne	.+6      	; 0xbc <uart_putchar+0xe>
  b6:	8d e0       	ldi	r24, 0x0D	; 13
  b8:	0e 94 57 00 	call	0xae	; 0xae <uart_putchar>
  bc:	5d 9b       	sbis	0x0b, 5	; 11
  be:	fe cf       	rjmp	.-4      	; 0xbc <uart_putchar+0xe>
  c0:	cc b9       	out	0x0c, r28	; 12
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <USART_Init>:
  ca:	90 bd       	out	0x20, r25	; 32
  cc:	89 b9       	out	0x09, r24	; 9
  ce:	88 e1       	ldi	r24, 0x18	; 24
  d0:	8a b9       	out	0x0a, r24	; 10
  d2:	8a b1       	in	r24, 0x0a	; 10
  d4:	80 68       	ori	r24, 0x80	; 128
  d6:	8a b9       	out	0x0a, r24	; 10
  d8:	8e e8       	ldi	r24, 0x8E	; 142
  da:	80 bd       	out	0x20, r24	; 32
  dc:	08 95       	ret

000000de <xmem_init>:
	return 0;
}

void xmem_init(void)
{
	set_bit(MCUCR, SRE);
  de:	85 b7       	in	r24, 0x35	; 53
  e0:	80 68       	ori	r24, 0x80	; 128
  e2:	85 bf       	out	0x35, r24	; 53
	
	set_bit(SFIOR, XMM2);
  e4:	80 b7       	in	r24, 0x30	; 48
  e6:	80 62       	ori	r24, 0x20	; 32
  e8:	80 bf       	out	0x30, r24	; 48
  ea:	08 95       	ret

000000ec <xmem_write>:
}

void xmem_write (uint8_t data , uint16_t addr)
{
	stdout = &mystdout;
  ec:	20 e0       	ldi	r18, 0x00	; 0
  ee:	31 e0       	ldi	r19, 0x01	; 1
  f0:	30 93 4f 01 	sts	0x014F, r19	; 0x80014f <__data_end+0x3>
  f4:	20 93 4e 01 	sts	0x014E, r18	; 0x80014e <__data_end+0x2>
	volatile char * ext_mem = (char *) BASE_ADDRESS;
	ext_mem [addr]= data ;
  f8:	fb 01       	movw	r30, r22
  fa:	f0 5f       	subi	r31, 0xF0	; 240
  fc:	80 83       	st	Z, r24
	uint8_t retreived_value = ext_mem[addr];
  fe:	90 81       	ld	r25, Z
	printf( "value stored at ext_mem[0x%08x] is 0x%08x, should be 0x%08x\n", addr, retreived_value, data);
 100:	1f 92       	push	r1
 102:	8f 93       	push	r24
 104:	1f 92       	push	r1
 106:	9f 93       	push	r25
 108:	7f 93       	push	r23
 10a:	6f 93       	push	r22
 10c:	8e e0       	ldi	r24, 0x0E	; 14
 10e:	91 e0       	ldi	r25, 0x01	; 1
 110:	9f 93       	push	r25
 112:	8f 93       	push	r24
 114:	0e 94 0c 01 	call	0x218	; 0x218 <printf>

}
 118:	8d b7       	in	r24, 0x3d	; 61
 11a:	9e b7       	in	r25, 0x3e	; 62
 11c:	08 96       	adiw	r24, 0x08	; 8
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	f8 94       	cli
 122:	9e bf       	out	0x3e, r25	; 62
 124:	0f be       	out	0x3f, r0	; 63
 126:	8d bf       	out	0x3d, r24	; 61
 128:	08 95       	ret

0000012a <__vector_19>:
#include "test.h"
#include "ATmega162_driver.h"
#include <avr/interrupt.h>

ISR(USART0_RXC_vect)
{
 12a:	1f 92       	push	r1
 12c:	0f 92       	push	r0
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	0f 92       	push	r0
 132:	11 24       	eor	r1, r1
 134:	8f 93       	push	r24
   char ReceivedByte;
   ReceivedByte = UDR0; // Fetch the received byte value into the variable "ByteReceived"
 136:	8c b1       	in	r24, 0x0c	; 12
   UDR0 = ReceivedByte; // Echo back the received byte back to the computer
 138:	8c b9       	out	0x0c, r24	; 12
}
 13a:	8f 91       	pop	r24
 13c:	0f 90       	pop	r0
 13e:	0f be       	out	0x3f, r0	; 63
 140:	0f 90       	pop	r0
 142:	1f 90       	pop	r1
 144:	18 95       	reti

00000146 <PWM_Init>:

void PWM_Init()
{
	//DDRD |= (1 << PD5);
	set_bit(DDRD, DDD5);
 146:	81 b3       	in	r24, 0x11	; 17
 148:	80 62       	ori	r24, 0x20	; 32
 14a:	81 bb       	out	0x11, r24	; 17
	
	clear_bit(TCCR1B, WGM13);
 14c:	8e b5       	in	r24, 0x2e	; 46
 14e:	8f 7e       	andi	r24, 0xEF	; 239
 150:	8e bd       	out	0x2e, r24	; 46
	set_bit(TCCR1B, WGM12);
 152:	8e b5       	in	r24, 0x2e	; 46
 154:	88 60       	ori	r24, 0x08	; 8
 156:	8e bd       	out	0x2e, r24	; 46
	clear_bit(TCCR1A, WGM11);
 158:	8f b5       	in	r24, 0x2f	; 47
 15a:	8d 7f       	andi	r24, 0xFD	; 253
 15c:	8f bd       	out	0x2f, r24	; 47
	set_bit(TCCR1A, WGM10);
 15e:	8f b5       	in	r24, 0x2f	; 47
 160:	81 60       	ori	r24, 0x01	; 1
 162:	8f bd       	out	0x2f, r24	; 47
	
	set_bit(TCCR1A, COM1A1);
 164:	8f b5       	in	r24, 0x2f	; 47
 166:	80 68       	ori	r24, 0x80	; 128
 168:	8f bd       	out	0x2f, r24	; 47
	clear_bit(TCCR1A, COM1A0);
 16a:	8f b5       	in	r24, 0x2f	; 47
 16c:	8f 7b       	andi	r24, 0xBF	; 191
 16e:	8f bd       	out	0x2f, r24	; 47
	
	clear_bit(TCCR1B, CS12);
 170:	8e b5       	in	r24, 0x2e	; 46
 172:	8b 7f       	andi	r24, 0xFB	; 251
 174:	8e bd       	out	0x2e, r24	; 46
	clear_bit(TCCR1B, CS11);
 176:	8e b5       	in	r24, 0x2e	; 46
 178:	8d 7f       	andi	r24, 0xFD	; 253
 17a:	8e bd       	out	0x2e, r24	; 46
	set_bit(TCCR1B, CS10);
 17c:	8e b5       	in	r24, 0x2e	; 46
 17e:	81 60       	ori	r24, 0x01	; 1
 180:	8e bd       	out	0x2e, r24	; 46
 182:	08 95       	ret

00000184 <main>:


int main(void)
{
	
	stdout = &mystdout;
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <__data_end+0x3>
 18c:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__data_end+0x2>
	
	USART_Init(UBRR);
 190:	8f e1       	ldi	r24, 0x1F	; 31
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 65 00 	call	0xca	; 0xca <USART_Init>
	
	xmem_init();
 198:	0e 94 6f 00 	call	0xde	; 0xde <xmem_init>
	
	PWM_Init();
 19c:	0e 94 a3 00 	call	0x146	; 0x146 <PWM_Init>
	//SRAM_test();
	while(1)
	{
		decoder_test();
 1a0:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <decoder_test>
 1a4:	fd cf       	rjmp	.-6      	; 0x1a0 <main+0x1c>

000001a6 <decoder_test>:
void decoder_test(void)
{

	while(1)
	{
		xmem_write(0x51, 0x1800);
 1a6:	60 e0       	ldi	r22, 0x00	; 0
 1a8:	78 e1       	ldi	r23, 0x18	; 24
 1aa:	81 e5       	ldi	r24, 0x51	; 81
 1ac:	0e 94 76 00 	call	0xec	; 0xec <xmem_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b0:	2f ef       	ldi	r18, 0xFF	; 255
 1b2:	8f e7       	ldi	r24, 0x7F	; 127
 1b4:	97 e0       	ldi	r25, 0x07	; 7
 1b6:	21 50       	subi	r18, 0x01	; 1
 1b8:	80 40       	sbci	r24, 0x00	; 0
 1ba:	90 40       	sbci	r25, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <decoder_test+0x10>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <decoder_test+0x1a>
 1c0:	00 00       	nop
		_delay_ms(500);
		
		xmem_write(0x51, 0x1F00);
 1c2:	60 e0       	ldi	r22, 0x00	; 0
 1c4:	7f e1       	ldi	r23, 0x1F	; 31
 1c6:	81 e5       	ldi	r24, 0x51	; 81
 1c8:	0e 94 76 00 	call	0xec	; 0xec <xmem_write>
 1cc:	2f ef       	ldi	r18, 0xFF	; 255
 1ce:	8f e7       	ldi	r24, 0x7F	; 127
 1d0:	97 e0       	ldi	r25, 0x07	; 7
 1d2:	21 50       	subi	r18, 0x01	; 1
 1d4:	80 40       	sbci	r24, 0x00	; 0
 1d6:	90 40       	sbci	r25, 0x00	; 0
 1d8:	e1 f7       	brne	.-8      	; 0x1d2 <decoder_test+0x2c>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <decoder_test+0x36>
 1dc:	00 00       	nop
		_delay_ms(500);
		
		xmem_write(0x51, 0x1FFF);
 1de:	6f ef       	ldi	r22, 0xFF	; 255
 1e0:	7f e1       	ldi	r23, 0x1F	; 31
 1e2:	81 e5       	ldi	r24, 0x51	; 81
 1e4:	0e 94 76 00 	call	0xec	; 0xec <xmem_write>
 1e8:	2f ef       	ldi	r18, 0xFF	; 255
 1ea:	8f e7       	ldi	r24, 0x7F	; 127
 1ec:	97 e0       	ldi	r25, 0x07	; 7
 1ee:	21 50       	subi	r18, 0x01	; 1
 1f0:	80 40       	sbci	r24, 0x00	; 0
 1f2:	90 40       	sbci	r25, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <decoder_test+0x48>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <decoder_test+0x52>
 1f8:	00 00       	nop
		_delay_ms(500);
		
		xmem_write(0x51, 0x1600);
 1fa:	60 e0       	ldi	r22, 0x00	; 0
 1fc:	76 e1       	ldi	r23, 0x16	; 22
 1fe:	81 e5       	ldi	r24, 0x51	; 81
 200:	0e 94 76 00 	call	0xec	; 0xec <xmem_write>
 204:	2f ef       	ldi	r18, 0xFF	; 255
 206:	8f e7       	ldi	r24, 0x7F	; 127
 208:	97 e0       	ldi	r25, 0x07	; 7
 20a:	21 50       	subi	r18, 0x01	; 1
 20c:	80 40       	sbci	r24, 0x00	; 0
 20e:	90 40       	sbci	r25, 0x00	; 0
 210:	e1 f7       	brne	.-8      	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 212:	00 c0       	rjmp	.+0      	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
 214:	00 00       	nop
 216:	c7 cf       	rjmp	.-114    	; 0x1a6 <decoder_test>

00000218 <printf>:
 218:	a0 e0       	ldi	r26, 0x00	; 0
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	e2 e1       	ldi	r30, 0x12	; 18
 21e:	f1 e0       	ldi	r31, 0x01	; 1
 220:	0c 94 c3 03 	jmp	0x786	; 0x786 <__prologue_saves__+0x20>
 224:	ae 01       	movw	r20, r28
 226:	4b 5f       	subi	r20, 0xFB	; 251
 228:	5f 4f       	sbci	r21, 0xFF	; 255
 22a:	fa 01       	movw	r30, r20
 22c:	61 91       	ld	r22, Z+
 22e:	71 91       	ld	r23, Z+
 230:	af 01       	movw	r20, r30
 232:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <__data_end+0x2>
 236:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <__data_end+0x3>
 23a:	0e 94 22 01 	call	0x244	; 0x244 <vfprintf>
 23e:	e2 e0       	ldi	r30, 0x02	; 2
 240:	0c 94 df 03 	jmp	0x7be	; 0x7be <__epilogue_restores__+0x20>

00000244 <vfprintf>:
 244:	ab e0       	ldi	r26, 0x0B	; 11
 246:	b0 e0       	ldi	r27, 0x00	; 0
 248:	e8 e2       	ldi	r30, 0x28	; 40
 24a:	f1 e0       	ldi	r31, 0x01	; 1
 24c:	0c 94 b3 03 	jmp	0x766	; 0x766 <__prologue_saves__>
 250:	6c 01       	movw	r12, r24
 252:	7b 01       	movw	r14, r22
 254:	8a 01       	movw	r16, r20
 256:	fc 01       	movw	r30, r24
 258:	17 82       	std	Z+7, r1	; 0x07
 25a:	16 82       	std	Z+6, r1	; 0x06
 25c:	83 81       	ldd	r24, Z+3	; 0x03
 25e:	81 ff       	sbrs	r24, 1
 260:	cc c1       	rjmp	.+920    	; 0x5fa <__stack+0xfb>
 262:	ce 01       	movw	r24, r28
 264:	01 96       	adiw	r24, 0x01	; 1
 266:	3c 01       	movw	r6, r24
 268:	f6 01       	movw	r30, r12
 26a:	93 81       	ldd	r25, Z+3	; 0x03
 26c:	f7 01       	movw	r30, r14
 26e:	93 fd       	sbrc	r25, 3
 270:	85 91       	lpm	r24, Z+
 272:	93 ff       	sbrs	r25, 3
 274:	81 91       	ld	r24, Z+
 276:	7f 01       	movw	r14, r30
 278:	88 23       	and	r24, r24
 27a:	09 f4       	brne	.+2      	; 0x27e <vfprintf+0x3a>
 27c:	ba c1       	rjmp	.+884    	; 0x5f2 <__stack+0xf3>
 27e:	85 32       	cpi	r24, 0x25	; 37
 280:	39 f4       	brne	.+14     	; 0x290 <vfprintf+0x4c>
 282:	93 fd       	sbrc	r25, 3
 284:	85 91       	lpm	r24, Z+
 286:	93 ff       	sbrs	r25, 3
 288:	81 91       	ld	r24, Z+
 28a:	7f 01       	movw	r14, r30
 28c:	85 32       	cpi	r24, 0x25	; 37
 28e:	29 f4       	brne	.+10     	; 0x29a <vfprintf+0x56>
 290:	b6 01       	movw	r22, r12
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 19 03 	call	0x632	; 0x632 <fputc>
 298:	e7 cf       	rjmp	.-50     	; 0x268 <vfprintf+0x24>
 29a:	91 2c       	mov	r9, r1
 29c:	21 2c       	mov	r2, r1
 29e:	31 2c       	mov	r3, r1
 2a0:	ff e1       	ldi	r31, 0x1F	; 31
 2a2:	f3 15       	cp	r31, r3
 2a4:	d8 f0       	brcs	.+54     	; 0x2dc <vfprintf+0x98>
 2a6:	8b 32       	cpi	r24, 0x2B	; 43
 2a8:	79 f0       	breq	.+30     	; 0x2c8 <vfprintf+0x84>
 2aa:	38 f4       	brcc	.+14     	; 0x2ba <vfprintf+0x76>
 2ac:	80 32       	cpi	r24, 0x20	; 32
 2ae:	79 f0       	breq	.+30     	; 0x2ce <vfprintf+0x8a>
 2b0:	83 32       	cpi	r24, 0x23	; 35
 2b2:	a1 f4       	brne	.+40     	; 0x2dc <vfprintf+0x98>
 2b4:	23 2d       	mov	r18, r3
 2b6:	20 61       	ori	r18, 0x10	; 16
 2b8:	1d c0       	rjmp	.+58     	; 0x2f4 <vfprintf+0xb0>
 2ba:	8d 32       	cpi	r24, 0x2D	; 45
 2bc:	61 f0       	breq	.+24     	; 0x2d6 <vfprintf+0x92>
 2be:	80 33       	cpi	r24, 0x30	; 48
 2c0:	69 f4       	brne	.+26     	; 0x2dc <vfprintf+0x98>
 2c2:	23 2d       	mov	r18, r3
 2c4:	21 60       	ori	r18, 0x01	; 1
 2c6:	16 c0       	rjmp	.+44     	; 0x2f4 <vfprintf+0xb0>
 2c8:	83 2d       	mov	r24, r3
 2ca:	82 60       	ori	r24, 0x02	; 2
 2cc:	38 2e       	mov	r3, r24
 2ce:	e3 2d       	mov	r30, r3
 2d0:	e4 60       	ori	r30, 0x04	; 4
 2d2:	3e 2e       	mov	r3, r30
 2d4:	2a c0       	rjmp	.+84     	; 0x32a <vfprintf+0xe6>
 2d6:	f3 2d       	mov	r31, r3
 2d8:	f8 60       	ori	r31, 0x08	; 8
 2da:	1d c0       	rjmp	.+58     	; 0x316 <vfprintf+0xd2>
 2dc:	37 fc       	sbrc	r3, 7
 2de:	2d c0       	rjmp	.+90     	; 0x33a <vfprintf+0xf6>
 2e0:	20 ed       	ldi	r18, 0xD0	; 208
 2e2:	28 0f       	add	r18, r24
 2e4:	2a 30       	cpi	r18, 0x0A	; 10
 2e6:	40 f0       	brcs	.+16     	; 0x2f8 <vfprintf+0xb4>
 2e8:	8e 32       	cpi	r24, 0x2E	; 46
 2ea:	b9 f4       	brne	.+46     	; 0x31a <vfprintf+0xd6>
 2ec:	36 fc       	sbrc	r3, 6
 2ee:	81 c1       	rjmp	.+770    	; 0x5f2 <__stack+0xf3>
 2f0:	23 2d       	mov	r18, r3
 2f2:	20 64       	ori	r18, 0x40	; 64
 2f4:	32 2e       	mov	r3, r18
 2f6:	19 c0       	rjmp	.+50     	; 0x32a <vfprintf+0xe6>
 2f8:	36 fe       	sbrs	r3, 6
 2fa:	06 c0       	rjmp	.+12     	; 0x308 <vfprintf+0xc4>
 2fc:	8a e0       	ldi	r24, 0x0A	; 10
 2fe:	98 9e       	mul	r9, r24
 300:	20 0d       	add	r18, r0
 302:	11 24       	eor	r1, r1
 304:	92 2e       	mov	r9, r18
 306:	11 c0       	rjmp	.+34     	; 0x32a <vfprintf+0xe6>
 308:	ea e0       	ldi	r30, 0x0A	; 10
 30a:	2e 9e       	mul	r2, r30
 30c:	20 0d       	add	r18, r0
 30e:	11 24       	eor	r1, r1
 310:	22 2e       	mov	r2, r18
 312:	f3 2d       	mov	r31, r3
 314:	f0 62       	ori	r31, 0x20	; 32
 316:	3f 2e       	mov	r3, r31
 318:	08 c0       	rjmp	.+16     	; 0x32a <vfprintf+0xe6>
 31a:	8c 36       	cpi	r24, 0x6C	; 108
 31c:	21 f4       	brne	.+8      	; 0x326 <vfprintf+0xe2>
 31e:	83 2d       	mov	r24, r3
 320:	80 68       	ori	r24, 0x80	; 128
 322:	38 2e       	mov	r3, r24
 324:	02 c0       	rjmp	.+4      	; 0x32a <vfprintf+0xe6>
 326:	88 36       	cpi	r24, 0x68	; 104
 328:	41 f4       	brne	.+16     	; 0x33a <vfprintf+0xf6>
 32a:	f7 01       	movw	r30, r14
 32c:	93 fd       	sbrc	r25, 3
 32e:	85 91       	lpm	r24, Z+
 330:	93 ff       	sbrs	r25, 3
 332:	81 91       	ld	r24, Z+
 334:	7f 01       	movw	r14, r30
 336:	81 11       	cpse	r24, r1
 338:	b3 cf       	rjmp	.-154    	; 0x2a0 <vfprintf+0x5c>
 33a:	98 2f       	mov	r25, r24
 33c:	9f 7d       	andi	r25, 0xDF	; 223
 33e:	95 54       	subi	r25, 0x45	; 69
 340:	93 30       	cpi	r25, 0x03	; 3
 342:	28 f4       	brcc	.+10     	; 0x34e <vfprintf+0x10a>
 344:	0c 5f       	subi	r16, 0xFC	; 252
 346:	1f 4f       	sbci	r17, 0xFF	; 255
 348:	9f e3       	ldi	r25, 0x3F	; 63
 34a:	99 83       	std	Y+1, r25	; 0x01
 34c:	0d c0       	rjmp	.+26     	; 0x368 <vfprintf+0x124>
 34e:	83 36       	cpi	r24, 0x63	; 99
 350:	31 f0       	breq	.+12     	; 0x35e <vfprintf+0x11a>
 352:	83 37       	cpi	r24, 0x73	; 115
 354:	71 f0       	breq	.+28     	; 0x372 <vfprintf+0x12e>
 356:	83 35       	cpi	r24, 0x53	; 83
 358:	09 f0       	breq	.+2      	; 0x35c <vfprintf+0x118>
 35a:	59 c0       	rjmp	.+178    	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 35c:	21 c0       	rjmp	.+66     	; 0x3a0 <vfprintf+0x15c>
 35e:	f8 01       	movw	r30, r16
 360:	80 81       	ld	r24, Z
 362:	89 83       	std	Y+1, r24	; 0x01
 364:	0e 5f       	subi	r16, 0xFE	; 254
 366:	1f 4f       	sbci	r17, 0xFF	; 255
 368:	88 24       	eor	r8, r8
 36a:	83 94       	inc	r8
 36c:	91 2c       	mov	r9, r1
 36e:	53 01       	movw	r10, r6
 370:	13 c0       	rjmp	.+38     	; 0x398 <vfprintf+0x154>
 372:	28 01       	movw	r4, r16
 374:	f2 e0       	ldi	r31, 0x02	; 2
 376:	4f 0e       	add	r4, r31
 378:	51 1c       	adc	r5, r1
 37a:	f8 01       	movw	r30, r16
 37c:	a0 80       	ld	r10, Z
 37e:	b1 80       	ldd	r11, Z+1	; 0x01
 380:	36 fe       	sbrs	r3, 6
 382:	03 c0       	rjmp	.+6      	; 0x38a <vfprintf+0x146>
 384:	69 2d       	mov	r22, r9
 386:	70 e0       	ldi	r23, 0x00	; 0
 388:	02 c0       	rjmp	.+4      	; 0x38e <vfprintf+0x14a>
 38a:	6f ef       	ldi	r22, 0xFF	; 255
 38c:	7f ef       	ldi	r23, 0xFF	; 255
 38e:	c5 01       	movw	r24, r10
 390:	0e 94 0e 03 	call	0x61c	; 0x61c <strnlen>
 394:	4c 01       	movw	r8, r24
 396:	82 01       	movw	r16, r4
 398:	f3 2d       	mov	r31, r3
 39a:	ff 77       	andi	r31, 0x7F	; 127
 39c:	3f 2e       	mov	r3, r31
 39e:	16 c0       	rjmp	.+44     	; 0x3cc <vfprintf+0x188>
 3a0:	28 01       	movw	r4, r16
 3a2:	22 e0       	ldi	r18, 0x02	; 2
 3a4:	42 0e       	add	r4, r18
 3a6:	51 1c       	adc	r5, r1
 3a8:	f8 01       	movw	r30, r16
 3aa:	a0 80       	ld	r10, Z
 3ac:	b1 80       	ldd	r11, Z+1	; 0x01
 3ae:	36 fe       	sbrs	r3, 6
 3b0:	03 c0       	rjmp	.+6      	; 0x3b8 <vfprintf+0x174>
 3b2:	69 2d       	mov	r22, r9
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	02 c0       	rjmp	.+4      	; 0x3bc <vfprintf+0x178>
 3b8:	6f ef       	ldi	r22, 0xFF	; 255
 3ba:	7f ef       	ldi	r23, 0xFF	; 255
 3bc:	c5 01       	movw	r24, r10
 3be:	0e 94 03 03 	call	0x606	; 0x606 <strnlen_P>
 3c2:	4c 01       	movw	r8, r24
 3c4:	f3 2d       	mov	r31, r3
 3c6:	f0 68       	ori	r31, 0x80	; 128
 3c8:	3f 2e       	mov	r3, r31
 3ca:	82 01       	movw	r16, r4
 3cc:	33 fc       	sbrc	r3, 3
 3ce:	1b c0       	rjmp	.+54     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
 3d0:	82 2d       	mov	r24, r2
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	88 16       	cp	r8, r24
 3d6:	99 06       	cpc	r9, r25
 3d8:	b0 f4       	brcc	.+44     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
 3da:	b6 01       	movw	r22, r12
 3dc:	80 e2       	ldi	r24, 0x20	; 32
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	0e 94 19 03 	call	0x632	; 0x632 <fputc>
 3e4:	2a 94       	dec	r2
 3e6:	f4 cf       	rjmp	.-24     	; 0x3d0 <vfprintf+0x18c>
 3e8:	f5 01       	movw	r30, r10
 3ea:	37 fc       	sbrc	r3, 7
 3ec:	85 91       	lpm	r24, Z+
 3ee:	37 fe       	sbrs	r3, 7
 3f0:	81 91       	ld	r24, Z+
 3f2:	5f 01       	movw	r10, r30
 3f4:	b6 01       	movw	r22, r12
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	0e 94 19 03 	call	0x632	; 0x632 <fputc>
 3fc:	21 10       	cpse	r2, r1
 3fe:	2a 94       	dec	r2
 400:	21 e0       	ldi	r18, 0x01	; 1
 402:	82 1a       	sub	r8, r18
 404:	91 08       	sbc	r9, r1
 406:	81 14       	cp	r8, r1
 408:	91 04       	cpc	r9, r1
 40a:	71 f7       	brne	.-36     	; 0x3e8 <vfprintf+0x1a4>
 40c:	e8 c0       	rjmp	.+464    	; 0x5de <__stack+0xdf>
 40e:	84 36       	cpi	r24, 0x64	; 100
 410:	11 f0       	breq	.+4      	; 0x416 <__DATA_REGION_LENGTH__+0x16>
 412:	89 36       	cpi	r24, 0x69	; 105
 414:	41 f5       	brne	.+80     	; 0x466 <__DATA_REGION_LENGTH__+0x66>
 416:	f8 01       	movw	r30, r16
 418:	37 fe       	sbrs	r3, 7
 41a:	07 c0       	rjmp	.+14     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 41c:	60 81       	ld	r22, Z
 41e:	71 81       	ldd	r23, Z+1	; 0x01
 420:	82 81       	ldd	r24, Z+2	; 0x02
 422:	93 81       	ldd	r25, Z+3	; 0x03
 424:	0c 5f       	subi	r16, 0xFC	; 252
 426:	1f 4f       	sbci	r17, 0xFF	; 255
 428:	08 c0       	rjmp	.+16     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 42a:	60 81       	ld	r22, Z
 42c:	71 81       	ldd	r23, Z+1	; 0x01
 42e:	07 2e       	mov	r0, r23
 430:	00 0c       	add	r0, r0
 432:	88 0b       	sbc	r24, r24
 434:	99 0b       	sbc	r25, r25
 436:	0e 5f       	subi	r16, 0xFE	; 254
 438:	1f 4f       	sbci	r17, 0xFF	; 255
 43a:	f3 2d       	mov	r31, r3
 43c:	ff 76       	andi	r31, 0x6F	; 111
 43e:	3f 2e       	mov	r3, r31
 440:	97 ff       	sbrs	r25, 7
 442:	09 c0       	rjmp	.+18     	; 0x456 <__DATA_REGION_LENGTH__+0x56>
 444:	90 95       	com	r25
 446:	80 95       	com	r24
 448:	70 95       	com	r23
 44a:	61 95       	neg	r22
 44c:	7f 4f       	sbci	r23, 0xFF	; 255
 44e:	8f 4f       	sbci	r24, 0xFF	; 255
 450:	9f 4f       	sbci	r25, 0xFF	; 255
 452:	f0 68       	ori	r31, 0x80	; 128
 454:	3f 2e       	mov	r3, r31
 456:	2a e0       	ldi	r18, 0x0A	; 10
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	a3 01       	movw	r20, r6
 45c:	0e 94 55 03 	call	0x6aa	; 0x6aa <__ultoa_invert>
 460:	88 2e       	mov	r8, r24
 462:	86 18       	sub	r8, r6
 464:	45 c0       	rjmp	.+138    	; 0x4f0 <__DATA_REGION_LENGTH__+0xf0>
 466:	85 37       	cpi	r24, 0x75	; 117
 468:	31 f4       	brne	.+12     	; 0x476 <__DATA_REGION_LENGTH__+0x76>
 46a:	23 2d       	mov	r18, r3
 46c:	2f 7e       	andi	r18, 0xEF	; 239
 46e:	b2 2e       	mov	r11, r18
 470:	2a e0       	ldi	r18, 0x0A	; 10
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	25 c0       	rjmp	.+74     	; 0x4c0 <__DATA_REGION_LENGTH__+0xc0>
 476:	93 2d       	mov	r25, r3
 478:	99 7f       	andi	r25, 0xF9	; 249
 47a:	b9 2e       	mov	r11, r25
 47c:	8f 36       	cpi	r24, 0x6F	; 111
 47e:	c1 f0       	breq	.+48     	; 0x4b0 <__DATA_REGION_LENGTH__+0xb0>
 480:	18 f4       	brcc	.+6      	; 0x488 <__DATA_REGION_LENGTH__+0x88>
 482:	88 35       	cpi	r24, 0x58	; 88
 484:	79 f0       	breq	.+30     	; 0x4a4 <__DATA_REGION_LENGTH__+0xa4>
 486:	b5 c0       	rjmp	.+362    	; 0x5f2 <__stack+0xf3>
 488:	80 37       	cpi	r24, 0x70	; 112
 48a:	19 f0       	breq	.+6      	; 0x492 <__DATA_REGION_LENGTH__+0x92>
 48c:	88 37       	cpi	r24, 0x78	; 120
 48e:	21 f0       	breq	.+8      	; 0x498 <__DATA_REGION_LENGTH__+0x98>
 490:	b0 c0       	rjmp	.+352    	; 0x5f2 <__stack+0xf3>
 492:	e9 2f       	mov	r30, r25
 494:	e0 61       	ori	r30, 0x10	; 16
 496:	be 2e       	mov	r11, r30
 498:	b4 fe       	sbrs	r11, 4
 49a:	0d c0       	rjmp	.+26     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 49c:	fb 2d       	mov	r31, r11
 49e:	f4 60       	ori	r31, 0x04	; 4
 4a0:	bf 2e       	mov	r11, r31
 4a2:	09 c0       	rjmp	.+18     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 4a4:	34 fe       	sbrs	r3, 4
 4a6:	0a c0       	rjmp	.+20     	; 0x4bc <__DATA_REGION_LENGTH__+0xbc>
 4a8:	29 2f       	mov	r18, r25
 4aa:	26 60       	ori	r18, 0x06	; 6
 4ac:	b2 2e       	mov	r11, r18
 4ae:	06 c0       	rjmp	.+12     	; 0x4bc <__DATA_REGION_LENGTH__+0xbc>
 4b0:	28 e0       	ldi	r18, 0x08	; 8
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	05 c0       	rjmp	.+10     	; 0x4c0 <__DATA_REGION_LENGTH__+0xc0>
 4b6:	20 e1       	ldi	r18, 0x10	; 16
 4b8:	30 e0       	ldi	r19, 0x00	; 0
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <__DATA_REGION_LENGTH__+0xc0>
 4bc:	20 e1       	ldi	r18, 0x10	; 16
 4be:	32 e0       	ldi	r19, 0x02	; 2
 4c0:	f8 01       	movw	r30, r16
 4c2:	b7 fe       	sbrs	r11, 7
 4c4:	07 c0       	rjmp	.+14     	; 0x4d4 <__DATA_REGION_LENGTH__+0xd4>
 4c6:	60 81       	ld	r22, Z
 4c8:	71 81       	ldd	r23, Z+1	; 0x01
 4ca:	82 81       	ldd	r24, Z+2	; 0x02
 4cc:	93 81       	ldd	r25, Z+3	; 0x03
 4ce:	0c 5f       	subi	r16, 0xFC	; 252
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	06 c0       	rjmp	.+12     	; 0x4e0 <__DATA_REGION_LENGTH__+0xe0>
 4d4:	60 81       	ld	r22, Z
 4d6:	71 81       	ldd	r23, Z+1	; 0x01
 4d8:	80 e0       	ldi	r24, 0x00	; 0
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	0e 5f       	subi	r16, 0xFE	; 254
 4de:	1f 4f       	sbci	r17, 0xFF	; 255
 4e0:	a3 01       	movw	r20, r6
 4e2:	0e 94 55 03 	call	0x6aa	; 0x6aa <__ultoa_invert>
 4e6:	88 2e       	mov	r8, r24
 4e8:	86 18       	sub	r8, r6
 4ea:	fb 2d       	mov	r31, r11
 4ec:	ff 77       	andi	r31, 0x7F	; 127
 4ee:	3f 2e       	mov	r3, r31
 4f0:	36 fe       	sbrs	r3, 6
 4f2:	0d c0       	rjmp	.+26     	; 0x50e <__stack+0xf>
 4f4:	23 2d       	mov	r18, r3
 4f6:	2e 7f       	andi	r18, 0xFE	; 254
 4f8:	a2 2e       	mov	r10, r18
 4fa:	89 14       	cp	r8, r9
 4fc:	58 f4       	brcc	.+22     	; 0x514 <__stack+0x15>
 4fe:	34 fe       	sbrs	r3, 4
 500:	0b c0       	rjmp	.+22     	; 0x518 <__stack+0x19>
 502:	32 fc       	sbrc	r3, 2
 504:	09 c0       	rjmp	.+18     	; 0x518 <__stack+0x19>
 506:	83 2d       	mov	r24, r3
 508:	8e 7e       	andi	r24, 0xEE	; 238
 50a:	a8 2e       	mov	r10, r24
 50c:	05 c0       	rjmp	.+10     	; 0x518 <__stack+0x19>
 50e:	b8 2c       	mov	r11, r8
 510:	a3 2c       	mov	r10, r3
 512:	03 c0       	rjmp	.+6      	; 0x51a <__stack+0x1b>
 514:	b8 2c       	mov	r11, r8
 516:	01 c0       	rjmp	.+2      	; 0x51a <__stack+0x1b>
 518:	b9 2c       	mov	r11, r9
 51a:	a4 fe       	sbrs	r10, 4
 51c:	0f c0       	rjmp	.+30     	; 0x53c <__stack+0x3d>
 51e:	fe 01       	movw	r30, r28
 520:	e8 0d       	add	r30, r8
 522:	f1 1d       	adc	r31, r1
 524:	80 81       	ld	r24, Z
 526:	80 33       	cpi	r24, 0x30	; 48
 528:	21 f4       	brne	.+8      	; 0x532 <__stack+0x33>
 52a:	9a 2d       	mov	r25, r10
 52c:	99 7e       	andi	r25, 0xE9	; 233
 52e:	a9 2e       	mov	r10, r25
 530:	09 c0       	rjmp	.+18     	; 0x544 <__stack+0x45>
 532:	a2 fe       	sbrs	r10, 2
 534:	06 c0       	rjmp	.+12     	; 0x542 <__stack+0x43>
 536:	b3 94       	inc	r11
 538:	b3 94       	inc	r11
 53a:	04 c0       	rjmp	.+8      	; 0x544 <__stack+0x45>
 53c:	8a 2d       	mov	r24, r10
 53e:	86 78       	andi	r24, 0x86	; 134
 540:	09 f0       	breq	.+2      	; 0x544 <__stack+0x45>
 542:	b3 94       	inc	r11
 544:	a3 fc       	sbrc	r10, 3
 546:	11 c0       	rjmp	.+34     	; 0x56a <__stack+0x6b>
 548:	a0 fe       	sbrs	r10, 0
 54a:	06 c0       	rjmp	.+12     	; 0x558 <__stack+0x59>
 54c:	b2 14       	cp	r11, r2
 54e:	88 f4       	brcc	.+34     	; 0x572 <__stack+0x73>
 550:	28 0c       	add	r2, r8
 552:	92 2c       	mov	r9, r2
 554:	9b 18       	sub	r9, r11
 556:	0e c0       	rjmp	.+28     	; 0x574 <__stack+0x75>
 558:	b2 14       	cp	r11, r2
 55a:	60 f4       	brcc	.+24     	; 0x574 <__stack+0x75>
 55c:	b6 01       	movw	r22, r12
 55e:	80 e2       	ldi	r24, 0x20	; 32
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	0e 94 19 03 	call	0x632	; 0x632 <fputc>
 566:	b3 94       	inc	r11
 568:	f7 cf       	rjmp	.-18     	; 0x558 <__stack+0x59>
 56a:	b2 14       	cp	r11, r2
 56c:	18 f4       	brcc	.+6      	; 0x574 <__stack+0x75>
 56e:	2b 18       	sub	r2, r11
 570:	02 c0       	rjmp	.+4      	; 0x576 <__stack+0x77>
 572:	98 2c       	mov	r9, r8
 574:	21 2c       	mov	r2, r1
 576:	a4 fe       	sbrs	r10, 4
 578:	10 c0       	rjmp	.+32     	; 0x59a <__stack+0x9b>
 57a:	b6 01       	movw	r22, r12
 57c:	80 e3       	ldi	r24, 0x30	; 48
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	0e 94 19 03 	call	0x632	; 0x632 <fputc>
 584:	a2 fe       	sbrs	r10, 2
 586:	17 c0       	rjmp	.+46     	; 0x5b6 <__stack+0xb7>
 588:	a1 fc       	sbrc	r10, 1
 58a:	03 c0       	rjmp	.+6      	; 0x592 <__stack+0x93>
 58c:	88 e7       	ldi	r24, 0x78	; 120
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	02 c0       	rjmp	.+4      	; 0x596 <__stack+0x97>
 592:	88 e5       	ldi	r24, 0x58	; 88
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	b6 01       	movw	r22, r12
 598:	0c c0       	rjmp	.+24     	; 0x5b2 <__stack+0xb3>
 59a:	8a 2d       	mov	r24, r10
 59c:	86 78       	andi	r24, 0x86	; 134
 59e:	59 f0       	breq	.+22     	; 0x5b6 <__stack+0xb7>
 5a0:	a1 fe       	sbrs	r10, 1
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <__stack+0xa9>
 5a4:	8b e2       	ldi	r24, 0x2B	; 43
 5a6:	01 c0       	rjmp	.+2      	; 0x5aa <__stack+0xab>
 5a8:	80 e2       	ldi	r24, 0x20	; 32
 5aa:	a7 fc       	sbrc	r10, 7
 5ac:	8d e2       	ldi	r24, 0x2D	; 45
 5ae:	b6 01       	movw	r22, r12
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	0e 94 19 03 	call	0x632	; 0x632 <fputc>
 5b6:	89 14       	cp	r8, r9
 5b8:	38 f4       	brcc	.+14     	; 0x5c8 <__stack+0xc9>
 5ba:	b6 01       	movw	r22, r12
 5bc:	80 e3       	ldi	r24, 0x30	; 48
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 94 19 03 	call	0x632	; 0x632 <fputc>
 5c4:	9a 94       	dec	r9
 5c6:	f7 cf       	rjmp	.-18     	; 0x5b6 <__stack+0xb7>
 5c8:	8a 94       	dec	r8
 5ca:	f3 01       	movw	r30, r6
 5cc:	e8 0d       	add	r30, r8
 5ce:	f1 1d       	adc	r31, r1
 5d0:	80 81       	ld	r24, Z
 5d2:	b6 01       	movw	r22, r12
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	0e 94 19 03 	call	0x632	; 0x632 <fputc>
 5da:	81 10       	cpse	r8, r1
 5dc:	f5 cf       	rjmp	.-22     	; 0x5c8 <__stack+0xc9>
 5de:	22 20       	and	r2, r2
 5e0:	09 f4       	brne	.+2      	; 0x5e4 <__stack+0xe5>
 5e2:	42 ce       	rjmp	.-892    	; 0x268 <vfprintf+0x24>
 5e4:	b6 01       	movw	r22, r12
 5e6:	80 e2       	ldi	r24, 0x20	; 32
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 94 19 03 	call	0x632	; 0x632 <fputc>
 5ee:	2a 94       	dec	r2
 5f0:	f6 cf       	rjmp	.-20     	; 0x5de <__stack+0xdf>
 5f2:	f6 01       	movw	r30, r12
 5f4:	86 81       	ldd	r24, Z+6	; 0x06
 5f6:	97 81       	ldd	r25, Z+7	; 0x07
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <__stack+0xff>
 5fa:	8f ef       	ldi	r24, 0xFF	; 255
 5fc:	9f ef       	ldi	r25, 0xFF	; 255
 5fe:	2b 96       	adiw	r28, 0x0b	; 11
 600:	e2 e1       	ldi	r30, 0x12	; 18
 602:	0c 94 cf 03 	jmp	0x79e	; 0x79e <__epilogue_restores__>

00000606 <strnlen_P>:
 606:	fc 01       	movw	r30, r24
 608:	05 90       	lpm	r0, Z+
 60a:	61 50       	subi	r22, 0x01	; 1
 60c:	70 40       	sbci	r23, 0x00	; 0
 60e:	01 10       	cpse	r0, r1
 610:	d8 f7       	brcc	.-10     	; 0x608 <strnlen_P+0x2>
 612:	80 95       	com	r24
 614:	90 95       	com	r25
 616:	8e 0f       	add	r24, r30
 618:	9f 1f       	adc	r25, r31
 61a:	08 95       	ret

0000061c <strnlen>:
 61c:	fc 01       	movw	r30, r24
 61e:	61 50       	subi	r22, 0x01	; 1
 620:	70 40       	sbci	r23, 0x00	; 0
 622:	01 90       	ld	r0, Z+
 624:	01 10       	cpse	r0, r1
 626:	d8 f7       	brcc	.-10     	; 0x61e <strnlen+0x2>
 628:	80 95       	com	r24
 62a:	90 95       	com	r25
 62c:	8e 0f       	add	r24, r30
 62e:	9f 1f       	adc	r25, r31
 630:	08 95       	ret

00000632 <fputc>:
 632:	0f 93       	push	r16
 634:	1f 93       	push	r17
 636:	cf 93       	push	r28
 638:	df 93       	push	r29
 63a:	fb 01       	movw	r30, r22
 63c:	23 81       	ldd	r18, Z+3	; 0x03
 63e:	21 fd       	sbrc	r18, 1
 640:	03 c0       	rjmp	.+6      	; 0x648 <fputc+0x16>
 642:	8f ef       	ldi	r24, 0xFF	; 255
 644:	9f ef       	ldi	r25, 0xFF	; 255
 646:	2c c0       	rjmp	.+88     	; 0x6a0 <fputc+0x6e>
 648:	22 ff       	sbrs	r18, 2
 64a:	16 c0       	rjmp	.+44     	; 0x678 <fputc+0x46>
 64c:	46 81       	ldd	r20, Z+6	; 0x06
 64e:	57 81       	ldd	r21, Z+7	; 0x07
 650:	24 81       	ldd	r18, Z+4	; 0x04
 652:	35 81       	ldd	r19, Z+5	; 0x05
 654:	42 17       	cp	r20, r18
 656:	53 07       	cpc	r21, r19
 658:	44 f4       	brge	.+16     	; 0x66a <fputc+0x38>
 65a:	a0 81       	ld	r26, Z
 65c:	b1 81       	ldd	r27, Z+1	; 0x01
 65e:	9d 01       	movw	r18, r26
 660:	2f 5f       	subi	r18, 0xFF	; 255
 662:	3f 4f       	sbci	r19, 0xFF	; 255
 664:	31 83       	std	Z+1, r19	; 0x01
 666:	20 83       	st	Z, r18
 668:	8c 93       	st	X, r24
 66a:	26 81       	ldd	r18, Z+6	; 0x06
 66c:	37 81       	ldd	r19, Z+7	; 0x07
 66e:	2f 5f       	subi	r18, 0xFF	; 255
 670:	3f 4f       	sbci	r19, 0xFF	; 255
 672:	37 83       	std	Z+7, r19	; 0x07
 674:	26 83       	std	Z+6, r18	; 0x06
 676:	14 c0       	rjmp	.+40     	; 0x6a0 <fputc+0x6e>
 678:	8b 01       	movw	r16, r22
 67a:	ec 01       	movw	r28, r24
 67c:	fb 01       	movw	r30, r22
 67e:	00 84       	ldd	r0, Z+8	; 0x08
 680:	f1 85       	ldd	r31, Z+9	; 0x09
 682:	e0 2d       	mov	r30, r0
 684:	09 95       	icall
 686:	89 2b       	or	r24, r25
 688:	e1 f6       	brne	.-72     	; 0x642 <fputc+0x10>
 68a:	d8 01       	movw	r26, r16
 68c:	16 96       	adiw	r26, 0x06	; 6
 68e:	8d 91       	ld	r24, X+
 690:	9c 91       	ld	r25, X
 692:	17 97       	sbiw	r26, 0x07	; 7
 694:	01 96       	adiw	r24, 0x01	; 1
 696:	17 96       	adiw	r26, 0x07	; 7
 698:	9c 93       	st	X, r25
 69a:	8e 93       	st	-X, r24
 69c:	16 97       	sbiw	r26, 0x06	; 6
 69e:	ce 01       	movw	r24, r28
 6a0:	df 91       	pop	r29
 6a2:	cf 91       	pop	r28
 6a4:	1f 91       	pop	r17
 6a6:	0f 91       	pop	r16
 6a8:	08 95       	ret

000006aa <__ultoa_invert>:
 6aa:	fa 01       	movw	r30, r20
 6ac:	aa 27       	eor	r26, r26
 6ae:	28 30       	cpi	r18, 0x08	; 8
 6b0:	51 f1       	breq	.+84     	; 0x706 <__ultoa_invert+0x5c>
 6b2:	20 31       	cpi	r18, 0x10	; 16
 6b4:	81 f1       	breq	.+96     	; 0x716 <__ultoa_invert+0x6c>
 6b6:	e8 94       	clt
 6b8:	6f 93       	push	r22
 6ba:	6e 7f       	andi	r22, 0xFE	; 254
 6bc:	6e 5f       	subi	r22, 0xFE	; 254
 6be:	7f 4f       	sbci	r23, 0xFF	; 255
 6c0:	8f 4f       	sbci	r24, 0xFF	; 255
 6c2:	9f 4f       	sbci	r25, 0xFF	; 255
 6c4:	af 4f       	sbci	r26, 0xFF	; 255
 6c6:	b1 e0       	ldi	r27, 0x01	; 1
 6c8:	3e d0       	rcall	.+124    	; 0x746 <__ultoa_invert+0x9c>
 6ca:	b4 e0       	ldi	r27, 0x04	; 4
 6cc:	3c d0       	rcall	.+120    	; 0x746 <__ultoa_invert+0x9c>
 6ce:	67 0f       	add	r22, r23
 6d0:	78 1f       	adc	r23, r24
 6d2:	89 1f       	adc	r24, r25
 6d4:	9a 1f       	adc	r25, r26
 6d6:	a1 1d       	adc	r26, r1
 6d8:	68 0f       	add	r22, r24
 6da:	79 1f       	adc	r23, r25
 6dc:	8a 1f       	adc	r24, r26
 6de:	91 1d       	adc	r25, r1
 6e0:	a1 1d       	adc	r26, r1
 6e2:	6a 0f       	add	r22, r26
 6e4:	71 1d       	adc	r23, r1
 6e6:	81 1d       	adc	r24, r1
 6e8:	91 1d       	adc	r25, r1
 6ea:	a1 1d       	adc	r26, r1
 6ec:	20 d0       	rcall	.+64     	; 0x72e <__ultoa_invert+0x84>
 6ee:	09 f4       	brne	.+2      	; 0x6f2 <__ultoa_invert+0x48>
 6f0:	68 94       	set
 6f2:	3f 91       	pop	r19
 6f4:	2a e0       	ldi	r18, 0x0A	; 10
 6f6:	26 9f       	mul	r18, r22
 6f8:	11 24       	eor	r1, r1
 6fa:	30 19       	sub	r19, r0
 6fc:	30 5d       	subi	r19, 0xD0	; 208
 6fe:	31 93       	st	Z+, r19
 700:	de f6       	brtc	.-74     	; 0x6b8 <__ultoa_invert+0xe>
 702:	cf 01       	movw	r24, r30
 704:	08 95       	ret
 706:	46 2f       	mov	r20, r22
 708:	47 70       	andi	r20, 0x07	; 7
 70a:	40 5d       	subi	r20, 0xD0	; 208
 70c:	41 93       	st	Z+, r20
 70e:	b3 e0       	ldi	r27, 0x03	; 3
 710:	0f d0       	rcall	.+30     	; 0x730 <__ultoa_invert+0x86>
 712:	c9 f7       	brne	.-14     	; 0x706 <__ultoa_invert+0x5c>
 714:	f6 cf       	rjmp	.-20     	; 0x702 <__ultoa_invert+0x58>
 716:	46 2f       	mov	r20, r22
 718:	4f 70       	andi	r20, 0x0F	; 15
 71a:	40 5d       	subi	r20, 0xD0	; 208
 71c:	4a 33       	cpi	r20, 0x3A	; 58
 71e:	18 f0       	brcs	.+6      	; 0x726 <__ultoa_invert+0x7c>
 720:	49 5d       	subi	r20, 0xD9	; 217
 722:	31 fd       	sbrc	r19, 1
 724:	40 52       	subi	r20, 0x20	; 32
 726:	41 93       	st	Z+, r20
 728:	02 d0       	rcall	.+4      	; 0x72e <__ultoa_invert+0x84>
 72a:	a9 f7       	brne	.-22     	; 0x716 <__ultoa_invert+0x6c>
 72c:	ea cf       	rjmp	.-44     	; 0x702 <__ultoa_invert+0x58>
 72e:	b4 e0       	ldi	r27, 0x04	; 4
 730:	a6 95       	lsr	r26
 732:	97 95       	ror	r25
 734:	87 95       	ror	r24
 736:	77 95       	ror	r23
 738:	67 95       	ror	r22
 73a:	ba 95       	dec	r27
 73c:	c9 f7       	brne	.-14     	; 0x730 <__ultoa_invert+0x86>
 73e:	00 97       	sbiw	r24, 0x00	; 0
 740:	61 05       	cpc	r22, r1
 742:	71 05       	cpc	r23, r1
 744:	08 95       	ret
 746:	9b 01       	movw	r18, r22
 748:	ac 01       	movw	r20, r24
 74a:	0a 2e       	mov	r0, r26
 74c:	06 94       	lsr	r0
 74e:	57 95       	ror	r21
 750:	47 95       	ror	r20
 752:	37 95       	ror	r19
 754:	27 95       	ror	r18
 756:	ba 95       	dec	r27
 758:	c9 f7       	brne	.-14     	; 0x74c <__ultoa_invert+0xa2>
 75a:	62 0f       	add	r22, r18
 75c:	73 1f       	adc	r23, r19
 75e:	84 1f       	adc	r24, r20
 760:	95 1f       	adc	r25, r21
 762:	a0 1d       	adc	r26, r0
 764:	08 95       	ret

00000766 <__prologue_saves__>:
 766:	2f 92       	push	r2
 768:	3f 92       	push	r3
 76a:	4f 92       	push	r4
 76c:	5f 92       	push	r5
 76e:	6f 92       	push	r6
 770:	7f 92       	push	r7
 772:	8f 92       	push	r8
 774:	9f 92       	push	r9
 776:	af 92       	push	r10
 778:	bf 92       	push	r11
 77a:	cf 92       	push	r12
 77c:	df 92       	push	r13
 77e:	ef 92       	push	r14
 780:	ff 92       	push	r15
 782:	0f 93       	push	r16
 784:	1f 93       	push	r17
 786:	cf 93       	push	r28
 788:	df 93       	push	r29
 78a:	cd b7       	in	r28, 0x3d	; 61
 78c:	de b7       	in	r29, 0x3e	; 62
 78e:	ca 1b       	sub	r28, r26
 790:	db 0b       	sbc	r29, r27
 792:	0f b6       	in	r0, 0x3f	; 63
 794:	f8 94       	cli
 796:	de bf       	out	0x3e, r29	; 62
 798:	0f be       	out	0x3f, r0	; 63
 79a:	cd bf       	out	0x3d, r28	; 61
 79c:	09 94       	ijmp

0000079e <__epilogue_restores__>:
 79e:	2a 88       	ldd	r2, Y+18	; 0x12
 7a0:	39 88       	ldd	r3, Y+17	; 0x11
 7a2:	48 88       	ldd	r4, Y+16	; 0x10
 7a4:	5f 84       	ldd	r5, Y+15	; 0x0f
 7a6:	6e 84       	ldd	r6, Y+14	; 0x0e
 7a8:	7d 84       	ldd	r7, Y+13	; 0x0d
 7aa:	8c 84       	ldd	r8, Y+12	; 0x0c
 7ac:	9b 84       	ldd	r9, Y+11	; 0x0b
 7ae:	aa 84       	ldd	r10, Y+10	; 0x0a
 7b0:	b9 84       	ldd	r11, Y+9	; 0x09
 7b2:	c8 84       	ldd	r12, Y+8	; 0x08
 7b4:	df 80       	ldd	r13, Y+7	; 0x07
 7b6:	ee 80       	ldd	r14, Y+6	; 0x06
 7b8:	fd 80       	ldd	r15, Y+5	; 0x05
 7ba:	0c 81       	ldd	r16, Y+4	; 0x04
 7bc:	1b 81       	ldd	r17, Y+3	; 0x03
 7be:	aa 81       	ldd	r26, Y+2	; 0x02
 7c0:	b9 81       	ldd	r27, Y+1	; 0x01
 7c2:	ce 0f       	add	r28, r30
 7c4:	d1 1d       	adc	r29, r1
 7c6:	0f b6       	in	r0, 0x3f	; 63
 7c8:	f8 94       	cli
 7ca:	de bf       	out	0x3e, r29	; 62
 7cc:	0f be       	out	0x3f, r0	; 63
 7ce:	cd bf       	out	0x3d, r28	; 61
 7d0:	ed 01       	movw	r28, r26
 7d2:	08 95       	ret

000007d4 <_exit>:
 7d4:	f8 94       	cli

000007d6 <__stop_program>:
 7d6:	ff cf       	rjmp	.-2      	; 0x7d6 <__stop_program>
