
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000c54  00000ce8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c54  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080013a  0080013a  00000d22  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d22  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e8b  00000000  00000000  00000e74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ae5  00000000  00000000  00001cff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000064d  00000000  00000000  000027e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  00002e34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e1  00000000  00000000  00003028  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000412  00000000  00000000  00003509  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  0000391b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__vector_3>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__vector_15>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__vector_19>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e4 e5       	ldi	r30, 0x54	; 84
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 33       	cpi	r26, 0x3A	; 58
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	aa e3       	ldi	r26, 0x3A	; 58
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 34       	cpi	r26, 0x40	; 64
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <main>
  a6:	0c 94 28 06 	jmp	0xc50	; 0xc50 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_init>:


void ADC_init(void)
{
	//set clock out on MC
	set_bit(DDRD, DDD5);
  ae:	81 b3       	in	r24, 0x11	; 17
  b0:	80 62       	ori	r24, 0x20	; 32
  b2:	81 bb       	out	0x11, r24	; 17
	set_bit(DDRD, DDD6); /* Enable WR output signal */
  b4:	81 b3       	in	r24, 0x11	; 17
  b6:	80 64       	ori	r24, 0x40	; 64
  b8:	81 bb       	out	0x11, r24	; 17
	set_bit(DDRD, DDD7); /* Enable RD output signal */
  ba:	81 b3       	in	r24, 0x11	; 17
  bc:	80 68       	ori	r24, 0x80	; 128
  be:	81 bb       	out	0x11, r24	; 17
	
	clear_bit(DDRE, DDE0); /* Set pin PE0 as INPUT to use the INT2 Interrupt for BUSY signal from ADC */
  c0:	86 b1       	in	r24, 0x06	; 6
  c2:	8e 7f       	andi	r24, 0xFE	; 254
  c4:	86 b9       	out	0x06, r24	; 6
	
	set_bit(EMCUCR, ISC2); /* Trigger interrupt on rising edge */
  c6:	86 b7       	in	r24, 0x36	; 54
  c8:	81 60       	ori	r24, 0x01	; 1
  ca:	86 bf       	out	0x36, r24	; 54
	set_bit(GICR, INT2); /* Enable INT2 interrupt */ 
  cc:	8b b7       	in	r24, 0x3b	; 59
  ce:	80 62       	ori	r24, 0x20	; 32
  d0:	8b bf       	out	0x3b, r24	; 59
  d2:	08 95       	ret

000000d4 <ADC_read>:
}

void ADC_read(void)
{
  d4:	0f 93       	push	r16
  d6:	1f 93       	push	r17
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	00 d0       	rcall	.+0      	; 0xde <ADC_read+0xa>
  de:	00 d0       	rcall	.+0      	; 0xe0 <ADC_read+0xc>
  e0:	cd b7       	in	r28, 0x3d	; 61
  e2:	de b7       	in	r29, 0x3e	; 62
	float t_RDH = 180E-6;
	

	int channels = 4;
	
	uint8_t ADC_data [4]= {0,0,0,0};
  e4:	19 82       	std	Y+1, r1	; 0x01
  e6:	1a 82       	std	Y+2, r1	; 0x02
  e8:	1b 82       	std	Y+3, r1	; 0x03
  ea:	1c 82       	std	Y+4, r1	; 0x04
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ec:	00 00       	nop
	
	_delay_ms(t_BRD);
	
	for(int i = 0; i<channels;++i)
  ee:	00 e0       	ldi	r16, 0x00	; 0
  f0:	10 e0       	ldi	r17, 0x00	; 0
  f2:	10 c0       	rjmp	.+32     	; 0x114 <ADC_read+0x40>
	{
		ADC_data [i] = xmem_read(0x1700);
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	97 e1       	ldi	r25, 0x17	; 23
  f8:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <xmem_read>
  fc:	e1 e0       	ldi	r30, 0x01	; 1
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	ec 0f       	add	r30, r28
 102:	fd 1f       	adc	r31, r29
 104:	e0 0f       	add	r30, r16
 106:	f1 1f       	adc	r31, r17
 108:	80 83       	st	Z, r24
 10a:	82 e0       	ldi	r24, 0x02	; 2
 10c:	8a 95       	dec	r24
 10e:	f1 f7       	brne	.-4      	; 0x10c <ADC_read+0x38>
	
	uint8_t ADC_data [4]= {0,0,0,0};
	
	_delay_ms(t_BRD);
	
	for(int i = 0; i<channels;++i)
 110:	0f 5f       	subi	r16, 0xFF	; 255
 112:	1f 4f       	sbci	r17, 0xFF	; 255
 114:	04 30       	cpi	r16, 0x04	; 4
 116:	11 05       	cpc	r17, r1
 118:	6c f3       	brlt	.-38     	; 0xf4 <ADC_read+0x20>
		ADC_data [i] = xmem_read(0x1700);
		_delay_ms(t_RDL+t_RDH);
		
	
	}
	printf( "value stored at ADC_data[%d] is 0x%08x\n", 1, ADC_data [1]);
 11a:	8a 81       	ldd	r24, Y+2	; 0x02
 11c:	1f 92       	push	r1
 11e:	8f 93       	push	r24
 120:	1f 92       	push	r1
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	8f 93       	push	r24
 126:	82 e1       	ldi	r24, 0x12	; 18
 128:	91 e0       	ldi	r25, 0x01	; 1
 12a:	9f 93       	push	r25
 12c:	8f 93       	push	r24
 12e:	0e 94 4a 03 	call	0x694	; 0x694 <printf>
	
 132:	0f 90       	pop	r0
 134:	0f 90       	pop	r0
 136:	0f 90       	pop	r0
 138:	0f 90       	pop	r0
 13a:	0f 90       	pop	r0
 13c:	0f 90       	pop	r0
 13e:	0f 90       	pop	r0
 140:	0f 90       	pop	r0
 142:	0f 90       	pop	r0
 144:	0f 90       	pop	r0
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	1f 91       	pop	r17
 14c:	0f 91       	pop	r16
 14e:	08 95       	ret

00000150 <uart_putchar>:

unsigned char USART_RX(){
	while ( !( UCSR0A & (1 << RXC0) ));
	
	return UDR0;	
}
 150:	cf 93       	push	r28
 152:	c8 2f       	mov	r28, r24
 154:	8a 30       	cpi	r24, 0x0A	; 10
 156:	19 f4       	brne	.+6      	; 0x15e <uart_putchar+0xe>
 158:	8d e0       	ldi	r24, 0x0D	; 13
 15a:	0e 94 a8 00 	call	0x150	; 0x150 <uart_putchar>
 15e:	5d 9b       	sbis	0x0b, 5	; 11
 160:	fe cf       	rjmp	.-4      	; 0x15e <uart_putchar+0xe>
 162:	cc b9       	out	0x0c, r28	; 12
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	cf 91       	pop	r28
 16a:	08 95       	ret

0000016c <USART_Init>:
 16c:	90 bd       	out	0x20, r25	; 32
 16e:	89 b9       	out	0x09, r24	; 9
 170:	88 e1       	ldi	r24, 0x18	; 24
 172:	8a b9       	out	0x0a, r24	; 10
 174:	8a b1       	in	r24, 0x0a	; 10
 176:	80 68       	ori	r24, 0x80	; 128
 178:	8a b9       	out	0x0a, r24	; 10
 17a:	8e e8       	ldi	r24, 0x8E	; 142
 17c:	80 bd       	out	0x20, r24	; 32
 17e:	08 95       	ret

00000180 <xmem_init>:
{
	//set_bit(SFIOR, XMM2);
	//clear_bit(SFIOR, XMM1);
	//clear_bit(SFIOR, XMM0);
	//set_bit(MCUCR, SRE);
	MCUCR |= (1<< SRE); //THIS MFER
 180:	85 b7       	in	r24, 0x35	; 53
 182:	80 68       	ori	r24, 0x80	; 128
 184:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<< XMM2);
 186:	80 b7       	in	r24, 0x30	; 48
 188:	80 62       	ori	r24, 0x20	; 32
 18a:	80 bf       	out	0x30, r24	; 48
 18c:	08 95       	ret

0000018e <xmem_write>:
}

void xmem_write (uint8_t data , uint16_t addr)
{

	stdout = &mystdout;
 18e:	20 e0       	ldi	r18, 0x00	; 0
 190:	31 e0       	ldi	r19, 0x01	; 1
 192:	30 93 3d 01 	sts	0x013D, r19	; 0x80013d <__data_end+0x3>
 196:	20 93 3c 01 	sts	0x013C, r18	; 0x80013c <__data_end+0x2>
	volatile char * ext_mem = (char *) BASE_ADDRESS;
	ext_mem [addr]= data ;
 19a:	fb 01       	movw	r30, r22
 19c:	80 83       	st	Z, r24
	uint8_t retreived_value = ext_mem[addr];
 19e:	80 81       	ld	r24, Z
 1a0:	08 95       	ret

000001a2 <xmem_read>:
}

uint8_t xmem_read (uint16_t addr)
{
	volatile char * ext_mem = (char *) BASE_ADDRESS;
	uint8_t ret_val = ext_mem [addr];
 1a2:	fc 01       	movw	r30, r24
 1a4:	80 81       	ld	r24, Z
	return ret_val ;
 1a6:	08 95       	ret

000001a8 <__vector_19>:
#include <avr/interrupt.h>

double dutyCircle = 50;

ISR(USART0_RXC_vect)
{
 1a8:	1f 92       	push	r1
 1aa:	0f 92       	push	r0
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	0f 92       	push	r0
 1b0:	11 24       	eor	r1, r1
 1b2:	8f 93       	push	r24
   char ReceivedByte;
   ReceivedByte = UDR0; // Fetch the received byte value into the variable "ByteReceived"
 1b4:	8c b1       	in	r24, 0x0c	; 12
   UDR0 = ReceivedByte; // Echo back the received byte back to the computer
 1b6:	8c b9       	out	0x0c, r24	; 12
}
 1b8:	8f 91       	pop	r24
 1ba:	0f 90       	pop	r0
 1bc:	0f be       	out	0x3f, r0	; 63
 1be:	0f 90       	pop	r0
 1c0:	1f 90       	pop	r1
 1c2:	18 95       	reti

000001c4 <__vector_15>:

ISR(TIMER1_OVF_vect)
{
 1c4:	1f 92       	push	r1
 1c6:	0f 92       	push	r0
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	0f 92       	push	r0
 1cc:	11 24       	eor	r1, r1
 1ce:	cf 92       	push	r12
 1d0:	df 92       	push	r13
 1d2:	ef 92       	push	r14
 1d4:	ff 92       	push	r15
 1d6:	2f 93       	push	r18
 1d8:	3f 93       	push	r19
 1da:	4f 93       	push	r20
 1dc:	5f 93       	push	r21
 1de:	6f 93       	push	r22
 1e0:	7f 93       	push	r23
 1e2:	8f 93       	push	r24
 1e4:	9f 93       	push	r25
 1e6:	af 93       	push	r26
 1e8:	bf 93       	push	r27
 1ea:	ef 93       	push	r30
 1ec:	ff 93       	push	r31
	OCR1A = (dutyCircle/100.0)*ICR1;
 1ee:	20 e0       	ldi	r18, 0x00	; 0
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	48 ec       	ldi	r20, 0xC8	; 200
 1f4:	52 e4       	ldi	r21, 0x42	; 66
 1f6:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <dutyCircle>
 1fa:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <dutyCircle+0x1>
 1fe:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <dutyCircle+0x2>
 202:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <dutyCircle+0x3>
 206:	0e 94 ae 01 	call	0x35c	; 0x35c <__divsf3>
 20a:	6b 01       	movw	r12, r22
 20c:	7c 01       	movw	r14, r24
 20e:	64 b5       	in	r22, 0x24	; 36
 210:	75 b5       	in	r23, 0x25	; 37
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 4f 02 	call	0x49e	; 0x49e <__floatunsisf>
 21a:	a7 01       	movw	r20, r14
 21c:	96 01       	movw	r18, r12
 21e:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__mulsf3>
 222:	0e 94 20 02 	call	0x440	; 0x440 <__fixunssfsi>
 226:	7b bd       	out	0x2b, r23	; 43
 228:	6a bd       	out	0x2a, r22	; 42
}
 22a:	ff 91       	pop	r31
 22c:	ef 91       	pop	r30
 22e:	bf 91       	pop	r27
 230:	af 91       	pop	r26
 232:	9f 91       	pop	r25
 234:	8f 91       	pop	r24
 236:	7f 91       	pop	r23
 238:	6f 91       	pop	r22
 23a:	5f 91       	pop	r21
 23c:	4f 91       	pop	r20
 23e:	3f 91       	pop	r19
 240:	2f 91       	pop	r18
 242:	ff 90       	pop	r15
 244:	ef 90       	pop	r14
 246:	df 90       	pop	r13
 248:	cf 90       	pop	r12
 24a:	0f 90       	pop	r0
 24c:	0f be       	out	0x3f, r0	; 63
 24e:	0f 90       	pop	r0
 250:	1f 90       	pop	r1
 252:	18 95       	reti

00000254 <__vector_3>:

ISR(INT2_vect)
{
 254:	1f 92       	push	r1
 256:	0f 92       	push	r0
 258:	0f b6       	in	r0, 0x3f	; 63
 25a:	0f 92       	push	r0
 25c:	11 24       	eor	r1, r1
 25e:	2f 93       	push	r18
 260:	3f 93       	push	r19
 262:	4f 93       	push	r20
 264:	5f 93       	push	r21
 266:	6f 93       	push	r22
 268:	7f 93       	push	r23
 26a:	8f 93       	push	r24
 26c:	9f 93       	push	r25
 26e:	af 93       	push	r26
 270:	bf 93       	push	r27
 272:	ef 93       	push	r30
 274:	ff 93       	push	r31
	ADC_read();
 276:	0e 94 6a 00 	call	0xd4	; 0xd4 <ADC_read>
	xmem_write(0x52, 0x1400);
 27a:	60 e0       	ldi	r22, 0x00	; 0
 27c:	74 e1       	ldi	r23, 0x14	; 20
 27e:	82 e5       	ldi	r24, 0x52	; 82
 280:	0e 94 c7 00 	call	0x18e	; 0x18e <xmem_write>
// 	stdout = &mystdout;
// 	printf("Busy\n");
}
 284:	ff 91       	pop	r31
 286:	ef 91       	pop	r30
 288:	bf 91       	pop	r27
 28a:	af 91       	pop	r26
 28c:	9f 91       	pop	r25
 28e:	8f 91       	pop	r24
 290:	7f 91       	pop	r23
 292:	6f 91       	pop	r22
 294:	5f 91       	pop	r21
 296:	4f 91       	pop	r20
 298:	3f 91       	pop	r19
 29a:	2f 91       	pop	r18
 29c:	0f 90       	pop	r0
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	0f 90       	pop	r0
 2a2:	1f 90       	pop	r1
 2a4:	18 95       	reti

000002a6 <PWM_Init>:

void PWM_Init()
{
	//DDRD |= (1 << PD5);
	set_bit(DDRD, DDD5);
 2a6:	81 b3       	in	r24, 0x11	; 17
 2a8:	80 62       	ori	r24, 0x20	; 32
 2aa:	81 bb       	out	0x11, r24	; 17
	
	/* Fast PWM, TOP value = ICR1 */
	set_bit(TCCR1B, WGM13);
 2ac:	8e b5       	in	r24, 0x2e	; 46
 2ae:	80 61       	ori	r24, 0x10	; 16
 2b0:	8e bd       	out	0x2e, r24	; 46
	set_bit(TCCR1B, WGM12);
 2b2:	8e b5       	in	r24, 0x2e	; 46
 2b4:	88 60       	ori	r24, 0x08	; 8
 2b6:	8e bd       	out	0x2e, r24	; 46
	set_bit(TCCR1A, WGM11);
 2b8:	8f b5       	in	r24, 0x2f	; 47
 2ba:	82 60       	ori	r24, 0x02	; 2
 2bc:	8f bd       	out	0x2f, r24	; 47
	clear_bit(TCCR1A, WGM10);
 2be:	8f b5       	in	r24, 0x2f	; 47
 2c0:	8e 7f       	andi	r24, 0xFE	; 254
 2c2:	8f bd       	out	0x2f, r24	; 47
	
	set_bit(TCCR1A, COM1A1);
 2c4:	8f b5       	in	r24, 0x2f	; 47
 2c6:	80 68       	ori	r24, 0x80	; 128
 2c8:	8f bd       	out	0x2f, r24	; 47
	clear_bit(TCCR1A, COM1A0);
 2ca:	8f b5       	in	r24, 0x2f	; 47
 2cc:	8f 7b       	andi	r24, 0xBF	; 191
 2ce:	8f bd       	out	0x2f, r24	; 47
	
	set_bit(TIMSK, TOIE1);
 2d0:	89 b7       	in	r24, 0x39	; 57
 2d2:	80 68       	ori	r24, 0x80	; 128
 2d4:	89 bf       	out	0x39, r24	; 57
 2d6:	08 95       	ret

000002d8 <main>:


int main(void)
{
	
	stdout = &mystdout;
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	91 e0       	ldi	r25, 0x01	; 1
 2dc:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <__data_end+0x3>
 2e0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__data_end+0x2>
		clear_bit(MCUCSR, JTD);
 2e4:	84 b7       	in	r24, 0x34	; 52
 2e6:	8f 77       	andi	r24, 0x7F	; 127
 2e8:	84 bf       	out	0x34, r24	; 52
		USART_Init(UBRR);
 2ea:	8f e1       	ldi	r24, 0x1F	; 31
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0e 94 b6 00 	call	0x16c	; 0x16c <USART_Init>
		
		xmem_init();
 2f2:	0e 94 c0 00 	call	0x180	; 0x180 <xmem_init>
		
		PWM_Init();
 2f6:	0e 94 53 01 	call	0x2a6	; 0x2a6 <PWM_Init>
		ADC_init();
 2fa:	0e 94 57 00 	call	0xae	; 0xae <ADC_init>
		
		ICR1 = 1;
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	95 bd       	out	0x25, r25	; 37
 304:	84 bd       	out	0x24, r24	; 36
		
		OCR1A = (dutyCircle/100.0)*ICR1;
 306:	20 e0       	ldi	r18, 0x00	; 0
 308:	30 e0       	ldi	r19, 0x00	; 0
 30a:	48 ec       	ldi	r20, 0xC8	; 200
 30c:	52 e4       	ldi	r21, 0x42	; 66
 30e:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <dutyCircle>
 312:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <dutyCircle+0x1>
 316:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <dutyCircle+0x2>
 31a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <dutyCircle+0x3>
 31e:	0e 94 ae 01 	call	0x35c	; 0x35c <__divsf3>
 322:	6b 01       	movw	r12, r22
 324:	7c 01       	movw	r14, r24
 326:	64 b5       	in	r22, 0x24	; 36
 328:	75 b5       	in	r23, 0x25	; 37
 32a:	80 e0       	ldi	r24, 0x00	; 0
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	0e 94 4f 02 	call	0x49e	; 0x49e <__floatunsisf>
 332:	a7 01       	movw	r20, r14
 334:	96 01       	movw	r18, r12
 336:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__mulsf3>
 33a:	0e 94 20 02 	call	0x440	; 0x440 <__fixunssfsi>
 33e:	7b bd       	out	0x2b, r23	; 43
 340:	6a bd       	out	0x2a, r22	; 42
		
		sei(); // Enable all interrupt
 342:	78 94       	sei
		
		clear_bit(TCCR1B, CS12);
 344:	8e b5       	in	r24, 0x2e	; 46
 346:	8b 7f       	andi	r24, 0xFB	; 251
 348:	8e bd       	out	0x2e, r24	; 46
		clear_bit(TCCR1B, CS11);
 34a:	8e b5       	in	r24, 0x2e	; 46
 34c:	8d 7f       	andi	r24, 0xFD	; 253
 34e:	8e bd       	out	0x2e, r24	; 46
		set_bit(TCCR1B, CS10);
 350:	8e b5       	in	r24, 0x2e	; 46
 352:	81 60       	ori	r24, 0x01	; 1
 354:	8e bd       	out	0x2e, r24	; 46
	
	while(1)
	{
		//SRAM_test();
		//_delay_ms(5000);
		xmem_init();
 356:	0e 94 c0 00 	call	0x180	; 0x180 <xmem_init>
 35a:	fd cf       	rjmp	.-6      	; 0x356 <main+0x7e>

0000035c <__divsf3>:
 35c:	0e 94 c2 01 	call	0x384	; 0x384 <__divsf3x>
 360:	0c 94 a3 02 	jmp	0x546	; 0x546 <__fp_round>
 364:	0e 94 9c 02 	call	0x538	; 0x538 <__fp_pscB>
 368:	58 f0       	brcs	.+22     	; 0x380 <__divsf3+0x24>
 36a:	0e 94 95 02 	call	0x52a	; 0x52a <__fp_pscA>
 36e:	40 f0       	brcs	.+16     	; 0x380 <__divsf3+0x24>
 370:	29 f4       	brne	.+10     	; 0x37c <__divsf3+0x20>
 372:	5f 3f       	cpi	r21, 0xFF	; 255
 374:	29 f0       	breq	.+10     	; 0x380 <__divsf3+0x24>
 376:	0c 94 8c 02 	jmp	0x518	; 0x518 <__fp_inf>
 37a:	51 11       	cpse	r21, r1
 37c:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__fp_szero>
 380:	0c 94 92 02 	jmp	0x524	; 0x524 <__fp_nan>

00000384 <__divsf3x>:
 384:	0e 94 b4 02 	call	0x568	; 0x568 <__fp_split3>
 388:	68 f3       	brcs	.-38     	; 0x364 <__divsf3+0x8>

0000038a <__divsf3_pse>:
 38a:	99 23       	and	r25, r25
 38c:	b1 f3       	breq	.-20     	; 0x37a <__divsf3+0x1e>
 38e:	55 23       	and	r21, r21
 390:	91 f3       	breq	.-28     	; 0x376 <__divsf3+0x1a>
 392:	95 1b       	sub	r25, r21
 394:	55 0b       	sbc	r21, r21
 396:	bb 27       	eor	r27, r27
 398:	aa 27       	eor	r26, r26
 39a:	62 17       	cp	r22, r18
 39c:	73 07       	cpc	r23, r19
 39e:	84 07       	cpc	r24, r20
 3a0:	38 f0       	brcs	.+14     	; 0x3b0 <__divsf3_pse+0x26>
 3a2:	9f 5f       	subi	r25, 0xFF	; 255
 3a4:	5f 4f       	sbci	r21, 0xFF	; 255
 3a6:	22 0f       	add	r18, r18
 3a8:	33 1f       	adc	r19, r19
 3aa:	44 1f       	adc	r20, r20
 3ac:	aa 1f       	adc	r26, r26
 3ae:	a9 f3       	breq	.-22     	; 0x39a <__divsf3_pse+0x10>
 3b0:	35 d0       	rcall	.+106    	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 3b2:	0e 2e       	mov	r0, r30
 3b4:	3a f0       	brmi	.+14     	; 0x3c4 <__divsf3_pse+0x3a>
 3b6:	e0 e8       	ldi	r30, 0x80	; 128
 3b8:	32 d0       	rcall	.+100    	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 3ba:	91 50       	subi	r25, 0x01	; 1
 3bc:	50 40       	sbci	r21, 0x00	; 0
 3be:	e6 95       	lsr	r30
 3c0:	00 1c       	adc	r0, r0
 3c2:	ca f7       	brpl	.-14     	; 0x3b6 <__divsf3_pse+0x2c>
 3c4:	2b d0       	rcall	.+86     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 3c6:	fe 2f       	mov	r31, r30
 3c8:	29 d0       	rcall	.+82     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 3ca:	66 0f       	add	r22, r22
 3cc:	77 1f       	adc	r23, r23
 3ce:	88 1f       	adc	r24, r24
 3d0:	bb 1f       	adc	r27, r27
 3d2:	26 17       	cp	r18, r22
 3d4:	37 07       	cpc	r19, r23
 3d6:	48 07       	cpc	r20, r24
 3d8:	ab 07       	cpc	r26, r27
 3da:	b0 e8       	ldi	r27, 0x80	; 128
 3dc:	09 f0       	breq	.+2      	; 0x3e0 <__divsf3_pse+0x56>
 3de:	bb 0b       	sbc	r27, r27
 3e0:	80 2d       	mov	r24, r0
 3e2:	bf 01       	movw	r22, r30
 3e4:	ff 27       	eor	r31, r31
 3e6:	93 58       	subi	r25, 0x83	; 131
 3e8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ea:	3a f0       	brmi	.+14     	; 0x3fa <__divsf3_pse+0x70>
 3ec:	9e 3f       	cpi	r25, 0xFE	; 254
 3ee:	51 05       	cpc	r21, r1
 3f0:	78 f0       	brcs	.+30     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 3f2:	0c 94 8c 02 	jmp	0x518	; 0x518 <__fp_inf>
 3f6:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__fp_szero>
 3fa:	5f 3f       	cpi	r21, 0xFF	; 255
 3fc:	e4 f3       	brlt	.-8      	; 0x3f6 <__divsf3_pse+0x6c>
 3fe:	98 3e       	cpi	r25, 0xE8	; 232
 400:	d4 f3       	brlt	.-12     	; 0x3f6 <__divsf3_pse+0x6c>
 402:	86 95       	lsr	r24
 404:	77 95       	ror	r23
 406:	67 95       	ror	r22
 408:	b7 95       	ror	r27
 40a:	f7 95       	ror	r31
 40c:	9f 5f       	subi	r25, 0xFF	; 255
 40e:	c9 f7       	brne	.-14     	; 0x402 <__DATA_REGION_LENGTH__+0x2>
 410:	88 0f       	add	r24, r24
 412:	91 1d       	adc	r25, r1
 414:	96 95       	lsr	r25
 416:	87 95       	ror	r24
 418:	97 f9       	bld	r25, 7
 41a:	08 95       	ret
 41c:	e1 e0       	ldi	r30, 0x01	; 1
 41e:	66 0f       	add	r22, r22
 420:	77 1f       	adc	r23, r23
 422:	88 1f       	adc	r24, r24
 424:	bb 1f       	adc	r27, r27
 426:	62 17       	cp	r22, r18
 428:	73 07       	cpc	r23, r19
 42a:	84 07       	cpc	r24, r20
 42c:	ba 07       	cpc	r27, r26
 42e:	20 f0       	brcs	.+8      	; 0x438 <__DATA_REGION_LENGTH__+0x38>
 430:	62 1b       	sub	r22, r18
 432:	73 0b       	sbc	r23, r19
 434:	84 0b       	sbc	r24, r20
 436:	ba 0b       	sbc	r27, r26
 438:	ee 1f       	adc	r30, r30
 43a:	88 f7       	brcc	.-30     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 43c:	e0 95       	com	r30
 43e:	08 95       	ret

00000440 <__fixunssfsi>:
 440:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_splitA>
 444:	88 f0       	brcs	.+34     	; 0x468 <__fixunssfsi+0x28>
 446:	9f 57       	subi	r25, 0x7F	; 127
 448:	98 f0       	brcs	.+38     	; 0x470 <__fixunssfsi+0x30>
 44a:	b9 2f       	mov	r27, r25
 44c:	99 27       	eor	r25, r25
 44e:	b7 51       	subi	r27, 0x17	; 23
 450:	b0 f0       	brcs	.+44     	; 0x47e <__fixunssfsi+0x3e>
 452:	e1 f0       	breq	.+56     	; 0x48c <__fixunssfsi+0x4c>
 454:	66 0f       	add	r22, r22
 456:	77 1f       	adc	r23, r23
 458:	88 1f       	adc	r24, r24
 45a:	99 1f       	adc	r25, r25
 45c:	1a f0       	brmi	.+6      	; 0x464 <__fixunssfsi+0x24>
 45e:	ba 95       	dec	r27
 460:	c9 f7       	brne	.-14     	; 0x454 <__fixunssfsi+0x14>
 462:	14 c0       	rjmp	.+40     	; 0x48c <__fixunssfsi+0x4c>
 464:	b1 30       	cpi	r27, 0x01	; 1
 466:	91 f0       	breq	.+36     	; 0x48c <__fixunssfsi+0x4c>
 468:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__fp_zero>
 46c:	b1 e0       	ldi	r27, 0x01	; 1
 46e:	08 95       	ret
 470:	0c 94 d6 02 	jmp	0x5ac	; 0x5ac <__fp_zero>
 474:	67 2f       	mov	r22, r23
 476:	78 2f       	mov	r23, r24
 478:	88 27       	eor	r24, r24
 47a:	b8 5f       	subi	r27, 0xF8	; 248
 47c:	39 f0       	breq	.+14     	; 0x48c <__fixunssfsi+0x4c>
 47e:	b9 3f       	cpi	r27, 0xF9	; 249
 480:	cc f3       	brlt	.-14     	; 0x474 <__fixunssfsi+0x34>
 482:	86 95       	lsr	r24
 484:	77 95       	ror	r23
 486:	67 95       	ror	r22
 488:	b3 95       	inc	r27
 48a:	d9 f7       	brne	.-10     	; 0x482 <__fixunssfsi+0x42>
 48c:	3e f4       	brtc	.+14     	; 0x49c <__fixunssfsi+0x5c>
 48e:	90 95       	com	r25
 490:	80 95       	com	r24
 492:	70 95       	com	r23
 494:	61 95       	neg	r22
 496:	7f 4f       	sbci	r23, 0xFF	; 255
 498:	8f 4f       	sbci	r24, 0xFF	; 255
 49a:	9f 4f       	sbci	r25, 0xFF	; 255
 49c:	08 95       	ret

0000049e <__floatunsisf>:
 49e:	e8 94       	clt
 4a0:	09 c0       	rjmp	.+18     	; 0x4b4 <__floatsisf+0x12>

000004a2 <__floatsisf>:
 4a2:	97 fb       	bst	r25, 7
 4a4:	3e f4       	brtc	.+14     	; 0x4b4 <__floatsisf+0x12>
 4a6:	90 95       	com	r25
 4a8:	80 95       	com	r24
 4aa:	70 95       	com	r23
 4ac:	61 95       	neg	r22
 4ae:	7f 4f       	sbci	r23, 0xFF	; 255
 4b0:	8f 4f       	sbci	r24, 0xFF	; 255
 4b2:	9f 4f       	sbci	r25, 0xFF	; 255
 4b4:	99 23       	and	r25, r25
 4b6:	a9 f0       	breq	.+42     	; 0x4e2 <__floatsisf+0x40>
 4b8:	f9 2f       	mov	r31, r25
 4ba:	96 e9       	ldi	r25, 0x96	; 150
 4bc:	bb 27       	eor	r27, r27
 4be:	93 95       	inc	r25
 4c0:	f6 95       	lsr	r31
 4c2:	87 95       	ror	r24
 4c4:	77 95       	ror	r23
 4c6:	67 95       	ror	r22
 4c8:	b7 95       	ror	r27
 4ca:	f1 11       	cpse	r31, r1
 4cc:	f8 cf       	rjmp	.-16     	; 0x4be <__floatsisf+0x1c>
 4ce:	fa f4       	brpl	.+62     	; 0x50e <__stack+0xf>
 4d0:	bb 0f       	add	r27, r27
 4d2:	11 f4       	brne	.+4      	; 0x4d8 <__floatsisf+0x36>
 4d4:	60 ff       	sbrs	r22, 0
 4d6:	1b c0       	rjmp	.+54     	; 0x50e <__stack+0xf>
 4d8:	6f 5f       	subi	r22, 0xFF	; 255
 4da:	7f 4f       	sbci	r23, 0xFF	; 255
 4dc:	8f 4f       	sbci	r24, 0xFF	; 255
 4de:	9f 4f       	sbci	r25, 0xFF	; 255
 4e0:	16 c0       	rjmp	.+44     	; 0x50e <__stack+0xf>
 4e2:	88 23       	and	r24, r24
 4e4:	11 f0       	breq	.+4      	; 0x4ea <__floatsisf+0x48>
 4e6:	96 e9       	ldi	r25, 0x96	; 150
 4e8:	11 c0       	rjmp	.+34     	; 0x50c <__stack+0xd>
 4ea:	77 23       	and	r23, r23
 4ec:	21 f0       	breq	.+8      	; 0x4f6 <__floatsisf+0x54>
 4ee:	9e e8       	ldi	r25, 0x8E	; 142
 4f0:	87 2f       	mov	r24, r23
 4f2:	76 2f       	mov	r23, r22
 4f4:	05 c0       	rjmp	.+10     	; 0x500 <__stack+0x1>
 4f6:	66 23       	and	r22, r22
 4f8:	71 f0       	breq	.+28     	; 0x516 <__stack+0x17>
 4fa:	96 e8       	ldi	r25, 0x86	; 134
 4fc:	86 2f       	mov	r24, r22
 4fe:	70 e0       	ldi	r23, 0x00	; 0
 500:	60 e0       	ldi	r22, 0x00	; 0
 502:	2a f0       	brmi	.+10     	; 0x50e <__stack+0xf>
 504:	9a 95       	dec	r25
 506:	66 0f       	add	r22, r22
 508:	77 1f       	adc	r23, r23
 50a:	88 1f       	adc	r24, r24
 50c:	da f7       	brpl	.-10     	; 0x504 <__stack+0x5>
 50e:	88 0f       	add	r24, r24
 510:	96 95       	lsr	r25
 512:	87 95       	ror	r24
 514:	97 f9       	bld	r25, 7
 516:	08 95       	ret

00000518 <__fp_inf>:
 518:	97 f9       	bld	r25, 7
 51a:	9f 67       	ori	r25, 0x7F	; 127
 51c:	80 e8       	ldi	r24, 0x80	; 128
 51e:	70 e0       	ldi	r23, 0x00	; 0
 520:	60 e0       	ldi	r22, 0x00	; 0
 522:	08 95       	ret

00000524 <__fp_nan>:
 524:	9f ef       	ldi	r25, 0xFF	; 255
 526:	80 ec       	ldi	r24, 0xC0	; 192
 528:	08 95       	ret

0000052a <__fp_pscA>:
 52a:	00 24       	eor	r0, r0
 52c:	0a 94       	dec	r0
 52e:	16 16       	cp	r1, r22
 530:	17 06       	cpc	r1, r23
 532:	18 06       	cpc	r1, r24
 534:	09 06       	cpc	r0, r25
 536:	08 95       	ret

00000538 <__fp_pscB>:
 538:	00 24       	eor	r0, r0
 53a:	0a 94       	dec	r0
 53c:	12 16       	cp	r1, r18
 53e:	13 06       	cpc	r1, r19
 540:	14 06       	cpc	r1, r20
 542:	05 06       	cpc	r0, r21
 544:	08 95       	ret

00000546 <__fp_round>:
 546:	09 2e       	mov	r0, r25
 548:	03 94       	inc	r0
 54a:	00 0c       	add	r0, r0
 54c:	11 f4       	brne	.+4      	; 0x552 <__fp_round+0xc>
 54e:	88 23       	and	r24, r24
 550:	52 f0       	brmi	.+20     	; 0x566 <__fp_round+0x20>
 552:	bb 0f       	add	r27, r27
 554:	40 f4       	brcc	.+16     	; 0x566 <__fp_round+0x20>
 556:	bf 2b       	or	r27, r31
 558:	11 f4       	brne	.+4      	; 0x55e <__fp_round+0x18>
 55a:	60 ff       	sbrs	r22, 0
 55c:	04 c0       	rjmp	.+8      	; 0x566 <__fp_round+0x20>
 55e:	6f 5f       	subi	r22, 0xFF	; 255
 560:	7f 4f       	sbci	r23, 0xFF	; 255
 562:	8f 4f       	sbci	r24, 0xFF	; 255
 564:	9f 4f       	sbci	r25, 0xFF	; 255
 566:	08 95       	ret

00000568 <__fp_split3>:
 568:	57 fd       	sbrc	r21, 7
 56a:	90 58       	subi	r25, 0x80	; 128
 56c:	44 0f       	add	r20, r20
 56e:	55 1f       	adc	r21, r21
 570:	59 f0       	breq	.+22     	; 0x588 <__fp_splitA+0x10>
 572:	5f 3f       	cpi	r21, 0xFF	; 255
 574:	71 f0       	breq	.+28     	; 0x592 <__fp_splitA+0x1a>
 576:	47 95       	ror	r20

00000578 <__fp_splitA>:
 578:	88 0f       	add	r24, r24
 57a:	97 fb       	bst	r25, 7
 57c:	99 1f       	adc	r25, r25
 57e:	61 f0       	breq	.+24     	; 0x598 <__fp_splitA+0x20>
 580:	9f 3f       	cpi	r25, 0xFF	; 255
 582:	79 f0       	breq	.+30     	; 0x5a2 <__fp_splitA+0x2a>
 584:	87 95       	ror	r24
 586:	08 95       	ret
 588:	12 16       	cp	r1, r18
 58a:	13 06       	cpc	r1, r19
 58c:	14 06       	cpc	r1, r20
 58e:	55 1f       	adc	r21, r21
 590:	f2 cf       	rjmp	.-28     	; 0x576 <__fp_split3+0xe>
 592:	46 95       	lsr	r20
 594:	f1 df       	rcall	.-30     	; 0x578 <__fp_splitA>
 596:	08 c0       	rjmp	.+16     	; 0x5a8 <__fp_splitA+0x30>
 598:	16 16       	cp	r1, r22
 59a:	17 06       	cpc	r1, r23
 59c:	18 06       	cpc	r1, r24
 59e:	99 1f       	adc	r25, r25
 5a0:	f1 cf       	rjmp	.-30     	; 0x584 <__fp_splitA+0xc>
 5a2:	86 95       	lsr	r24
 5a4:	71 05       	cpc	r23, r1
 5a6:	61 05       	cpc	r22, r1
 5a8:	08 94       	sec
 5aa:	08 95       	ret

000005ac <__fp_zero>:
 5ac:	e8 94       	clt

000005ae <__fp_szero>:
 5ae:	bb 27       	eor	r27, r27
 5b0:	66 27       	eor	r22, r22
 5b2:	77 27       	eor	r23, r23
 5b4:	cb 01       	movw	r24, r22
 5b6:	97 f9       	bld	r25, 7
 5b8:	08 95       	ret

000005ba <__mulsf3>:
 5ba:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__mulsf3x>
 5be:	0c 94 a3 02 	jmp	0x546	; 0x546 <__fp_round>
 5c2:	0e 94 95 02 	call	0x52a	; 0x52a <__fp_pscA>
 5c6:	38 f0       	brcs	.+14     	; 0x5d6 <__mulsf3+0x1c>
 5c8:	0e 94 9c 02 	call	0x538	; 0x538 <__fp_pscB>
 5cc:	20 f0       	brcs	.+8      	; 0x5d6 <__mulsf3+0x1c>
 5ce:	95 23       	and	r25, r21
 5d0:	11 f0       	breq	.+4      	; 0x5d6 <__mulsf3+0x1c>
 5d2:	0c 94 8c 02 	jmp	0x518	; 0x518 <__fp_inf>
 5d6:	0c 94 92 02 	jmp	0x524	; 0x524 <__fp_nan>
 5da:	11 24       	eor	r1, r1
 5dc:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__fp_szero>

000005e0 <__mulsf3x>:
 5e0:	0e 94 b4 02 	call	0x568	; 0x568 <__fp_split3>
 5e4:	70 f3       	brcs	.-36     	; 0x5c2 <__mulsf3+0x8>

000005e6 <__mulsf3_pse>:
 5e6:	95 9f       	mul	r25, r21
 5e8:	c1 f3       	breq	.-16     	; 0x5da <__mulsf3+0x20>
 5ea:	95 0f       	add	r25, r21
 5ec:	50 e0       	ldi	r21, 0x00	; 0
 5ee:	55 1f       	adc	r21, r21
 5f0:	62 9f       	mul	r22, r18
 5f2:	f0 01       	movw	r30, r0
 5f4:	72 9f       	mul	r23, r18
 5f6:	bb 27       	eor	r27, r27
 5f8:	f0 0d       	add	r31, r0
 5fa:	b1 1d       	adc	r27, r1
 5fc:	63 9f       	mul	r22, r19
 5fe:	aa 27       	eor	r26, r26
 600:	f0 0d       	add	r31, r0
 602:	b1 1d       	adc	r27, r1
 604:	aa 1f       	adc	r26, r26
 606:	64 9f       	mul	r22, r20
 608:	66 27       	eor	r22, r22
 60a:	b0 0d       	add	r27, r0
 60c:	a1 1d       	adc	r26, r1
 60e:	66 1f       	adc	r22, r22
 610:	82 9f       	mul	r24, r18
 612:	22 27       	eor	r18, r18
 614:	b0 0d       	add	r27, r0
 616:	a1 1d       	adc	r26, r1
 618:	62 1f       	adc	r22, r18
 61a:	73 9f       	mul	r23, r19
 61c:	b0 0d       	add	r27, r0
 61e:	a1 1d       	adc	r26, r1
 620:	62 1f       	adc	r22, r18
 622:	83 9f       	mul	r24, r19
 624:	a0 0d       	add	r26, r0
 626:	61 1d       	adc	r22, r1
 628:	22 1f       	adc	r18, r18
 62a:	74 9f       	mul	r23, r20
 62c:	33 27       	eor	r19, r19
 62e:	a0 0d       	add	r26, r0
 630:	61 1d       	adc	r22, r1
 632:	23 1f       	adc	r18, r19
 634:	84 9f       	mul	r24, r20
 636:	60 0d       	add	r22, r0
 638:	21 1d       	adc	r18, r1
 63a:	82 2f       	mov	r24, r18
 63c:	76 2f       	mov	r23, r22
 63e:	6a 2f       	mov	r22, r26
 640:	11 24       	eor	r1, r1
 642:	9f 57       	subi	r25, 0x7F	; 127
 644:	50 40       	sbci	r21, 0x00	; 0
 646:	9a f0       	brmi	.+38     	; 0x66e <__mulsf3_pse+0x88>
 648:	f1 f0       	breq	.+60     	; 0x686 <__mulsf3_pse+0xa0>
 64a:	88 23       	and	r24, r24
 64c:	4a f0       	brmi	.+18     	; 0x660 <__mulsf3_pse+0x7a>
 64e:	ee 0f       	add	r30, r30
 650:	ff 1f       	adc	r31, r31
 652:	bb 1f       	adc	r27, r27
 654:	66 1f       	adc	r22, r22
 656:	77 1f       	adc	r23, r23
 658:	88 1f       	adc	r24, r24
 65a:	91 50       	subi	r25, 0x01	; 1
 65c:	50 40       	sbci	r21, 0x00	; 0
 65e:	a9 f7       	brne	.-22     	; 0x64a <__mulsf3_pse+0x64>
 660:	9e 3f       	cpi	r25, 0xFE	; 254
 662:	51 05       	cpc	r21, r1
 664:	80 f0       	brcs	.+32     	; 0x686 <__mulsf3_pse+0xa0>
 666:	0c 94 8c 02 	jmp	0x518	; 0x518 <__fp_inf>
 66a:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__fp_szero>
 66e:	5f 3f       	cpi	r21, 0xFF	; 255
 670:	e4 f3       	brlt	.-8      	; 0x66a <__mulsf3_pse+0x84>
 672:	98 3e       	cpi	r25, 0xE8	; 232
 674:	d4 f3       	brlt	.-12     	; 0x66a <__mulsf3_pse+0x84>
 676:	86 95       	lsr	r24
 678:	77 95       	ror	r23
 67a:	67 95       	ror	r22
 67c:	b7 95       	ror	r27
 67e:	f7 95       	ror	r31
 680:	e7 95       	ror	r30
 682:	9f 5f       	subi	r25, 0xFF	; 255
 684:	c1 f7       	brne	.-16     	; 0x676 <__mulsf3_pse+0x90>
 686:	fe 2b       	or	r31, r30
 688:	88 0f       	add	r24, r24
 68a:	91 1d       	adc	r25, r1
 68c:	96 95       	lsr	r25
 68e:	87 95       	ror	r24
 690:	97 f9       	bld	r25, 7
 692:	08 95       	ret

00000694 <printf>:
 694:	a0 e0       	ldi	r26, 0x00	; 0
 696:	b0 e0       	ldi	r27, 0x00	; 0
 698:	e0 e5       	ldi	r30, 0x50	; 80
 69a:	f3 e0       	ldi	r31, 0x03	; 3
 69c:	0c 94 01 06 	jmp	0xc02	; 0xc02 <__prologue_saves__+0x20>
 6a0:	ae 01       	movw	r20, r28
 6a2:	4b 5f       	subi	r20, 0xFB	; 251
 6a4:	5f 4f       	sbci	r21, 0xFF	; 255
 6a6:	fa 01       	movw	r30, r20
 6a8:	61 91       	ld	r22, Z+
 6aa:	71 91       	ld	r23, Z+
 6ac:	af 01       	movw	r20, r30
 6ae:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end+0x2>
 6b2:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <__data_end+0x3>
 6b6:	0e 94 60 03 	call	0x6c0	; 0x6c0 <vfprintf>
 6ba:	e2 e0       	ldi	r30, 0x02	; 2
 6bc:	0c 94 1d 06 	jmp	0xc3a	; 0xc3a <__epilogue_restores__+0x20>

000006c0 <vfprintf>:
 6c0:	ab e0       	ldi	r26, 0x0B	; 11
 6c2:	b0 e0       	ldi	r27, 0x00	; 0
 6c4:	e6 e6       	ldi	r30, 0x66	; 102
 6c6:	f3 e0       	ldi	r31, 0x03	; 3
 6c8:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__prologue_saves__>
 6cc:	6c 01       	movw	r12, r24
 6ce:	7b 01       	movw	r14, r22
 6d0:	8a 01       	movw	r16, r20
 6d2:	fc 01       	movw	r30, r24
 6d4:	17 82       	std	Z+7, r1	; 0x07
 6d6:	16 82       	std	Z+6, r1	; 0x06
 6d8:	83 81       	ldd	r24, Z+3	; 0x03
 6da:	81 ff       	sbrs	r24, 1
 6dc:	cc c1       	rjmp	.+920    	; 0xa76 <vfprintf+0x3b6>
 6de:	ce 01       	movw	r24, r28
 6e0:	01 96       	adiw	r24, 0x01	; 1
 6e2:	3c 01       	movw	r6, r24
 6e4:	f6 01       	movw	r30, r12
 6e6:	93 81       	ldd	r25, Z+3	; 0x03
 6e8:	f7 01       	movw	r30, r14
 6ea:	93 fd       	sbrc	r25, 3
 6ec:	85 91       	lpm	r24, Z+
 6ee:	93 ff       	sbrs	r25, 3
 6f0:	81 91       	ld	r24, Z+
 6f2:	7f 01       	movw	r14, r30
 6f4:	88 23       	and	r24, r24
 6f6:	09 f4       	brne	.+2      	; 0x6fa <vfprintf+0x3a>
 6f8:	ba c1       	rjmp	.+884    	; 0xa6e <vfprintf+0x3ae>
 6fa:	85 32       	cpi	r24, 0x25	; 37
 6fc:	39 f4       	brne	.+14     	; 0x70c <vfprintf+0x4c>
 6fe:	93 fd       	sbrc	r25, 3
 700:	85 91       	lpm	r24, Z+
 702:	93 ff       	sbrs	r25, 3
 704:	81 91       	ld	r24, Z+
 706:	7f 01       	movw	r14, r30
 708:	85 32       	cpi	r24, 0x25	; 37
 70a:	29 f4       	brne	.+10     	; 0x716 <vfprintf+0x56>
 70c:	b6 01       	movw	r22, r12
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 714:	e7 cf       	rjmp	.-50     	; 0x6e4 <vfprintf+0x24>
 716:	91 2c       	mov	r9, r1
 718:	21 2c       	mov	r2, r1
 71a:	31 2c       	mov	r3, r1
 71c:	ff e1       	ldi	r31, 0x1F	; 31
 71e:	f3 15       	cp	r31, r3
 720:	d8 f0       	brcs	.+54     	; 0x758 <vfprintf+0x98>
 722:	8b 32       	cpi	r24, 0x2B	; 43
 724:	79 f0       	breq	.+30     	; 0x744 <vfprintf+0x84>
 726:	38 f4       	brcc	.+14     	; 0x736 <vfprintf+0x76>
 728:	80 32       	cpi	r24, 0x20	; 32
 72a:	79 f0       	breq	.+30     	; 0x74a <vfprintf+0x8a>
 72c:	83 32       	cpi	r24, 0x23	; 35
 72e:	a1 f4       	brne	.+40     	; 0x758 <vfprintf+0x98>
 730:	23 2d       	mov	r18, r3
 732:	20 61       	ori	r18, 0x10	; 16
 734:	1d c0       	rjmp	.+58     	; 0x770 <vfprintf+0xb0>
 736:	8d 32       	cpi	r24, 0x2D	; 45
 738:	61 f0       	breq	.+24     	; 0x752 <vfprintf+0x92>
 73a:	80 33       	cpi	r24, 0x30	; 48
 73c:	69 f4       	brne	.+26     	; 0x758 <vfprintf+0x98>
 73e:	23 2d       	mov	r18, r3
 740:	21 60       	ori	r18, 0x01	; 1
 742:	16 c0       	rjmp	.+44     	; 0x770 <vfprintf+0xb0>
 744:	83 2d       	mov	r24, r3
 746:	82 60       	ori	r24, 0x02	; 2
 748:	38 2e       	mov	r3, r24
 74a:	e3 2d       	mov	r30, r3
 74c:	e4 60       	ori	r30, 0x04	; 4
 74e:	3e 2e       	mov	r3, r30
 750:	2a c0       	rjmp	.+84     	; 0x7a6 <vfprintf+0xe6>
 752:	f3 2d       	mov	r31, r3
 754:	f8 60       	ori	r31, 0x08	; 8
 756:	1d c0       	rjmp	.+58     	; 0x792 <vfprintf+0xd2>
 758:	37 fc       	sbrc	r3, 7
 75a:	2d c0       	rjmp	.+90     	; 0x7b6 <vfprintf+0xf6>
 75c:	20 ed       	ldi	r18, 0xD0	; 208
 75e:	28 0f       	add	r18, r24
 760:	2a 30       	cpi	r18, 0x0A	; 10
 762:	40 f0       	brcs	.+16     	; 0x774 <vfprintf+0xb4>
 764:	8e 32       	cpi	r24, 0x2E	; 46
 766:	b9 f4       	brne	.+46     	; 0x796 <vfprintf+0xd6>
 768:	36 fc       	sbrc	r3, 6
 76a:	81 c1       	rjmp	.+770    	; 0xa6e <vfprintf+0x3ae>
 76c:	23 2d       	mov	r18, r3
 76e:	20 64       	ori	r18, 0x40	; 64
 770:	32 2e       	mov	r3, r18
 772:	19 c0       	rjmp	.+50     	; 0x7a6 <vfprintf+0xe6>
 774:	36 fe       	sbrs	r3, 6
 776:	06 c0       	rjmp	.+12     	; 0x784 <vfprintf+0xc4>
 778:	8a e0       	ldi	r24, 0x0A	; 10
 77a:	98 9e       	mul	r9, r24
 77c:	20 0d       	add	r18, r0
 77e:	11 24       	eor	r1, r1
 780:	92 2e       	mov	r9, r18
 782:	11 c0       	rjmp	.+34     	; 0x7a6 <vfprintf+0xe6>
 784:	ea e0       	ldi	r30, 0x0A	; 10
 786:	2e 9e       	mul	r2, r30
 788:	20 0d       	add	r18, r0
 78a:	11 24       	eor	r1, r1
 78c:	22 2e       	mov	r2, r18
 78e:	f3 2d       	mov	r31, r3
 790:	f0 62       	ori	r31, 0x20	; 32
 792:	3f 2e       	mov	r3, r31
 794:	08 c0       	rjmp	.+16     	; 0x7a6 <vfprintf+0xe6>
 796:	8c 36       	cpi	r24, 0x6C	; 108
 798:	21 f4       	brne	.+8      	; 0x7a2 <vfprintf+0xe2>
 79a:	83 2d       	mov	r24, r3
 79c:	80 68       	ori	r24, 0x80	; 128
 79e:	38 2e       	mov	r3, r24
 7a0:	02 c0       	rjmp	.+4      	; 0x7a6 <vfprintf+0xe6>
 7a2:	88 36       	cpi	r24, 0x68	; 104
 7a4:	41 f4       	brne	.+16     	; 0x7b6 <vfprintf+0xf6>
 7a6:	f7 01       	movw	r30, r14
 7a8:	93 fd       	sbrc	r25, 3
 7aa:	85 91       	lpm	r24, Z+
 7ac:	93 ff       	sbrs	r25, 3
 7ae:	81 91       	ld	r24, Z+
 7b0:	7f 01       	movw	r14, r30
 7b2:	81 11       	cpse	r24, r1
 7b4:	b3 cf       	rjmp	.-154    	; 0x71c <vfprintf+0x5c>
 7b6:	98 2f       	mov	r25, r24
 7b8:	9f 7d       	andi	r25, 0xDF	; 223
 7ba:	95 54       	subi	r25, 0x45	; 69
 7bc:	93 30       	cpi	r25, 0x03	; 3
 7be:	28 f4       	brcc	.+10     	; 0x7ca <vfprintf+0x10a>
 7c0:	0c 5f       	subi	r16, 0xFC	; 252
 7c2:	1f 4f       	sbci	r17, 0xFF	; 255
 7c4:	9f e3       	ldi	r25, 0x3F	; 63
 7c6:	99 83       	std	Y+1, r25	; 0x01
 7c8:	0d c0       	rjmp	.+26     	; 0x7e4 <vfprintf+0x124>
 7ca:	83 36       	cpi	r24, 0x63	; 99
 7cc:	31 f0       	breq	.+12     	; 0x7da <vfprintf+0x11a>
 7ce:	83 37       	cpi	r24, 0x73	; 115
 7d0:	71 f0       	breq	.+28     	; 0x7ee <vfprintf+0x12e>
 7d2:	83 35       	cpi	r24, 0x53	; 83
 7d4:	09 f0       	breq	.+2      	; 0x7d8 <vfprintf+0x118>
 7d6:	59 c0       	rjmp	.+178    	; 0x88a <vfprintf+0x1ca>
 7d8:	21 c0       	rjmp	.+66     	; 0x81c <vfprintf+0x15c>
 7da:	f8 01       	movw	r30, r16
 7dc:	80 81       	ld	r24, Z
 7de:	89 83       	std	Y+1, r24	; 0x01
 7e0:	0e 5f       	subi	r16, 0xFE	; 254
 7e2:	1f 4f       	sbci	r17, 0xFF	; 255
 7e4:	88 24       	eor	r8, r8
 7e6:	83 94       	inc	r8
 7e8:	91 2c       	mov	r9, r1
 7ea:	53 01       	movw	r10, r6
 7ec:	13 c0       	rjmp	.+38     	; 0x814 <vfprintf+0x154>
 7ee:	28 01       	movw	r4, r16
 7f0:	f2 e0       	ldi	r31, 0x02	; 2
 7f2:	4f 0e       	add	r4, r31
 7f4:	51 1c       	adc	r5, r1
 7f6:	f8 01       	movw	r30, r16
 7f8:	a0 80       	ld	r10, Z
 7fa:	b1 80       	ldd	r11, Z+1	; 0x01
 7fc:	36 fe       	sbrs	r3, 6
 7fe:	03 c0       	rjmp	.+6      	; 0x806 <vfprintf+0x146>
 800:	69 2d       	mov	r22, r9
 802:	70 e0       	ldi	r23, 0x00	; 0
 804:	02 c0       	rjmp	.+4      	; 0x80a <vfprintf+0x14a>
 806:	6f ef       	ldi	r22, 0xFF	; 255
 808:	7f ef       	ldi	r23, 0xFF	; 255
 80a:	c5 01       	movw	r24, r10
 80c:	0e 94 4c 05 	call	0xa98	; 0xa98 <strnlen>
 810:	4c 01       	movw	r8, r24
 812:	82 01       	movw	r16, r4
 814:	f3 2d       	mov	r31, r3
 816:	ff 77       	andi	r31, 0x7F	; 127
 818:	3f 2e       	mov	r3, r31
 81a:	16 c0       	rjmp	.+44     	; 0x848 <vfprintf+0x188>
 81c:	28 01       	movw	r4, r16
 81e:	22 e0       	ldi	r18, 0x02	; 2
 820:	42 0e       	add	r4, r18
 822:	51 1c       	adc	r5, r1
 824:	f8 01       	movw	r30, r16
 826:	a0 80       	ld	r10, Z
 828:	b1 80       	ldd	r11, Z+1	; 0x01
 82a:	36 fe       	sbrs	r3, 6
 82c:	03 c0       	rjmp	.+6      	; 0x834 <vfprintf+0x174>
 82e:	69 2d       	mov	r22, r9
 830:	70 e0       	ldi	r23, 0x00	; 0
 832:	02 c0       	rjmp	.+4      	; 0x838 <vfprintf+0x178>
 834:	6f ef       	ldi	r22, 0xFF	; 255
 836:	7f ef       	ldi	r23, 0xFF	; 255
 838:	c5 01       	movw	r24, r10
 83a:	0e 94 41 05 	call	0xa82	; 0xa82 <strnlen_P>
 83e:	4c 01       	movw	r8, r24
 840:	f3 2d       	mov	r31, r3
 842:	f0 68       	ori	r31, 0x80	; 128
 844:	3f 2e       	mov	r3, r31
 846:	82 01       	movw	r16, r4
 848:	33 fc       	sbrc	r3, 3
 84a:	1b c0       	rjmp	.+54     	; 0x882 <vfprintf+0x1c2>
 84c:	82 2d       	mov	r24, r2
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	88 16       	cp	r8, r24
 852:	99 06       	cpc	r9, r25
 854:	b0 f4       	brcc	.+44     	; 0x882 <vfprintf+0x1c2>
 856:	b6 01       	movw	r22, r12
 858:	80 e2       	ldi	r24, 0x20	; 32
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 860:	2a 94       	dec	r2
 862:	f4 cf       	rjmp	.-24     	; 0x84c <vfprintf+0x18c>
 864:	f5 01       	movw	r30, r10
 866:	37 fc       	sbrc	r3, 7
 868:	85 91       	lpm	r24, Z+
 86a:	37 fe       	sbrs	r3, 7
 86c:	81 91       	ld	r24, Z+
 86e:	5f 01       	movw	r10, r30
 870:	b6 01       	movw	r22, r12
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 878:	21 10       	cpse	r2, r1
 87a:	2a 94       	dec	r2
 87c:	21 e0       	ldi	r18, 0x01	; 1
 87e:	82 1a       	sub	r8, r18
 880:	91 08       	sbc	r9, r1
 882:	81 14       	cp	r8, r1
 884:	91 04       	cpc	r9, r1
 886:	71 f7       	brne	.-36     	; 0x864 <vfprintf+0x1a4>
 888:	e8 c0       	rjmp	.+464    	; 0xa5a <vfprintf+0x39a>
 88a:	84 36       	cpi	r24, 0x64	; 100
 88c:	11 f0       	breq	.+4      	; 0x892 <vfprintf+0x1d2>
 88e:	89 36       	cpi	r24, 0x69	; 105
 890:	41 f5       	brne	.+80     	; 0x8e2 <vfprintf+0x222>
 892:	f8 01       	movw	r30, r16
 894:	37 fe       	sbrs	r3, 7
 896:	07 c0       	rjmp	.+14     	; 0x8a6 <vfprintf+0x1e6>
 898:	60 81       	ld	r22, Z
 89a:	71 81       	ldd	r23, Z+1	; 0x01
 89c:	82 81       	ldd	r24, Z+2	; 0x02
 89e:	93 81       	ldd	r25, Z+3	; 0x03
 8a0:	0c 5f       	subi	r16, 0xFC	; 252
 8a2:	1f 4f       	sbci	r17, 0xFF	; 255
 8a4:	08 c0       	rjmp	.+16     	; 0x8b6 <vfprintf+0x1f6>
 8a6:	60 81       	ld	r22, Z
 8a8:	71 81       	ldd	r23, Z+1	; 0x01
 8aa:	07 2e       	mov	r0, r23
 8ac:	00 0c       	add	r0, r0
 8ae:	88 0b       	sbc	r24, r24
 8b0:	99 0b       	sbc	r25, r25
 8b2:	0e 5f       	subi	r16, 0xFE	; 254
 8b4:	1f 4f       	sbci	r17, 0xFF	; 255
 8b6:	f3 2d       	mov	r31, r3
 8b8:	ff 76       	andi	r31, 0x6F	; 111
 8ba:	3f 2e       	mov	r3, r31
 8bc:	97 ff       	sbrs	r25, 7
 8be:	09 c0       	rjmp	.+18     	; 0x8d2 <vfprintf+0x212>
 8c0:	90 95       	com	r25
 8c2:	80 95       	com	r24
 8c4:	70 95       	com	r23
 8c6:	61 95       	neg	r22
 8c8:	7f 4f       	sbci	r23, 0xFF	; 255
 8ca:	8f 4f       	sbci	r24, 0xFF	; 255
 8cc:	9f 4f       	sbci	r25, 0xFF	; 255
 8ce:	f0 68       	ori	r31, 0x80	; 128
 8d0:	3f 2e       	mov	r3, r31
 8d2:	2a e0       	ldi	r18, 0x0A	; 10
 8d4:	30 e0       	ldi	r19, 0x00	; 0
 8d6:	a3 01       	movw	r20, r6
 8d8:	0e 94 93 05 	call	0xb26	; 0xb26 <__ultoa_invert>
 8dc:	88 2e       	mov	r8, r24
 8de:	86 18       	sub	r8, r6
 8e0:	45 c0       	rjmp	.+138    	; 0x96c <vfprintf+0x2ac>
 8e2:	85 37       	cpi	r24, 0x75	; 117
 8e4:	31 f4       	brne	.+12     	; 0x8f2 <vfprintf+0x232>
 8e6:	23 2d       	mov	r18, r3
 8e8:	2f 7e       	andi	r18, 0xEF	; 239
 8ea:	b2 2e       	mov	r11, r18
 8ec:	2a e0       	ldi	r18, 0x0A	; 10
 8ee:	30 e0       	ldi	r19, 0x00	; 0
 8f0:	25 c0       	rjmp	.+74     	; 0x93c <vfprintf+0x27c>
 8f2:	93 2d       	mov	r25, r3
 8f4:	99 7f       	andi	r25, 0xF9	; 249
 8f6:	b9 2e       	mov	r11, r25
 8f8:	8f 36       	cpi	r24, 0x6F	; 111
 8fa:	c1 f0       	breq	.+48     	; 0x92c <vfprintf+0x26c>
 8fc:	18 f4       	brcc	.+6      	; 0x904 <vfprintf+0x244>
 8fe:	88 35       	cpi	r24, 0x58	; 88
 900:	79 f0       	breq	.+30     	; 0x920 <vfprintf+0x260>
 902:	b5 c0       	rjmp	.+362    	; 0xa6e <vfprintf+0x3ae>
 904:	80 37       	cpi	r24, 0x70	; 112
 906:	19 f0       	breq	.+6      	; 0x90e <vfprintf+0x24e>
 908:	88 37       	cpi	r24, 0x78	; 120
 90a:	21 f0       	breq	.+8      	; 0x914 <vfprintf+0x254>
 90c:	b0 c0       	rjmp	.+352    	; 0xa6e <vfprintf+0x3ae>
 90e:	e9 2f       	mov	r30, r25
 910:	e0 61       	ori	r30, 0x10	; 16
 912:	be 2e       	mov	r11, r30
 914:	b4 fe       	sbrs	r11, 4
 916:	0d c0       	rjmp	.+26     	; 0x932 <vfprintf+0x272>
 918:	fb 2d       	mov	r31, r11
 91a:	f4 60       	ori	r31, 0x04	; 4
 91c:	bf 2e       	mov	r11, r31
 91e:	09 c0       	rjmp	.+18     	; 0x932 <vfprintf+0x272>
 920:	34 fe       	sbrs	r3, 4
 922:	0a c0       	rjmp	.+20     	; 0x938 <vfprintf+0x278>
 924:	29 2f       	mov	r18, r25
 926:	26 60       	ori	r18, 0x06	; 6
 928:	b2 2e       	mov	r11, r18
 92a:	06 c0       	rjmp	.+12     	; 0x938 <vfprintf+0x278>
 92c:	28 e0       	ldi	r18, 0x08	; 8
 92e:	30 e0       	ldi	r19, 0x00	; 0
 930:	05 c0       	rjmp	.+10     	; 0x93c <vfprintf+0x27c>
 932:	20 e1       	ldi	r18, 0x10	; 16
 934:	30 e0       	ldi	r19, 0x00	; 0
 936:	02 c0       	rjmp	.+4      	; 0x93c <vfprintf+0x27c>
 938:	20 e1       	ldi	r18, 0x10	; 16
 93a:	32 e0       	ldi	r19, 0x02	; 2
 93c:	f8 01       	movw	r30, r16
 93e:	b7 fe       	sbrs	r11, 7
 940:	07 c0       	rjmp	.+14     	; 0x950 <vfprintf+0x290>
 942:	60 81       	ld	r22, Z
 944:	71 81       	ldd	r23, Z+1	; 0x01
 946:	82 81       	ldd	r24, Z+2	; 0x02
 948:	93 81       	ldd	r25, Z+3	; 0x03
 94a:	0c 5f       	subi	r16, 0xFC	; 252
 94c:	1f 4f       	sbci	r17, 0xFF	; 255
 94e:	06 c0       	rjmp	.+12     	; 0x95c <vfprintf+0x29c>
 950:	60 81       	ld	r22, Z
 952:	71 81       	ldd	r23, Z+1	; 0x01
 954:	80 e0       	ldi	r24, 0x00	; 0
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	0e 5f       	subi	r16, 0xFE	; 254
 95a:	1f 4f       	sbci	r17, 0xFF	; 255
 95c:	a3 01       	movw	r20, r6
 95e:	0e 94 93 05 	call	0xb26	; 0xb26 <__ultoa_invert>
 962:	88 2e       	mov	r8, r24
 964:	86 18       	sub	r8, r6
 966:	fb 2d       	mov	r31, r11
 968:	ff 77       	andi	r31, 0x7F	; 127
 96a:	3f 2e       	mov	r3, r31
 96c:	36 fe       	sbrs	r3, 6
 96e:	0d c0       	rjmp	.+26     	; 0x98a <vfprintf+0x2ca>
 970:	23 2d       	mov	r18, r3
 972:	2e 7f       	andi	r18, 0xFE	; 254
 974:	a2 2e       	mov	r10, r18
 976:	89 14       	cp	r8, r9
 978:	58 f4       	brcc	.+22     	; 0x990 <vfprintf+0x2d0>
 97a:	34 fe       	sbrs	r3, 4
 97c:	0b c0       	rjmp	.+22     	; 0x994 <vfprintf+0x2d4>
 97e:	32 fc       	sbrc	r3, 2
 980:	09 c0       	rjmp	.+18     	; 0x994 <vfprintf+0x2d4>
 982:	83 2d       	mov	r24, r3
 984:	8e 7e       	andi	r24, 0xEE	; 238
 986:	a8 2e       	mov	r10, r24
 988:	05 c0       	rjmp	.+10     	; 0x994 <vfprintf+0x2d4>
 98a:	b8 2c       	mov	r11, r8
 98c:	a3 2c       	mov	r10, r3
 98e:	03 c0       	rjmp	.+6      	; 0x996 <vfprintf+0x2d6>
 990:	b8 2c       	mov	r11, r8
 992:	01 c0       	rjmp	.+2      	; 0x996 <vfprintf+0x2d6>
 994:	b9 2c       	mov	r11, r9
 996:	a4 fe       	sbrs	r10, 4
 998:	0f c0       	rjmp	.+30     	; 0x9b8 <vfprintf+0x2f8>
 99a:	fe 01       	movw	r30, r28
 99c:	e8 0d       	add	r30, r8
 99e:	f1 1d       	adc	r31, r1
 9a0:	80 81       	ld	r24, Z
 9a2:	80 33       	cpi	r24, 0x30	; 48
 9a4:	21 f4       	brne	.+8      	; 0x9ae <vfprintf+0x2ee>
 9a6:	9a 2d       	mov	r25, r10
 9a8:	99 7e       	andi	r25, 0xE9	; 233
 9aa:	a9 2e       	mov	r10, r25
 9ac:	09 c0       	rjmp	.+18     	; 0x9c0 <vfprintf+0x300>
 9ae:	a2 fe       	sbrs	r10, 2
 9b0:	06 c0       	rjmp	.+12     	; 0x9be <vfprintf+0x2fe>
 9b2:	b3 94       	inc	r11
 9b4:	b3 94       	inc	r11
 9b6:	04 c0       	rjmp	.+8      	; 0x9c0 <vfprintf+0x300>
 9b8:	8a 2d       	mov	r24, r10
 9ba:	86 78       	andi	r24, 0x86	; 134
 9bc:	09 f0       	breq	.+2      	; 0x9c0 <vfprintf+0x300>
 9be:	b3 94       	inc	r11
 9c0:	a3 fc       	sbrc	r10, 3
 9c2:	11 c0       	rjmp	.+34     	; 0x9e6 <vfprintf+0x326>
 9c4:	a0 fe       	sbrs	r10, 0
 9c6:	06 c0       	rjmp	.+12     	; 0x9d4 <vfprintf+0x314>
 9c8:	b2 14       	cp	r11, r2
 9ca:	88 f4       	brcc	.+34     	; 0x9ee <vfprintf+0x32e>
 9cc:	28 0c       	add	r2, r8
 9ce:	92 2c       	mov	r9, r2
 9d0:	9b 18       	sub	r9, r11
 9d2:	0e c0       	rjmp	.+28     	; 0x9f0 <vfprintf+0x330>
 9d4:	b2 14       	cp	r11, r2
 9d6:	60 f4       	brcc	.+24     	; 0x9f0 <vfprintf+0x330>
 9d8:	b6 01       	movw	r22, r12
 9da:	80 e2       	ldi	r24, 0x20	; 32
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 9e2:	b3 94       	inc	r11
 9e4:	f7 cf       	rjmp	.-18     	; 0x9d4 <vfprintf+0x314>
 9e6:	b2 14       	cp	r11, r2
 9e8:	18 f4       	brcc	.+6      	; 0x9f0 <vfprintf+0x330>
 9ea:	2b 18       	sub	r2, r11
 9ec:	02 c0       	rjmp	.+4      	; 0x9f2 <vfprintf+0x332>
 9ee:	98 2c       	mov	r9, r8
 9f0:	21 2c       	mov	r2, r1
 9f2:	a4 fe       	sbrs	r10, 4
 9f4:	10 c0       	rjmp	.+32     	; 0xa16 <vfprintf+0x356>
 9f6:	b6 01       	movw	r22, r12
 9f8:	80 e3       	ldi	r24, 0x30	; 48
 9fa:	90 e0       	ldi	r25, 0x00	; 0
 9fc:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 a00:	a2 fe       	sbrs	r10, 2
 a02:	17 c0       	rjmp	.+46     	; 0xa32 <vfprintf+0x372>
 a04:	a1 fc       	sbrc	r10, 1
 a06:	03 c0       	rjmp	.+6      	; 0xa0e <vfprintf+0x34e>
 a08:	88 e7       	ldi	r24, 0x78	; 120
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	02 c0       	rjmp	.+4      	; 0xa12 <vfprintf+0x352>
 a0e:	88 e5       	ldi	r24, 0x58	; 88
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	b6 01       	movw	r22, r12
 a14:	0c c0       	rjmp	.+24     	; 0xa2e <vfprintf+0x36e>
 a16:	8a 2d       	mov	r24, r10
 a18:	86 78       	andi	r24, 0x86	; 134
 a1a:	59 f0       	breq	.+22     	; 0xa32 <vfprintf+0x372>
 a1c:	a1 fe       	sbrs	r10, 1
 a1e:	02 c0       	rjmp	.+4      	; 0xa24 <vfprintf+0x364>
 a20:	8b e2       	ldi	r24, 0x2B	; 43
 a22:	01 c0       	rjmp	.+2      	; 0xa26 <vfprintf+0x366>
 a24:	80 e2       	ldi	r24, 0x20	; 32
 a26:	a7 fc       	sbrc	r10, 7
 a28:	8d e2       	ldi	r24, 0x2D	; 45
 a2a:	b6 01       	movw	r22, r12
 a2c:	90 e0       	ldi	r25, 0x00	; 0
 a2e:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 a32:	89 14       	cp	r8, r9
 a34:	38 f4       	brcc	.+14     	; 0xa44 <vfprintf+0x384>
 a36:	b6 01       	movw	r22, r12
 a38:	80 e3       	ldi	r24, 0x30	; 48
 a3a:	90 e0       	ldi	r25, 0x00	; 0
 a3c:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 a40:	9a 94       	dec	r9
 a42:	f7 cf       	rjmp	.-18     	; 0xa32 <vfprintf+0x372>
 a44:	8a 94       	dec	r8
 a46:	f3 01       	movw	r30, r6
 a48:	e8 0d       	add	r30, r8
 a4a:	f1 1d       	adc	r31, r1
 a4c:	80 81       	ld	r24, Z
 a4e:	b6 01       	movw	r22, r12
 a50:	90 e0       	ldi	r25, 0x00	; 0
 a52:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 a56:	81 10       	cpse	r8, r1
 a58:	f5 cf       	rjmp	.-22     	; 0xa44 <vfprintf+0x384>
 a5a:	22 20       	and	r2, r2
 a5c:	09 f4       	brne	.+2      	; 0xa60 <vfprintf+0x3a0>
 a5e:	42 ce       	rjmp	.-892    	; 0x6e4 <vfprintf+0x24>
 a60:	b6 01       	movw	r22, r12
 a62:	80 e2       	ldi	r24, 0x20	; 32
 a64:	90 e0       	ldi	r25, 0x00	; 0
 a66:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 a6a:	2a 94       	dec	r2
 a6c:	f6 cf       	rjmp	.-20     	; 0xa5a <vfprintf+0x39a>
 a6e:	f6 01       	movw	r30, r12
 a70:	86 81       	ldd	r24, Z+6	; 0x06
 a72:	97 81       	ldd	r25, Z+7	; 0x07
 a74:	02 c0       	rjmp	.+4      	; 0xa7a <vfprintf+0x3ba>
 a76:	8f ef       	ldi	r24, 0xFF	; 255
 a78:	9f ef       	ldi	r25, 0xFF	; 255
 a7a:	2b 96       	adiw	r28, 0x0b	; 11
 a7c:	e2 e1       	ldi	r30, 0x12	; 18
 a7e:	0c 94 0d 06 	jmp	0xc1a	; 0xc1a <__epilogue_restores__>

00000a82 <strnlen_P>:
 a82:	fc 01       	movw	r30, r24
 a84:	05 90       	lpm	r0, Z+
 a86:	61 50       	subi	r22, 0x01	; 1
 a88:	70 40       	sbci	r23, 0x00	; 0
 a8a:	01 10       	cpse	r0, r1
 a8c:	d8 f7       	brcc	.-10     	; 0xa84 <strnlen_P+0x2>
 a8e:	80 95       	com	r24
 a90:	90 95       	com	r25
 a92:	8e 0f       	add	r24, r30
 a94:	9f 1f       	adc	r25, r31
 a96:	08 95       	ret

00000a98 <strnlen>:
 a98:	fc 01       	movw	r30, r24
 a9a:	61 50       	subi	r22, 0x01	; 1
 a9c:	70 40       	sbci	r23, 0x00	; 0
 a9e:	01 90       	ld	r0, Z+
 aa0:	01 10       	cpse	r0, r1
 aa2:	d8 f7       	brcc	.-10     	; 0xa9a <strnlen+0x2>
 aa4:	80 95       	com	r24
 aa6:	90 95       	com	r25
 aa8:	8e 0f       	add	r24, r30
 aaa:	9f 1f       	adc	r25, r31
 aac:	08 95       	ret

00000aae <fputc>:
 aae:	0f 93       	push	r16
 ab0:	1f 93       	push	r17
 ab2:	cf 93       	push	r28
 ab4:	df 93       	push	r29
 ab6:	fb 01       	movw	r30, r22
 ab8:	23 81       	ldd	r18, Z+3	; 0x03
 aba:	21 fd       	sbrc	r18, 1
 abc:	03 c0       	rjmp	.+6      	; 0xac4 <fputc+0x16>
 abe:	8f ef       	ldi	r24, 0xFF	; 255
 ac0:	9f ef       	ldi	r25, 0xFF	; 255
 ac2:	2c c0       	rjmp	.+88     	; 0xb1c <fputc+0x6e>
 ac4:	22 ff       	sbrs	r18, 2
 ac6:	16 c0       	rjmp	.+44     	; 0xaf4 <fputc+0x46>
 ac8:	46 81       	ldd	r20, Z+6	; 0x06
 aca:	57 81       	ldd	r21, Z+7	; 0x07
 acc:	24 81       	ldd	r18, Z+4	; 0x04
 ace:	35 81       	ldd	r19, Z+5	; 0x05
 ad0:	42 17       	cp	r20, r18
 ad2:	53 07       	cpc	r21, r19
 ad4:	44 f4       	brge	.+16     	; 0xae6 <fputc+0x38>
 ad6:	a0 81       	ld	r26, Z
 ad8:	b1 81       	ldd	r27, Z+1	; 0x01
 ada:	9d 01       	movw	r18, r26
 adc:	2f 5f       	subi	r18, 0xFF	; 255
 ade:	3f 4f       	sbci	r19, 0xFF	; 255
 ae0:	31 83       	std	Z+1, r19	; 0x01
 ae2:	20 83       	st	Z, r18
 ae4:	8c 93       	st	X, r24
 ae6:	26 81       	ldd	r18, Z+6	; 0x06
 ae8:	37 81       	ldd	r19, Z+7	; 0x07
 aea:	2f 5f       	subi	r18, 0xFF	; 255
 aec:	3f 4f       	sbci	r19, 0xFF	; 255
 aee:	37 83       	std	Z+7, r19	; 0x07
 af0:	26 83       	std	Z+6, r18	; 0x06
 af2:	14 c0       	rjmp	.+40     	; 0xb1c <fputc+0x6e>
 af4:	8b 01       	movw	r16, r22
 af6:	ec 01       	movw	r28, r24
 af8:	fb 01       	movw	r30, r22
 afa:	00 84       	ldd	r0, Z+8	; 0x08
 afc:	f1 85       	ldd	r31, Z+9	; 0x09
 afe:	e0 2d       	mov	r30, r0
 b00:	09 95       	icall
 b02:	89 2b       	or	r24, r25
 b04:	e1 f6       	brne	.-72     	; 0xabe <fputc+0x10>
 b06:	d8 01       	movw	r26, r16
 b08:	16 96       	adiw	r26, 0x06	; 6
 b0a:	8d 91       	ld	r24, X+
 b0c:	9c 91       	ld	r25, X
 b0e:	17 97       	sbiw	r26, 0x07	; 7
 b10:	01 96       	adiw	r24, 0x01	; 1
 b12:	17 96       	adiw	r26, 0x07	; 7
 b14:	9c 93       	st	X, r25
 b16:	8e 93       	st	-X, r24
 b18:	16 97       	sbiw	r26, 0x06	; 6
 b1a:	ce 01       	movw	r24, r28
 b1c:	df 91       	pop	r29
 b1e:	cf 91       	pop	r28
 b20:	1f 91       	pop	r17
 b22:	0f 91       	pop	r16
 b24:	08 95       	ret

00000b26 <__ultoa_invert>:
 b26:	fa 01       	movw	r30, r20
 b28:	aa 27       	eor	r26, r26
 b2a:	28 30       	cpi	r18, 0x08	; 8
 b2c:	51 f1       	breq	.+84     	; 0xb82 <__ultoa_invert+0x5c>
 b2e:	20 31       	cpi	r18, 0x10	; 16
 b30:	81 f1       	breq	.+96     	; 0xb92 <__ultoa_invert+0x6c>
 b32:	e8 94       	clt
 b34:	6f 93       	push	r22
 b36:	6e 7f       	andi	r22, 0xFE	; 254
 b38:	6e 5f       	subi	r22, 0xFE	; 254
 b3a:	7f 4f       	sbci	r23, 0xFF	; 255
 b3c:	8f 4f       	sbci	r24, 0xFF	; 255
 b3e:	9f 4f       	sbci	r25, 0xFF	; 255
 b40:	af 4f       	sbci	r26, 0xFF	; 255
 b42:	b1 e0       	ldi	r27, 0x01	; 1
 b44:	3e d0       	rcall	.+124    	; 0xbc2 <__ultoa_invert+0x9c>
 b46:	b4 e0       	ldi	r27, 0x04	; 4
 b48:	3c d0       	rcall	.+120    	; 0xbc2 <__ultoa_invert+0x9c>
 b4a:	67 0f       	add	r22, r23
 b4c:	78 1f       	adc	r23, r24
 b4e:	89 1f       	adc	r24, r25
 b50:	9a 1f       	adc	r25, r26
 b52:	a1 1d       	adc	r26, r1
 b54:	68 0f       	add	r22, r24
 b56:	79 1f       	adc	r23, r25
 b58:	8a 1f       	adc	r24, r26
 b5a:	91 1d       	adc	r25, r1
 b5c:	a1 1d       	adc	r26, r1
 b5e:	6a 0f       	add	r22, r26
 b60:	71 1d       	adc	r23, r1
 b62:	81 1d       	adc	r24, r1
 b64:	91 1d       	adc	r25, r1
 b66:	a1 1d       	adc	r26, r1
 b68:	20 d0       	rcall	.+64     	; 0xbaa <__ultoa_invert+0x84>
 b6a:	09 f4       	brne	.+2      	; 0xb6e <__ultoa_invert+0x48>
 b6c:	68 94       	set
 b6e:	3f 91       	pop	r19
 b70:	2a e0       	ldi	r18, 0x0A	; 10
 b72:	26 9f       	mul	r18, r22
 b74:	11 24       	eor	r1, r1
 b76:	30 19       	sub	r19, r0
 b78:	30 5d       	subi	r19, 0xD0	; 208
 b7a:	31 93       	st	Z+, r19
 b7c:	de f6       	brtc	.-74     	; 0xb34 <__ultoa_invert+0xe>
 b7e:	cf 01       	movw	r24, r30
 b80:	08 95       	ret
 b82:	46 2f       	mov	r20, r22
 b84:	47 70       	andi	r20, 0x07	; 7
 b86:	40 5d       	subi	r20, 0xD0	; 208
 b88:	41 93       	st	Z+, r20
 b8a:	b3 e0       	ldi	r27, 0x03	; 3
 b8c:	0f d0       	rcall	.+30     	; 0xbac <__ultoa_invert+0x86>
 b8e:	c9 f7       	brne	.-14     	; 0xb82 <__ultoa_invert+0x5c>
 b90:	f6 cf       	rjmp	.-20     	; 0xb7e <__ultoa_invert+0x58>
 b92:	46 2f       	mov	r20, r22
 b94:	4f 70       	andi	r20, 0x0F	; 15
 b96:	40 5d       	subi	r20, 0xD0	; 208
 b98:	4a 33       	cpi	r20, 0x3A	; 58
 b9a:	18 f0       	brcs	.+6      	; 0xba2 <__ultoa_invert+0x7c>
 b9c:	49 5d       	subi	r20, 0xD9	; 217
 b9e:	31 fd       	sbrc	r19, 1
 ba0:	40 52       	subi	r20, 0x20	; 32
 ba2:	41 93       	st	Z+, r20
 ba4:	02 d0       	rcall	.+4      	; 0xbaa <__ultoa_invert+0x84>
 ba6:	a9 f7       	brne	.-22     	; 0xb92 <__ultoa_invert+0x6c>
 ba8:	ea cf       	rjmp	.-44     	; 0xb7e <__ultoa_invert+0x58>
 baa:	b4 e0       	ldi	r27, 0x04	; 4
 bac:	a6 95       	lsr	r26
 bae:	97 95       	ror	r25
 bb0:	87 95       	ror	r24
 bb2:	77 95       	ror	r23
 bb4:	67 95       	ror	r22
 bb6:	ba 95       	dec	r27
 bb8:	c9 f7       	brne	.-14     	; 0xbac <__ultoa_invert+0x86>
 bba:	00 97       	sbiw	r24, 0x00	; 0
 bbc:	61 05       	cpc	r22, r1
 bbe:	71 05       	cpc	r23, r1
 bc0:	08 95       	ret
 bc2:	9b 01       	movw	r18, r22
 bc4:	ac 01       	movw	r20, r24
 bc6:	0a 2e       	mov	r0, r26
 bc8:	06 94       	lsr	r0
 bca:	57 95       	ror	r21
 bcc:	47 95       	ror	r20
 bce:	37 95       	ror	r19
 bd0:	27 95       	ror	r18
 bd2:	ba 95       	dec	r27
 bd4:	c9 f7       	brne	.-14     	; 0xbc8 <__ultoa_invert+0xa2>
 bd6:	62 0f       	add	r22, r18
 bd8:	73 1f       	adc	r23, r19
 bda:	84 1f       	adc	r24, r20
 bdc:	95 1f       	adc	r25, r21
 bde:	a0 1d       	adc	r26, r0
 be0:	08 95       	ret

00000be2 <__prologue_saves__>:
 be2:	2f 92       	push	r2
 be4:	3f 92       	push	r3
 be6:	4f 92       	push	r4
 be8:	5f 92       	push	r5
 bea:	6f 92       	push	r6
 bec:	7f 92       	push	r7
 bee:	8f 92       	push	r8
 bf0:	9f 92       	push	r9
 bf2:	af 92       	push	r10
 bf4:	bf 92       	push	r11
 bf6:	cf 92       	push	r12
 bf8:	df 92       	push	r13
 bfa:	ef 92       	push	r14
 bfc:	ff 92       	push	r15
 bfe:	0f 93       	push	r16
 c00:	1f 93       	push	r17
 c02:	cf 93       	push	r28
 c04:	df 93       	push	r29
 c06:	cd b7       	in	r28, 0x3d	; 61
 c08:	de b7       	in	r29, 0x3e	; 62
 c0a:	ca 1b       	sub	r28, r26
 c0c:	db 0b       	sbc	r29, r27
 c0e:	0f b6       	in	r0, 0x3f	; 63
 c10:	f8 94       	cli
 c12:	de bf       	out	0x3e, r29	; 62
 c14:	0f be       	out	0x3f, r0	; 63
 c16:	cd bf       	out	0x3d, r28	; 61
 c18:	09 94       	ijmp

00000c1a <__epilogue_restores__>:
 c1a:	2a 88       	ldd	r2, Y+18	; 0x12
 c1c:	39 88       	ldd	r3, Y+17	; 0x11
 c1e:	48 88       	ldd	r4, Y+16	; 0x10
 c20:	5f 84       	ldd	r5, Y+15	; 0x0f
 c22:	6e 84       	ldd	r6, Y+14	; 0x0e
 c24:	7d 84       	ldd	r7, Y+13	; 0x0d
 c26:	8c 84       	ldd	r8, Y+12	; 0x0c
 c28:	9b 84       	ldd	r9, Y+11	; 0x0b
 c2a:	aa 84       	ldd	r10, Y+10	; 0x0a
 c2c:	b9 84       	ldd	r11, Y+9	; 0x09
 c2e:	c8 84       	ldd	r12, Y+8	; 0x08
 c30:	df 80       	ldd	r13, Y+7	; 0x07
 c32:	ee 80       	ldd	r14, Y+6	; 0x06
 c34:	fd 80       	ldd	r15, Y+5	; 0x05
 c36:	0c 81       	ldd	r16, Y+4	; 0x04
 c38:	1b 81       	ldd	r17, Y+3	; 0x03
 c3a:	aa 81       	ldd	r26, Y+2	; 0x02
 c3c:	b9 81       	ldd	r27, Y+1	; 0x01
 c3e:	ce 0f       	add	r28, r30
 c40:	d1 1d       	adc	r29, r1
 c42:	0f b6       	in	r0, 0x3f	; 63
 c44:	f8 94       	cli
 c46:	de bf       	out	0x3e, r29	; 62
 c48:	0f be       	out	0x3f, r0	; 63
 c4a:	cd bf       	out	0x3d, r28	; 61
 c4c:	ed 01       	movw	r28, r26
 c4e:	08 95       	ret

00000c50 <_exit>:
 c50:	f8 94       	cli

00000c52 <__stop_program>:
 c52:	ff cf       	rjmp	.-2      	; 0xc52 <__stop_program>
